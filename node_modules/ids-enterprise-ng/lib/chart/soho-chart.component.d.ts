/// <reference types="ids-enterprise-typings" />
import { AfterViewInit, ElementRef, OnDestroy, EventEmitter, NgZone, AfterViewChecked } from '@angular/core';
import * as i0 from "@angular/core";
export declare class SohoChartComponent implements AfterViewInit, AfterViewChecked, OnDestroy {
    private elementRef;
    private ngZone;
    set chartOptions(chartOptions: SohoChartOptions);
    set selectedIndex(index: number);
    set dataSet(dataset: SohoDataSet);
    set type(type: ChartTypes);
    set axisLabels(axisLabels: AxisLabels);
    set showLegend(showLegend: boolean);
    set hideLabels(hideLabels: boolean);
    set formatterString(formatterString: string);
    set legendFormatter(legendFormatter: string);
    set chartLabel(chartLabel: ChartLabel);
    set chartredrawOnResizeLabel(redrawOnResize: boolean);
    set chartAnimate(animate: boolean);
    selected: EventEmitter<ChartEvent>;
    unselected: EventEmitter<ChartEvent>;
    rendered: EventEmitter<ChartEvent>;
    /**
     * @todo replace override of native attribute
     */
    contextmenu: EventEmitter<ChartEvent>;
    private _chartOptions;
    private jQueryElement?;
    private chart?;
    private updateRequired;
    constructor(elementRef: ElementRef, ngZone: NgZone);
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    getChartOptions(): SohoChartOptions;
    updated(): void;
    getSelected(): any;
    setSelectRef(ref: any): void;
    setSelectDataIndex(selectIndex: number): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoChartComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SohoChartComponent, "div[soho-chart]", never, { "chartOptions": { "alias": "chartOptions"; "required": false; }; "selectedIndex": { "alias": "selectedIndex"; "required": false; }; "dataSet": { "alias": "dataSet"; "required": false; }; "type": { "alias": "type"; "required": false; }; "axisLabels": { "alias": "axisLabels"; "required": false; }; "showLegend": { "alias": "showLegend"; "required": false; }; "hideLabels": { "alias": "hideLabels"; "required": false; }; "formatterString": { "alias": "formatterString"; "required": false; }; "legendFormatter": { "alias": "legendFormatter"; "required": false; }; "chartLabel": { "alias": "chartLabel"; "required": false; }; "chartredrawOnResizeLabel": { "alias": "chartredrawOnResizeLabel"; "required": false; }; "chartAnimate": { "alias": "chartAnimate"; "required": false; }; }, { "selected": "selected"; "unselected": "unselected"; "rendered": "rendered"; "contextmenu": "contextmenu"; }, never, never, false, never>;
}
