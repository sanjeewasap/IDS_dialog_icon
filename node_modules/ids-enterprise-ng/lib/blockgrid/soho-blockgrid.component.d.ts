/// <reference types="ids-enterprise-typings" />
import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export declare class SohoBlockGridComponent implements AfterViewInit, OnDestroy {
    private element;
    private ngZone;
    /** Options. */
    private options;
    private jQueryElement?;
    private blockgrid?;
    get isBlockGrid(): boolean;
    /** Defines the data to use, must be specified for this component. */
    set dataset(dataset: Array<any> | undefined);
    get dataset(): Array<any> | undefined;
    /** Defines the selection type. */
    set selectable(selectable: SohoBlockGridSelectable);
    get selectable(): SohoBlockGridSelectable;
    /** Defines whether or not paging is active. */
    set paging(paging: boolean | undefined);
    get paging(): boolean | undefined;
    /** Defines the current page size */
    set pagesize(pagesize: number | undefined);
    get pagesize(): number | undefined;
    /** Defines the array of selectable page sizes */
    set pagesizes(pagesizes: Array<number> | undefined);
    get pagesizes(): Array<number> | undefined;
    /** Add extra attributes like id's to the component **/
    set attributes(attributes: Array<Object> | Object | undefined);
    get attributes(): Array<Object> | Object | undefined;
    selected: EventEmitter<Object[]>;
    deselected: EventEmitter<Object[]>;
    activated: EventEmitter<Object[]>;
    deactivated: EventEmitter<Object[]>;
    page: EventEmitter<Object[]>;
    pagesizechange: EventEmitter<Object[]>;
    constructor(element: ElementRef, ngZone: NgZone);
    /** Setup */
    ngAfterViewInit(): void;
    /** Tear Down */
    ngOnDestroy(): void;
    /** Reinit blockgrid settings */
    updated(settings: any): SohoBlockGridComponent;
    activateBlock(idx: number): void;
    deactivateBlock(): void;
    selectBlocks(idx: number[]): void;
    private onSelected;
    private onDeselected;
    private onActivated;
    private onDeactivated;
    private onPage;
    private onPageSizeChange;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoBlockGridComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SohoBlockGridComponent, "[soho-blockgrid]", never, { "dataset": { "alias": "dataset"; "required": false; }; "selectable": { "alias": "selectable"; "required": false; }; "paging": { "alias": "paging"; "required": false; }; "pagesize": { "alias": "pagesize"; "required": false; }; "pagesizes": { "alias": "pagesizes"; "required": false; }; "attributes": { "alias": "attributes"; "required": false; }; }, { "selected": "selected"; "deselected": "deselected"; "activated": "activated"; "deactivated": "deactivated"; "page": "page"; "pagesizechange": "pagesizechange"; }, never, ["*"], false, never>;
}
