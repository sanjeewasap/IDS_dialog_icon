/// <reference types="ids-enterprise-typings" />
import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Angular Wrapper for the SoHo Input Validate Directive.
 *
 * This component searches for an element with the attribute
 * 'data-validate' or 'data-validate-on="submit"'.
 */
export declare class SohoInputValidateDirective implements AfterViewInit, OnDestroy {
    private el;
    private ngZone;
    /**
     * Local variables
     */
    private jQueryElement?;
    private validator?;
    dataValidate: string;
    /**
     * @todo replace override of native attribute
     */
    error: EventEmitter<SohoInputValidateEvent>;
    alert: EventEmitter<SohoInputValidateEvent>;
    /**
     * @todo replace override of native attribute
     */
    success: EventEmitter<SohoInputValidateEvent>;
    icon: EventEmitter<SohoInputValidateEvent>;
    info: EventEmitter<SohoInputValidateEvent>;
    valid: EventEmitter<SohoInputValidateEvent>;
    constructor(el: ElementRef, dataValidateAttr: any, // eslint-disable-line
    ngZone: NgZone);
    /**
     * After the control has been initialised and the view is ready,
     * get the SoHoXi controls to activate any validations.
     */
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * Remove the message from the field if there is one and mark the field valid
     */
    removeMessage(type: any): void;
    /**
     * Trigger validation of the field
     */
    validate(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoInputValidateDirective, [null, { attribute: "data-validate"; }, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SohoInputValidateDirective, "form[soho-input-validate], input[soho-input-validate], input[data-validate], input[data-validate-on=\"submit\"], textarea[data-validate], select[data-validate]", never, { "dataValidate": { "alias": "data-validate"; "required": false; }; }, { "error": "error"; "alert": "alert"; "success": "success"; "icon": "icon"; "info": "info"; "valid": "valid"; }, never, never, false, never>;
}
