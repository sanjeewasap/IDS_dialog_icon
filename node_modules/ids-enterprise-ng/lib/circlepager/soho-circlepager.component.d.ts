import { AfterViewChecked, AfterViewInit, ElementRef, NgZone, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export declare class SohoCirclepagerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {
    private element;
    private ngZone;
    /** Options. */
    private settings;
    get isCirclePager(): boolean;
    /** The number of slides to show in one view / pane. */
    set slidesToShow(value: number);
    /** First showing slide/group, an 0-based integer */
    set startingSlide(value: number);
    /** Setting loop: true will loop back after next/previous reached to end */
    set loop(value: boolean);
    private jQueryElement?;
    private circlepager?;
    /** Add extra attributes like id's to the component **/
    set attributes(attributes: Array<Object> | Object);
    private updateRequired;
    constructor(element: ElementRef, ngZone: NgZone);
    /** Setup */
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    /** Tear Down */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoCirclepagerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SohoCirclepagerComponent, "[soho-circlepager]", never, { "slidesToShow": { "alias": "slidesToShow"; "required": false; }; "startingSlide": { "alias": "startingSlide"; "required": false; }; "loop": { "alias": "loop"; "required": false; }; "attributes": { "alias": "attributes"; "required": false; }; }, {}, never, ["*"], false, never>;
}
