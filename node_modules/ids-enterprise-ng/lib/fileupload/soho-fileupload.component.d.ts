/// <reference types="ids-enterprise-typings" />
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, NgZone } from '@angular/core';
import * as i0 from "@angular/core";
export declare class SohoFileUploadComponent implements AfterViewInit, OnDestroy {
    private element;
    private changeDetectorRef;
    private ngZone;
    get isFileUpload(): boolean;
    get isFileUploadType(): string;
    /**
     * Local variables
     */
    isDisabled?: boolean;
    isReadOnly?: boolean;
    set disabled(value: boolean | undefined);
    get disabled(): boolean | undefined;
    set readonly(value: boolean | undefined);
    get readonly(): boolean | undefined;
    /**
     * Called when the fileupload value changes
     *
     * @todo replace override of native attribute
     */
    change: EventEmitter<SohoFileUploadEvent>;
    private jQueryElement?;
    private fileUpload?;
    private options;
    constructor(element: ElementRef, changeDetectorRef: ChangeDetectorRef, ngZone: NgZone);
    /** Called when the value changes. */
    changeEvent: EventEmitter<SohoFileUploadEvent>;
    set attributes(attributes: Array<Object> | Object | undefined);
    get attributes(): Array<Object> | Object | undefined;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    clearUploadFile(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoFileUploadComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SohoFileUploadComponent, "input[soho-fileupload]", never, { "disabled": { "alias": "disabled"; "required": false; }; "readonly": { "alias": "readonly"; "required": false; }; "attributes": { "alias": "attributes"; "required": false; }; }, { "change": "change"; "changeEvent": "changeEvent"; }, never, ["*"], false, never>;
}
