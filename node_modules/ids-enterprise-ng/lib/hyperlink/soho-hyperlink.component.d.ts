/// <reference types="ids-enterprise-typings" />
import { AfterViewInit, ElementRef, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export type SohoHyperlinkType = 'show-visited' | 'forward-caret' | 'back-caret';
export declare class SohoHyperlinkComponent implements AfterViewInit {
    private element;
    static SHOWVISITED: SohoHyperlinkType;
    static DIRECTIONAL: SohoHyperlinkType;
    static BACK: SohoHyperlinkType;
    /**
     * The type of the hyperlink, defaulting to 'hide-focus'.
     *
     * @todo replace override of native attribute
     */
    set sohoHyperlink(type: SohoHyperlinkType);
    icon?: string;
    /**
     * @todo replace override of native attribute
     */
    change?: EventEmitter<SohoHyperlinkEvent>;
    hyperLinkClass: boolean;
    get showVisitedClass(): true | undefined;
    get directionalClass(): true | undefined;
    get backClass(): true | undefined;
    href?: string;
    disabled?: boolean;
    isCaretRight?: boolean;
    isCaretLeft?: boolean;
    private hyperlinkType?;
    private jQueryElement?;
    constructor(element: ElementRef);
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoHyperlinkComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SohoHyperlinkComponent, "a[soho-hyperlink]", never, { "sohoHyperlink": { "alias": "soho-hyperlink"; "required": false; }; "icon": { "alias": "icon"; "required": false; }; "href": { "alias": "href"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "isCaretRight": { "alias": "isCaretRight"; "required": false; }; "isCaretLeft": { "alias": "isCaretLeft"; "required": false; }; }, { "change": "change"; }, never, ["*"], false, never>;
}
