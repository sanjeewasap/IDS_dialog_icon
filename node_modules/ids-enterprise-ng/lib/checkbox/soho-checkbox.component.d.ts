/// <reference types="ids-enterprise-typings" />
import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Wrapper for soho checkboxes.
 *
 * Note the control must have type="checkbox" for the values to be passed
 * to and from any ng model instances.
 */
export declare class SohoCheckBoxComponent implements AfterViewInit, OnDestroy {
    private elementRef;
    private ngZone;
    /**
     * Indicate that the checkbox is partial
     */
    partial?: boolean;
    /**
     * Indicate that the checkbox is displayed as a switch.
     */
    switch: boolean;
    /**
     * Bind attributes to the host input element
     */
    get isCheckBoxType(): string;
    get isCheckBox(): boolean;
    get isPartialCheckBox(): boolean;
    get isPartialAriaChecked(): "mixed" | null;
    get isSwitch(): boolean;
    checked?: boolean;
    /** Called when the checkbox value changes. */
    changeEvent: EventEmitter<SohoCheckBoxEvent>;
    /** Called when the checkbox updates in some way. */
    updateEvent: EventEmitter<SohoCheckBoxEvent>;
    /**
     * Local variables
     */
    private jQueryElement?;
    /**
     * Constructor.
     *
     * @param elementRef - the element matching the component's selector.
     */
    constructor(elementRef: ElementRef, ngZone: NgZone);
    ngAfterViewInit(): void;
    /**
     * Destructor.
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoCheckBoxComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SohoCheckBoxComponent, "[soho-checkbox]", never, { "partial": { "alias": "partial"; "required": false; }; "switch": { "alias": "switch"; "required": false; }; "checked": { "alias": "checked"; "required": false; }; }, { "changeEvent": "changeEvent"; "updateEvent": "updateEvent"; }, never, ["*"], false, never>;
}
