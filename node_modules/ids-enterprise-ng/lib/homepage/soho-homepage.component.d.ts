/// <reference types="ids-enterprise-typings" />
/// <reference types="jquery" />
/// <reference types="jquery" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
/// <reference types="ids-enterprise-typings" />
import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export declare class SohoHomePageComponent implements AfterViewInit, OnDestroy {
    private elementRef;
    private ngZone;
    /**
     * @todo replace override of native attribute
     */
    resize: EventEmitter<SohoHomePageEvent>;
    resizecard: EventEmitter<SohoHomePageEditEvent>;
    reordercard: EventEmitter<SohoHomePageEditEvent>;
    removecard: EventEmitter<SohoHomePageEditEvent>;
    set homePageOptions(homePageOptions: SohoHomePageOptions);
    get homePageOptions(): SohoHomePageOptions;
    /**
     * Whether to animate widget placement
     */
    set animate(animate: boolean | undefined);
    get animate(): boolean | undefined;
    /**
     * Sets the maximum number of widget columns
     */
    set columns(columns: number | undefined);
    get columns(): number | undefined;
    /**
     * Set edit for rearranging/reordering cards.
     */
    set editing(editing: boolean | undefined);
    get editing(): boolean | undefined;
    /**
     * Specify the speed at which an animation progresses at different points within the animation.
     */
    set easing(easing: EasingType | undefined);
    get easing(): EasingType | undefined;
    /**
     * Sets gutter size in between widgets
     */
    set gutterSize(gutterSize: number | undefined);
    get gutterSize(): number | undefined;
    /**
     * Sets the default widget width in pixels
     */
    set widgetWidth(widgetWidth: number | undefined);
    get widgetWidth(): number | undefined;
    /**
     * Sets the default widget height in pixels
     */
    set widgetHeight(widgetHeight: number | undefined);
    get widgetHeight(): number | undefined;
    /**
     * Sets the widgets to smaller size
     */
    set useSmall(useSmall: boolean | undefined);
    get useSmall(): boolean | undefined;
    /**
     * this ...
     */
    set timeout(timeout: number | undefined);
    get timeout(): number | undefined;
    /**
     * Event fired before a card is removed
     *
     * @param beforeSelectFunction Function callback
     */
    set onBeforeRemoveCard(beforeSelectFunction: SohoHomePageBeforeRemoveCardFunction | undefined);
    get onBeforeRemoveCard(): SohoHomePageBeforeRemoveCardFunction | undefined;
    isHomepage: boolean;
    private jQueryElement?;
    private homepage?;
    private _homePageOptions;
    constructor(elementRef: ElementRef, ngZone: NgZone);
    /**
     * Reset columns to their defaults (used on restore menu item).
     */
    refresh(animate?: boolean): void;
    ngAfterViewInit(): void;
    onResize(columns: number, metadata: object): void;
    onResizeCard(card: JQuery, metadata: object): void;
    onReorderCard(card: JQuery, metadata: object): void;
    onRemoveCard(card: JQuery, metadata: object): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoHomePageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SohoHomePageComponent, "div[soho-homepage]", never, { "homePageOptions": { "alias": "homePageOptions"; "required": false; }; "animate": { "alias": "animate"; "required": false; }; "columns": { "alias": "columns"; "required": false; }; "editing": { "alias": "editing"; "required": false; }; "easing": { "alias": "easing"; "required": false; }; "gutterSize": { "alias": "gutterSize"; "required": false; }; "widgetWidth": { "alias": "widgetWidth"; "required": false; }; "widgetHeight": { "alias": "widgetHeight"; "required": false; }; "useSmall": { "alias": "useSmall"; "required": false; }; "timeout": { "alias": "timeout"; "required": false; }; "onBeforeRemoveCard": { "alias": "onBeforeRemoveCard"; "required": false; }; }, { "resize": "resize"; "resizecard": "resizecard"; "reordercard": "reordercard"; "removecard": "removecard"; }, never, ["*"], false, never>;
}
