import { AfterViewInit, ElementRef, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export declare class SohoPopDownDirective implements AfterViewInit, OnDestroy {
    private element;
    get isPopdown(): boolean;
    private jQueryElement?;
    private popdown?;
    private popdownOptions;
    set keepOpen(keepOpen: boolean);
    set trigger(trigger: any);
    set autoFocus(autoFocus: boolean);
    set toggleOnFocus(toggleOnFocus: boolean);
    /**
     * Hook to work with tabbing in and out of the popdown.
     */
    set firstLastTab(firstLastTab: any);
    constructor(element: ElementRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    open(): void;
    close(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoPopDownDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SohoPopDownDirective, "[soho-popdown]", never, { "keepOpen": { "alias": "keepOpen"; "required": false; }; "trigger": { "alias": "trigger"; "required": false; }; "autoFocus": { "alias": "autoFocus"; "required": false; }; "toggleOnFocus": { "alias": "toggleOnFocus"; "required": false; }; "firstLastTab": { "alias": "firstLastTab"; "required": false; }; }, {}, never, never, false, never>;
}
