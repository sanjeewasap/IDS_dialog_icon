import { AfterViewChecked, AfterViewInit, ElementRef, NgZone, OnDestroy } from "@angular/core";
import * as i0 from "@angular/core";
export declare class SohoStepChartComponent implements AfterViewInit, AfterViewChecked, OnDestroy {
    private element;
    private ngZone;
    private options;
    get isStepChart(): boolean;
    /** The number of steps to show. */
    set steps(steps: number);
    /** The number of steps complete (linear). */
    set completed(completed: number);
    /** The number of the in progress step (linear). */
    set inProgress(inProgress: number);
    /** The icon to display fx. 'icon-error', 'icon-success' */
    set iconType(iconType: boolean);
    /**
     * The completed text or uses a localized 'N of N Steps complete'.
     *  You can use {0} and {1} to replace n of n in the string.
     */
    set completedText(completedText: string);
    /**
     * The additional text to show on the right. Defaults to none.
     * You can use {0} to replace with the steps remaining count and {1} to replace the number of steps.
     */
    set extraText(extraText: string);
    /** The color to show completed steps. Defaults to primary color. */
    set completedColor(completedColor: string);
    /** The color to steps when all are completed. Defaults to primary color. */
    set allCompletedColor(allCompletedColor: string);
    /** The color to show in-progress steps. Defaults to ruby02. */
    set inProgressColor(inProgressColor: string);
    /** Add extra attributes like id's to the chart elements.
     * For example { name: 'id', value: 'my-unique-id' }
     */
    set attributes(attributes: Array<Object> | Object);
    private jQueryElement?;
    private stepchart?;
    private updateRequired;
    constructor(element: ElementRef, ngZone: NgZone);
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SohoStepChartComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SohoStepChartComponent, "[soho-stepchart]", never, { "steps": { "alias": "steps"; "required": false; }; "completed": { "alias": "completed"; "required": false; }; "inProgress": { "alias": "inProgress"; "required": false; }; "iconType": { "alias": "iconType"; "required": false; }; "completedText": { "alias": "completedText"; "required": false; }; "extraText": { "alias": "extraText"; "required": false; }; "completedColor": { "alias": "completedColor"; "required": false; }; "allCompletedColor": { "alias": "allCompletedColor"; "required": false; }; "inProgressColor": { "alias": "inProgressColor"; "required": false; }; "attributes": { "alias": "attributes"; "required": false; }; }, {}, never, ["*"], false, never>;
}
