import { Component, ChangeDetectionStrategy, HostBinding, Input, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Angular wrapper for the soho wizard tick.
 *
 * This wraps anchor tags annotated with the `soho-wizard-tick`.
 */
export class SohoWizardTickComponent {
    /**
     * For the `href` use the id.
     */
    get hrefAttr() {
        return this.tickId ? '#' + this.tickId : null;
    }
    /**
     * Disable the click handler.
     */
    onClick(event) {
        event.preventDefault();
        event.stopPropagation();
    }
    isCurrentTick() {
        // A step is selected if the element has the current class.
        return this.jQueryElement?.hasClass('current') || false;
    }
    /**
     * Constructor.
     *
     * @param elementRef - the element matching this component.
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        /**
         * Ensure any classes are set correctly.
         */
        this.isWizardTick = true;
        /**
         *
         */
        this.current = false;
        /**
         * Disabled the tick.
         */
        this.disabled = false;
    }
    ngAfterViewInit() {
        // Wrap the "unordered list" element in a jQuery selector.
        this.jQueryElement = jQuery(this.elementRef.nativeElement);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoWizardTickComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.4", type: SohoWizardTickComponent, selector: "a[soho-wizard-tick]", inputs: { shortLabel: "shortLabel", tickId: "tickId", current: "current", disabled: "disabled" }, host: { listeners: { "click": "onClick($event)" }, properties: { "class.tick": "this.isWizardTick", "attr.href": "this.hrefAttr", "attr.tickid": "this.tickId", "class.current": "this.current", "class.is-disabled": "this.disabled" } }, ngImport: i0, template: '<span class="label" attr.data-shortLabel="{{shortLabel}}"><ng-content></ng-content></span>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoWizardTickComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'a[soho-wizard-tick]',
                    template: '<span class="label" attr.data-shortLabel="{{shortLabel}}"><ng-content></ng-content></span>',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { isWizardTick: [{
                type: HostBinding,
                args: ['class.tick']
            }], hrefAttr: [{
                type: HostBinding,
                args: ['attr.href']
            }], shortLabel: [{
                type: Input
            }], tickId: [{
                type: HostBinding,
                args: ['attr.tickid']
            }, {
                type: Input
            }], current: [{
                type: HostBinding,
                args: ['class.current']
            }, {
                type: Input
            }], disabled: [{
                type: HostBinding,
                args: ['class.is-disabled']
            }, {
                type: Input
            }], onClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29oby13aXphcmQtdGljay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZHMtZW50ZXJwcmlzZS1uZy9zcmMvbGliL3dpemFyZC9zb2hvLXdpemFyZC10aWNrLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBRUwsU0FBUyxFQUNULHVCQUF1QixFQUV2QixXQUFXLEVBQ1gsS0FBSyxFQUNMLFlBQVksRUFDYixNQUFNLGVBQWUsQ0FBQzs7QUFFdkI7Ozs7R0FJRztBQU1ILE1BQU0sT0FBTyx1QkFBdUI7SUFPbEM7O09BRUc7SUFDSCxJQUE4QixRQUFRO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNoRCxDQUFDO0lBOEJEOztPQUVHO0lBQ2dDLE9BQU8sQ0FBQyxLQUFZO1FBQ3JELEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVNLGFBQWE7UUFDbEIsMkRBQTJEO1FBQzNELE9BQU8sSUFBSSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksS0FBSyxDQUFDO0lBQzFELENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsWUFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQTFEMUM7O1dBRUc7UUFDd0IsaUJBQVksR0FBRyxJQUFJLENBQUM7UUFvQi9DOztXQUVHO1FBRWEsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUVoQzs7V0FFRztRQUVhLGFBQVEsR0FBRyxLQUFLLENBQUM7SUEwQmpDLENBQUM7SUFFRCxlQUFlO1FBQ2IsMERBQTBEO1FBQzFELElBQUksQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDN0QsQ0FBQzs4R0FsRVUsdUJBQXVCO2tHQUF2Qix1QkFBdUIsd1lBSHhCLDRGQUE0Rjs7MkZBRzNGLHVCQUF1QjtrQkFMbkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQixRQUFRLEVBQUUsNEZBQTRGO29CQUN0RyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7aUdBTTRCLFlBQVk7c0JBQXRDLFdBQVc7dUJBQUMsWUFBWTtnQkFLSyxRQUFRO3NCQUFyQyxXQUFXO3VCQUFDLFdBQVc7Z0JBT1IsVUFBVTtzQkFBekIsS0FBSztnQkFNVSxNQUFNO3NCQURyQixXQUFXO3VCQUFDLGFBQWE7O3NCQUN6QixLQUFLO2dCQU1VLE9BQU87c0JBRHRCLFdBQVc7dUJBQUMsZUFBZTs7c0JBQzNCLEtBQUs7Z0JBTVUsUUFBUTtzQkFEdkIsV0FBVzt1QkFBQyxtQkFBbUI7O3NCQUMvQixLQUFLO2dCQVU2QixPQUFPO3NCQUF6QyxZQUFZO3VCQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEVsZW1lbnRSZWYsXG4gIENvbXBvbmVudCxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIEFmdGVyVmlld0luaXQsXG4gIEhvc3RCaW5kaW5nLFxuICBJbnB1dCxcbiAgSG9zdExpc3RlbmVyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEFuZ3VsYXIgd3JhcHBlciBmb3IgdGhlIHNvaG8gd2l6YXJkIHRpY2suXG4gKlxuICogVGhpcyB3cmFwcyBhbmNob3IgdGFncyBhbm5vdGF0ZWQgd2l0aCB0aGUgYHNvaG8td2l6YXJkLXRpY2tgLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhW3NvaG8td2l6YXJkLXRpY2tdJywgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICB0ZW1wbGF0ZTogJzxzcGFuIGNsYXNzPVwibGFiZWxcIiBhdHRyLmRhdGEtc2hvcnRMYWJlbD1cInt7c2hvcnRMYWJlbH19XCI+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50Pjwvc3Bhbj4nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBTb2hvV2l6YXJkVGlja0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuXG4gIC8qKlxuICAgKiBFbnN1cmUgYW55IGNsYXNzZXMgYXJlIHNldCBjb3JyZWN0bHkuXG4gICAqL1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRpY2snKSBpc1dpemFyZFRpY2sgPSB0cnVlO1xuXG4gIC8qKlxuICAgKiBGb3IgdGhlIGBocmVmYCB1c2UgdGhlIGlkLlxuICAgKi9cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmhyZWYnKSBnZXQgaHJlZkF0dHIoKSB7XG4gICAgcmV0dXJuIHRoaXMudGlja0lkID8gJyMnICsgdGhpcy50aWNrSWQgOiBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgc2hvcnRlciBsYWJlbC5cbiAgICovXG4gIEBJbnB1dCgpIHB1YmxpYyBzaG9ydExhYmVsPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgaWQsIHVzZWQgdG8gbGluayBiYWNrIHRvIHRoZSBwYWdlcy5cbiAgICovXG4gIEBIb3N0QmluZGluZygnYXR0ci50aWNraWQnKVxuICBASW5wdXQoKSBwdWJsaWMgdGlja0lkITogc3RyaW5nO1xuXG4gIC8qKlxuICAgKlxuICAgKi9cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5jdXJyZW50JylcbiAgQElucHV0KCkgcHVibGljIGN1cnJlbnQgPSBmYWxzZTtcblxuICAvKipcbiAgICogRGlzYWJsZWQgdGhlIHRpY2suXG4gICAqL1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlzLWRpc2FibGVkJylcbiAgQElucHV0KCkgcHVibGljIGRpc2FibGVkID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEpRdWVyeSBFbGVtZW50LlxuICAgKi9cbiAgcHVibGljIGpRdWVyeUVsZW1lbnQ/OiBKUXVlcnk7XG5cbiAgLyoqXG4gICAqIERpc2FibGUgdGhlIGNsaWNrIGhhbmRsZXIuXG4gICAqL1xuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pIG9uQ2xpY2soZXZlbnQ6IEV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxuXG4gIHB1YmxpYyBpc0N1cnJlbnRUaWNrKCk6IGJvb2xlYW4ge1xuICAgIC8vIEEgc3RlcCBpcyBzZWxlY3RlZCBpZiB0aGUgZWxlbWVudCBoYXMgdGhlIGN1cnJlbnQgY2xhc3MuXG4gICAgcmV0dXJuIHRoaXMualF1ZXJ5RWxlbWVudD8uaGFzQ2xhc3MoJ2N1cnJlbnQnKSB8fCBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3Rvci5cbiAgICpcbiAgICogQHBhcmFtIGVsZW1lbnRSZWYgLSB0aGUgZWxlbWVudCBtYXRjaGluZyB0aGlzIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIC8vIFdyYXAgdGhlIFwidW5vcmRlcmVkIGxpc3RcIiBlbGVtZW50IGluIGEgalF1ZXJ5IHNlbGVjdG9yLlxuICAgIHRoaXMualF1ZXJ5RWxlbWVudCA9IGpRdWVyeSh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCk7XG4gIH1cbn1cbiJdfQ==