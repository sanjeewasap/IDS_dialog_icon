// tslint:disable-next-line:no-unused-variable
import { Component, ChangeDetectionStrategy, HostBinding, ContentChildren } from '@angular/core';
import { SohoWizardTickComponent } from './soho-wizard-tick.component';
import * as i0 from "@angular/core";
/**
 * Angular wrapper for the soho wizard header.
 *
 * Looks for a `div` annotated with `soho-wizard-header`, this
 * simply add a wrapper around the wizard ticks.
 */
export class SohoWizardHeaderComponent {
    constructor() {
        this.isWizardHeader = true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoWizardHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.4", type: SohoWizardHeaderComponent, selector: "div[soho-wizard-header]", host: { properties: { "class.wizard-header": "this.isWizardHeader" } }, queries: [{ propertyName: "steps", predicate: SohoWizardTickComponent }], ngImport: i0, template: `<div class="bar">
    <div class="completed-range"></div>
    <ng-content></ng-content>
  </div>`, isInline: true, styles: [":host{padding:20px 40px 60px}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoWizardHeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'div[soho-wizard-header]', template: `<div class="bar">
    <div class="completed-range"></div>
    <ng-content></ng-content>
  </div>`, changeDetection: ChangeDetectionStrategy.OnPush, styles: [":host{padding:20px 40px 60px}\n"] }]
        }], propDecorators: { steps: [{
                type: ContentChildren,
                args: [SohoWizardTickComponent]
            }], isWizardHeader: [{
                type: HostBinding,
                args: ['class.wizard-header']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29oby13aXphcmQtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lkcy1lbnRlcnByaXNlLW5nL3NyYy9saWIvd2l6YXJkL3NvaG8td2l6YXJkLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDO0FBQzlDLE9BQU8sRUFDTCxTQUFTLEVBQ1QsdUJBQXVCLEVBQ3ZCLFdBQVcsRUFDWCxlQUFlLEVBRWhCLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQUV2RTs7Ozs7R0FLRztBQVVILE1BQU0sT0FBTyx5QkFBeUI7SUFUdEM7UUFrQnNDLG1CQUFjLEdBQUcsSUFBSSxDQUFDO0tBQzNEOzhHQVZZLHlCQUF5QjtrR0FBekIseUJBQXlCLDZKQU9uQix1QkFBdUIsNkJBZDlCOzs7U0FHSDs7MkZBSUkseUJBQXlCO2tCQVRyQyxTQUFTOytCQUNFLHlCQUF5QixZQUN6Qjs7O1NBR0gsbUJBRVUsdUJBQXVCLENBQUMsTUFBTTs4QkFTTCxLQUFLO3NCQUE5QyxlQUFlO3VCQUFDLHVCQUF1QjtnQkFFSixjQUFjO3NCQUFqRCxXQUFXO3VCQUFDLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby11bnVzZWQtdmFyaWFibGVcbmltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIEhvc3RCaW5kaW5nLFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIFF1ZXJ5TGlzdFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU29ob1dpemFyZFRpY2tDb21wb25lbnQgfSBmcm9tICcuL3NvaG8td2l6YXJkLXRpY2suY29tcG9uZW50JztcblxuLyoqXG4gKiBBbmd1bGFyIHdyYXBwZXIgZm9yIHRoZSBzb2hvIHdpemFyZCBoZWFkZXIuXG4gKlxuICogTG9va3MgZm9yIGEgYGRpdmAgYW5ub3RhdGVkIHdpdGggYHNvaG8td2l6YXJkLWhlYWRlcmAsIHRoaXNcbiAqIHNpbXBseSBhZGQgYSB3cmFwcGVyIGFyb3VuZCB0aGUgd2l6YXJkIHRpY2tzLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkaXZbc29oby13aXphcmQtaGVhZGVyXScsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwiYmFyXCI+XG4gICAgPGRpdiBjbGFzcz1cImNvbXBsZXRlZC1yYW5nZVwiPjwvZGl2PlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgPC9kaXY+YCxcbiAgc3R5bGVzOiBbYDpob3N0IHsgcGFkZGluZzogMjBweCA0MHB4IDYwcHggNDBweCB9YF0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFNvaG9XaXphcmRIZWFkZXJDb21wb25lbnQge1xuICAvKipcbiAgICogTGlzdCBvZiB0aWNrcyBpbiB0aGUgY29udHJvbC5cbiAgICpcbiAgICpcbiAgICpcbiAgICovXG4gIEBDb250ZW50Q2hpbGRyZW4oU29ob1dpemFyZFRpY2tDb21wb25lbnQpIHN0ZXBzPzogUXVlcnlMaXN0PFNvaG9XaXphcmRUaWNrQ29tcG9uZW50PjtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLndpemFyZC1oZWFkZXInKSBpc1dpemFyZEhlYWRlciA9IHRydWU7XG59XG4iXX0=