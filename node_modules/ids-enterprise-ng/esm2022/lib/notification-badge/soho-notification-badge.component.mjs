import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import * as i0 from "@angular/core";
export class SohoNotificationBadgeComponent {
    constructor(element, ngZone) {
        this.element = element;
        this.ngZone = ngZone;
        this.options = {};
    }
    set position(position) {
        this.options.position = position;
        if (this.notificationBadge) {
            this.notificationBadge.settings.position = position;
        }
    }
    get position() {
        if (this.notificationBadge) {
            return this.notificationBadge.settings.position;
        }
        return this.options.position;
    }
    set color(color) {
        this.options.color = color;
        if (this.notificationBadge) {
            this.notificationBadge.settings.color = color;
        }
    }
    get color() {
        if (this.notificationBadge) {
            return this.notificationBadge.settings.color;
        }
        return this.options.color;
    }
    set attributes(attributes) {
        this.options.attributes = attributes;
        if (this.notificationBadge) {
            this.notificationBadge.settings.attributes = attributes;
        }
    }
    get attributes() {
        if (this.notificationBadge) {
            return this.notificationBadge.settings.attributes;
        }
        return this.options.attributes;
    }
    show() {
        this.ngZone.runOutsideAngular(() => {
            this.jQueryElement.find('.notification-dot').removeClass('is-disabled');
        });
    }
    hide() {
        this.ngZone.runOutsideAngular(() => {
            this.jQueryElement.find('.notification-dot').addClass('is-disabled');
        });
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            this.jQueryElement = jQuery(this.element.nativeElement);
            const options = {
                position: this.position,
                color: this.color,
                attributes: this.attributes
            };
            // Initialize the notification badge component.
            this.jQueryElement.notificationbadge(options);
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoNotificationBadgeComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.4", type: SohoNotificationBadgeComponent, selector: "[soho-notification-badge]", inputs: { position: "position", color: "color", attributes: "attributes" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoNotificationBadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[soho-notification-badge]',
                    template: '<ng-content></ng-content>',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { position: [{
                type: Input
            }], color: [{
                type: Input
            }], attributes: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29oby1ub3RpZmljYXRpb24tYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWRzLWVudGVycHJpc2Utbmcvc3JjL2xpYi9ub3RpZmljYXRpb24tYmFkZ2Uvc29oby1ub3RpZmljYXRpb24tYmFkZ2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUVULEtBQUssR0FHTixNQUFNLGVBQWUsQ0FBQzs7QUFPdkIsTUFBTSxPQUFPLDhCQUE4QjtJQUt6QyxZQUNVLE9BQW1CLEVBQ25CLE1BQWM7UUFEZCxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQ25CLFdBQU0sR0FBTixNQUFNLENBQVE7UUFKaEIsWUFBTyxHQUFrQyxFQUFFLENBQUM7SUFLaEQsQ0FBQztJQUVMLElBQWEsUUFBUSxDQUFDLFFBQTRCO1FBQy9DLElBQUksQ0FBQyxPQUFlLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUMxQyxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMxQixJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7U0FDckQ7SUFDSCxDQUFDO0lBQ0QsSUFBSSxRQUFRO1FBQ1YsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztTQUNqRDtRQUVELE9BQVEsSUFBSSxDQUFDLE9BQWUsQ0FBQyxRQUFRLENBQUM7SUFDeEMsQ0FBQztJQUVELElBQWEsS0FBSyxDQUFDLEtBQXlCO1FBQ3pDLElBQUksQ0FBQyxPQUFlLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNwQyxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMxQixJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7U0FDL0M7SUFDSCxDQUFDO0lBQ0QsSUFBSSxLQUFLO1FBQ1AsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztTQUM5QztRQUVELE9BQVEsSUFBSSxDQUFDLE9BQWUsQ0FBQyxLQUFLLENBQUM7SUFDckMsQ0FBQztJQUVELElBQWEsVUFBVSxDQUFDLFVBQThDO1FBQ25FLElBQUksQ0FBQyxPQUFlLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM5QyxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMxQixJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7U0FDekQ7SUFDSCxDQUFDO0lBQ0QsSUFBSSxVQUFVO1FBQ1osSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQztTQUNuRDtRQUVELE9BQVEsSUFBSSxDQUFDLE9BQWUsQ0FBQyxVQUFVLENBQUM7SUFDMUMsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNqQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMxRSxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxJQUFJO1FBQ0YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDdkUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7WUFFeEQsTUFBTSxPQUFPLEdBQWlDO2dCQUM1QyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7Z0JBQ3ZCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVO2FBQzVCLENBQUM7WUFFRiwrQ0FBK0M7WUFDL0MsSUFBSSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUUvQyxDQUFDLENBQUMsQ0FBQztJQUNOLENBQUM7OEdBOUVVLDhCQUE4QjtrR0FBOUIsOEJBQThCLDZJQUgvQiwyQkFBMkI7OzJGQUcxQiw4QkFBOEI7a0JBTDFDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEO3NIQVdjLFFBQVE7c0JBQXBCLEtBQUs7Z0JBY08sS0FBSztzQkFBakIsS0FBSztnQkFjTyxVQUFVO3NCQUF0QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgSW5wdXQsXG4gIE5nWm9uZSxcbiAgT25Jbml0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW3NvaG8tbm90aWZpY2F0aW9uLWJhZGdlXScsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgU29ob05vdGlmaWNhdGlvbkJhZGdlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgcHJpdmF0ZSBqUXVlcnlFbGVtZW50ITogSlF1ZXJ5O1xuICBwcml2YXRlIG5vdGlmaWNhdGlvbkJhZGdlPzogU29ob05vdGlmaWNhdGlvbkJhZGdlIHwgbnVsbDtcbiAgcHJpdmF0ZSBvcHRpb25zPzogU29ob05vdGlmaWNhdGlvbkJhZGdlT3B0aW9ucyA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZixcbiAgICBwcml2YXRlIG5nWm9uZTogTmdab25lLFxuICApIHsgfVxuXG4gIEBJbnB1dCgpIHNldCBwb3NpdGlvbihwb3NpdGlvbjogc3RyaW5nIHwgdW5kZWZpbmVkKSB7XG4gICAgKHRoaXMub3B0aW9ucyBhcyBhbnkpLnBvc2l0aW9uID0gcG9zaXRpb247XG4gICAgaWYgKHRoaXMubm90aWZpY2F0aW9uQmFkZ2UpIHtcbiAgICAgIHRoaXMubm90aWZpY2F0aW9uQmFkZ2Uuc2V0dGluZ3MucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICB9XG4gIH1cbiAgZ2V0IHBvc2l0aW9uKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKHRoaXMubm90aWZpY2F0aW9uQmFkZ2UpIHtcbiAgICAgIHJldHVybiB0aGlzLm5vdGlmaWNhdGlvbkJhZGdlLnNldHRpbmdzLnBvc2l0aW9uO1xuICAgIH1cblxuICAgIHJldHVybiAodGhpcy5vcHRpb25zIGFzIGFueSkucG9zaXRpb247XG4gIH1cblxuICBASW5wdXQoKSBzZXQgY29sb3IoY29sb3I6IHN0cmluZyB8IHVuZGVmaW5lZCkge1xuICAgICh0aGlzLm9wdGlvbnMgYXMgYW55KS5jb2xvciA9IGNvbG9yO1xuICAgIGlmICh0aGlzLm5vdGlmaWNhdGlvbkJhZGdlKSB7XG4gICAgICB0aGlzLm5vdGlmaWNhdGlvbkJhZGdlLnNldHRpbmdzLmNvbG9yID0gY29sb3I7XG4gICAgfVxuICB9XG4gIGdldCBjb2xvcigpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICAgIGlmICh0aGlzLm5vdGlmaWNhdGlvbkJhZGdlKSB7XG4gICAgICByZXR1cm4gdGhpcy5ub3RpZmljYXRpb25CYWRnZS5zZXR0aW5ncy5jb2xvcjtcbiAgICB9XG5cbiAgICByZXR1cm4gKHRoaXMub3B0aW9ucyBhcyBhbnkpLmNvbG9yO1xuICB9XG5cbiAgQElucHV0KCkgc2V0IGF0dHJpYnV0ZXMoYXR0cmlidXRlczogQXJyYXk8T2JqZWN0PiB8IE9iamVjdCB8IHVuZGVmaW5lZCkge1xuICAgICh0aGlzLm9wdGlvbnMgYXMgYW55KS5hdHRyaWJ1dGVzID0gYXR0cmlidXRlcztcbiAgICBpZiAodGhpcy5ub3RpZmljYXRpb25CYWRnZSkge1xuICAgICAgdGhpcy5ub3RpZmljYXRpb25CYWRnZS5zZXR0aW5ncy5hdHRyaWJ1dGVzID0gYXR0cmlidXRlcztcbiAgICB9XG4gIH1cbiAgZ2V0IGF0dHJpYnV0ZXMoKTogQXJyYXk8T2JqZWN0PiB8IE9iamVjdCB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKHRoaXMubm90aWZpY2F0aW9uQmFkZ2UpIHtcbiAgICAgIHJldHVybiB0aGlzLm5vdGlmaWNhdGlvbkJhZGdlLnNldHRpbmdzLmF0dHJpYnV0ZXM7XG4gICAgfVxuXG4gICAgcmV0dXJuICh0aGlzLm9wdGlvbnMgYXMgYW55KS5hdHRyaWJ1dGVzO1xuICB9XG5cbiAgc2hvdygpOiB2b2lkIHtcbiAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7IFxuICAgICAgdGhpcy5qUXVlcnlFbGVtZW50LmZpbmQoJy5ub3RpZmljYXRpb24tZG90JykucmVtb3ZlQ2xhc3MoJ2lzLWRpc2FibGVkJyk7XG4gICAgfSk7XG4gIH1cblxuICBoaWRlKCk6IHZvaWQge1xuICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHsgXG4gICAgICB0aGlzLmpRdWVyeUVsZW1lbnQuZmluZCgnLm5vdGlmaWNhdGlvbi1kb3QnKS5hZGRDbGFzcygnaXMtZGlzYWJsZWQnKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgIHRoaXMualF1ZXJ5RWxlbWVudCA9IGpRdWVyeSh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCk7XG5cbiAgICAgIGNvbnN0IG9wdGlvbnM6IFNvaG9Ob3RpZmljYXRpb25CYWRnZU9wdGlvbnMgPSB7XG4gICAgICAgIHBvc2l0aW9uOiB0aGlzLnBvc2l0aW9uLFxuICAgICAgICBjb2xvcjogdGhpcy5jb2xvcixcbiAgICAgICAgYXR0cmlidXRlczogdGhpcy5hdHRyaWJ1dGVzXG4gICAgICB9O1xuXG4gICAgICAvLyBJbml0aWFsaXplIHRoZSBub3RpZmljYXRpb24gYmFkZ2UgY29tcG9uZW50LlxuICAgICAgdGhpcy5qUXVlcnlFbGVtZW50Lm5vdGlmaWNhdGlvbmJhZGdlKG9wdGlvbnMpO1xuXG4gICAgIH0pO1xuICB9XG59XG4iXX0=