import { Directive, Output, EventEmitter, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class SohoDragDirective {
    set dragOptions(dragOptions) {
        this._dragOptions = dragOptions;
    }
    constructor(elementRef, ngZone) {
        this.elementRef = elementRef;
        this.ngZone = ngZone;
        this.dragStart = new EventEmitter();
        this.dragEnd = new EventEmitter();
        this.dragging = new EventEmitter();
    }
    ngAfterViewInit() {
        this.ngZone.runOutsideAngular(() => {
            this.jQueryElement = jQuery(this.elementRef.nativeElement);
            this.jQueryElement.drag(this._dragOptions);
            this.drag = this.jQueryElement.data('drag');
            // bind to jquery events and emit as angular events
            this.jQueryElement.on('dragstart', (event, ui) => this.ngZone.run(() => this.dragStart.emit({ event, ui })));
            this.jQueryElement.on('dragend', (event, ui) => this.ngZone.run(() => this.dragEnd.emit({ event, ui })));
            this.jQueryElement.on('drag', (event, ui) => this.ngZone.run(() => this.dragging.emit({ event, ui })));
        });
    }
    getElementsFromPoint(x, y) {
        return this.drag?.getElementsFromPoint(x, y);
    }
    ngOnDestroy() {
        this.drag?.destroy();
    }
    updated(settings) {
        if (settings) {
            this.drag?.updated(settings);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoDragDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.4", type: SohoDragDirective, selector: "[soho-drag]", inputs: { dragOptions: "dragOptions" }, outputs: { dragStart: "dragStart", dragEnd: "dragEnd", dragging: "dragging" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoDragDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[soho-drag]'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { dragOptions: [{
                type: Input
            }], dragStart: [{
                type: Output
            }], dragEnd: [{
                type: Output
            }], dragging: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29oby1kcmFnLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lkcy1lbnRlcnByaXNlLW5nL3NyYy9saWIvZHJhZy9zb2hvLWRyYWcuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBSVQsTUFBTSxFQUNOLFlBQVksRUFDWixLQUFLLEVBRU4sTUFBTSxlQUFlLENBQUM7O0FBS3ZCLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUIsSUFBYSxXQUFXLENBQUMsV0FBNEI7UUFDbkQsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7SUFDbEMsQ0FBQztJQVFELFlBQ1UsVUFBc0IsRUFDdEIsTUFBYztRQURkLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQVRkLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBaUIsQ0FBQztRQUM5QyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQWlCLENBQUM7UUFDNUMsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFpQixDQUFDO0lBUW5ELENBQUM7SUFFTCxlQUFlO1FBQ2IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUUzRCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFFM0MsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUU1QyxtREFBbUQ7WUFDbkQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBNEIsRUFBRSxFQUFPLEVBQUUsRUFBRSxDQUMzRSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUU3RCxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUE0QixFQUFFLEVBQU8sRUFBRSxFQUFFLENBQ3pFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRTNELElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQTRCLEVBQUUsRUFBTyxFQUFFLEVBQUUsQ0FDdEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUQsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsb0JBQW9CLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDdkMsT0FBTyxJQUFJLENBQUMsSUFBSSxFQUFFLG9CQUFvQixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELE9BQU8sQ0FBQyxRQUEwQjtRQUNoQyxJQUFJLFFBQVEsRUFBRTtZQUNaLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQzs4R0FoRFUsaUJBQWlCO2tHQUFqQixpQkFBaUI7OzJGQUFqQixpQkFBaUI7a0JBSDdCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7aUJBQ3hCO3NIQUVjLFdBQVc7c0JBQXZCLEtBQUs7Z0JBR0ksU0FBUztzQkFBbEIsTUFBTTtnQkFDRyxPQUFPO3NCQUFoQixNQUFNO2dCQUNHLFFBQVE7c0JBQWpCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIE5nWm9uZSxcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPbkRlc3Ryb3lcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tzb2hvLWRyYWddJ1xufSlcbmV4cG9ydCBjbGFzcyBTb2hvRHJhZ0RpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gIEBJbnB1dCgpIHNldCBkcmFnT3B0aW9ucyhkcmFnT3B0aW9uczogU29ob0RyYWdPcHRpb25zKSB7XG4gICAgdGhpcy5fZHJhZ09wdGlvbnMgPSBkcmFnT3B0aW9ucztcbiAgfVxuICBAT3V0cHV0KCkgZHJhZ1N0YXJ0ID0gbmV3IEV2ZW50RW1pdHRlcjxTb2hvRHJhZ0V2ZW50PigpO1xuICBAT3V0cHV0KCkgZHJhZ0VuZCA9IG5ldyBFdmVudEVtaXR0ZXI8U29ob0RyYWdFdmVudD4oKTtcbiAgQE91dHB1dCgpIGRyYWdnaW5nID0gbmV3IEV2ZW50RW1pdHRlcjxTb2hvRHJhZ0V2ZW50PigpO1xuICBwcml2YXRlIGpRdWVyeUVsZW1lbnQ/OiBKUXVlcnk7XG4gIHByaXZhdGUgX2RyYWdPcHRpb25zPzogU29ob0RyYWdPcHRpb25zO1xuICBwcml2YXRlIGRyYWc/OiBTb2hvRHJhZ1N0YXRpYztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZSxcbiAgKSB7IH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy5qUXVlcnlFbGVtZW50ID0galF1ZXJ5KHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KTtcblxuICAgICAgdGhpcy5qUXVlcnlFbGVtZW50LmRyYWcodGhpcy5fZHJhZ09wdGlvbnMpO1xuXG4gICAgICB0aGlzLmRyYWcgPSB0aGlzLmpRdWVyeUVsZW1lbnQuZGF0YSgnZHJhZycpO1xuXG4gICAgICAvLyBiaW5kIHRvIGpxdWVyeSBldmVudHMgYW5kIGVtaXQgYXMgYW5ndWxhciBldmVudHNcbiAgICAgIHRoaXMualF1ZXJ5RWxlbWVudC5vbignZHJhZ3N0YXJ0JywgKGV2ZW50OiBKUXVlcnkuVHJpZ2dlcmVkRXZlbnQsIHVpOiBhbnkpID0+XG4gICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB0aGlzLmRyYWdTdGFydC5lbWl0KHsgZXZlbnQsIHVpIH0pKSk7XG5cbiAgICAgIHRoaXMualF1ZXJ5RWxlbWVudC5vbignZHJhZ2VuZCcsIChldmVudDogSlF1ZXJ5LlRyaWdnZXJlZEV2ZW50LCB1aTogYW55KSA9PlxuICAgICAgICB0aGlzLm5nWm9uZS5ydW4oKCkgPT4gdGhpcy5kcmFnRW5kLmVtaXQoeyBldmVudCwgdWkgfSkpKTtcblxuICAgICAgdGhpcy5qUXVlcnlFbGVtZW50Lm9uKCdkcmFnJywgKGV2ZW50OiBKUXVlcnkuVHJpZ2dlcmVkRXZlbnQsIHVpOiBhbnkpID0+XG4gICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB0aGlzLmRyYWdnaW5nLmVtaXQoeyBldmVudCwgdWkgfSkpKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldEVsZW1lbnRzRnJvbVBvaW50KHg6IG51bWJlciwgeTogbnVtYmVyKTogRWxlbWVudFtdIHtcbiAgICByZXR1cm4gdGhpcy5kcmFnPy5nZXRFbGVtZW50c0Zyb21Qb2ludCh4LCB5KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuZHJhZz8uZGVzdHJveSgpO1xuICB9XG5cbiAgdXBkYXRlZChzZXR0aW5ncz86IFNvaG9EcmFnT3B0aW9ucykge1xuICAgIGlmIChzZXR0aW5ncykge1xuICAgICAgdGhpcy5kcmFnPy51cGRhdGVkKHNldHRpbmdzKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==