import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, } from '@angular/core';
import * as i0 from "@angular/core";
export class SohoHeaderComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isHeader = true;
        this.isPersonalizable = true;
        /**
         * This event is fired when the status of the header is changed.
         *
         */
        this.updated = new EventEmitter();
    }
    /**
     * Used to manually remove the back button when
     * Which is used in the header via the list/detail pattern
     */
    removeBackButton() {
        this.header?.removeBackButton();
    }
    ngAfterViewInit() {
        // Wrap for later.
        this.jQueryElement = jQuery(this.elementRef.nativeElement);
        // Initialise the SoHoXi control.
        this.jQueryElement.header();
        // Once the control is initialised, extract the control
        // plug-in from the element.  The element name is
        // defined by the plug-in, but in this case is 'sohoxiHeader'.
        this.header = this.jQueryElement.data('header');
        // Initialize any event handlers.
        this.jQueryElement.on('updated', (_e, args) => {
            this.updated.emit(args);
        });
    }
    ngOnDestroy() {
        if (this.jQueryElement) {
            this.jQueryElement.off();
            this.jQueryElement = undefined;
        }
        if (this.header) {
            this.header.destroy();
            this.header = undefined;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoHeaderComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.4", type: SohoHeaderComponent, selector: "soho-header", inputs: { hasToolbar: "hasToolbar", hasTabs: "hasTabs" }, outputs: { updated: "updated" }, host: { properties: { "class.header": "this.isHeader", "class.is-personalizable": "this.isPersonalizable", "class.has-toolbar": "this.hasToolbar", "class.has-tabs": "this.hasTabs" } }, ngImport: i0, template: "<ng-content></ng-content>\n", changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoHeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'soho-header', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-content></ng-content>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { isHeader: [{
                type: HostBinding,
                args: ['class.header']
            }], isPersonalizable: [{
                type: HostBinding,
                args: ['class.is-personalizable']
            }], hasToolbar: [{
                type: HostBinding,
                args: ['class.has-toolbar']
            }, {
                type: Input
            }], hasTabs: [{
                type: HostBinding,
                args: ['class.has-tabs']
            }, {
                type: Input
            }], updated: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29oby1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWRzLWVudGVycHJpc2Utbmcvc3JjL2xpYi9oZWFkZXIvc29oby1oZWFkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWRzLWVudGVycHJpc2Utbmcvc3JjL2xpYi9oZWFkZXIvc29oby1oZWFkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLHVCQUF1QixFQUN2QixTQUFTLEVBRVQsWUFBWSxFQUNaLFdBQVcsRUFDWCxLQUFLLEVBRUwsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDOztBQU92QixNQUFNLE9BQU8sbUJBQW1CO0lBa0I5QixZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBakJiLGFBQVEsR0FBRyxJQUFJLENBQUM7UUFDTCxxQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFJaEU7OztXQUdHO1FBQ08sWUFBTyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFRRSxDQUFDO0lBRS9DOzs7T0FHRztJQUNILGdCQUFnQjtRQUNkLElBQUksQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsZUFBZTtRQUNiLGtCQUFrQjtRQUNsQixJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRTNELGlDQUFpQztRQUNqQyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRTVCLHVEQUF1RDtRQUN2RCxpREFBaUQ7UUFDakQsOERBQThEO1FBQzlELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFaEQsaUNBQWlDO1FBQ2pDLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQXlCLEVBQUUsSUFBUyxFQUFFLEVBQUU7WUFDeEUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN0QixJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDO1NBQ2hDO1FBQ0QsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztTQUN6QjtJQUNILENBQUM7OEdBdkRVLG1CQUFtQjtrR0FBbkIsbUJBQW1CLHVVQ2pCaEMsNkJBQ0E7OzJGRGdCYSxtQkFBbUI7a0JBTC9CLFNBQVM7K0JBQ0UsYUFBYSxtQkFFTix1QkFBdUIsQ0FBQyxNQUFNO2lHQUdsQixRQUFRO3NCQUFwQyxXQUFXO3VCQUFDLGNBQWM7Z0JBQ2EsZ0JBQWdCO3NCQUF2RCxXQUFXO3VCQUFDLHlCQUF5QjtnQkFDSyxVQUFVO3NCQUFwRCxXQUFXO3VCQUFDLG1CQUFtQjs7c0JBQUcsS0FBSztnQkFDQSxPQUFPO3NCQUE5QyxXQUFXO3VCQUFDLGdCQUFnQjs7c0JBQUcsS0FBSztnQkFNM0IsT0FBTztzQkFBaEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSG9zdEJpbmRpbmcsXG4gIElucHV0LFxuICBPbkRlc3Ryb3ksXG4gIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NvaG8taGVhZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICdzb2hvLWhlYWRlci5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBTb2hvSGVhZGVyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5oZWFkZXInKSBpc0hlYWRlciA9IHRydWU7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuaXMtcGVyc29uYWxpemFibGUnKSBpc1BlcnNvbmFsaXphYmxlID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5oYXMtdG9vbGJhcicpIEBJbnB1dCgpIGhhc1Rvb2xiYXI6IGFueTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5oYXMtdGFicycpIEBJbnB1dCgpIGhhc1RhYnM6IGFueTtcblxuICAvKipcbiAgICogVGhpcyBldmVudCBpcyBmaXJlZCB3aGVuIHRoZSBzdGF0dXMgb2YgdGhlIGhlYWRlciBpcyBjaGFuZ2VkLlxuICAgKlxuICAgKi9cbiAgQE91dHB1dCgpIHVwZGF0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAvLyBSZWZlcmVuY2UgdG8gdGhlIGpRdWVyeSBlbGVtZW50LlxuICBwcml2YXRlIGpRdWVyeUVsZW1lbnQ/OiBKUXVlcnk7XG5cbiAgLy8gUmVmZXJlbmNlIHRvIHRoZSBhbm5vdGF0ZWQgU29Ib1hpIGNvbnRyb2xcbiAgcHJpdmF0ZSBoZWFkZXI/OiBTb2hvSGVhZGVyU3RhdGljO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikgeyB9XG5cbiAgLyoqXG4gICAqIFVzZWQgdG8gbWFudWFsbHkgcmVtb3ZlIHRoZSBiYWNrIGJ1dHRvbiB3aGVuXG4gICAqIFdoaWNoIGlzIHVzZWQgaW4gdGhlIGhlYWRlciB2aWEgdGhlIGxpc3QvZGV0YWlsIHBhdHRlcm5cbiAgICovXG4gIHJlbW92ZUJhY2tCdXR0b24oKSB7XG4gICAgdGhpcy5oZWFkZXI/LnJlbW92ZUJhY2tCdXR0b24oKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAvLyBXcmFwIGZvciBsYXRlci5cbiAgICB0aGlzLmpRdWVyeUVsZW1lbnQgPSBqUXVlcnkodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpO1xuXG4gICAgLy8gSW5pdGlhbGlzZSB0aGUgU29Ib1hpIGNvbnRyb2wuXG4gICAgdGhpcy5qUXVlcnlFbGVtZW50LmhlYWRlcigpO1xuXG4gICAgLy8gT25jZSB0aGUgY29udHJvbCBpcyBpbml0aWFsaXNlZCwgZXh0cmFjdCB0aGUgY29udHJvbFxuICAgIC8vIHBsdWctaW4gZnJvbSB0aGUgZWxlbWVudC4gIFRoZSBlbGVtZW50IG5hbWUgaXNcbiAgICAvLyBkZWZpbmVkIGJ5IHRoZSBwbHVnLWluLCBidXQgaW4gdGhpcyBjYXNlIGlzICdzb2hveGlIZWFkZXInLlxuICAgIHRoaXMuaGVhZGVyID0gdGhpcy5qUXVlcnlFbGVtZW50LmRhdGEoJ2hlYWRlcicpO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSBhbnkgZXZlbnQgaGFuZGxlcnMuXG4gICAgdGhpcy5qUXVlcnlFbGVtZW50Lm9uKCd1cGRhdGVkJywgKF9lOiBKUXVlcnkuVHJpZ2dlcmVkRXZlbnQsIGFyZ3M6IGFueSkgPT4ge1xuICAgICAgdGhpcy51cGRhdGVkLmVtaXQoYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5qUXVlcnlFbGVtZW50KSB7XG4gICAgICB0aGlzLmpRdWVyeUVsZW1lbnQub2ZmKCk7XG4gICAgICB0aGlzLmpRdWVyeUVsZW1lbnQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh0aGlzLmhlYWRlcikge1xuICAgICAgdGhpcy5oZWFkZXIuZGVzdHJveSgpO1xuICAgICAgdGhpcy5oZWFkZXIgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG59XG4iLCI8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4iXX0=