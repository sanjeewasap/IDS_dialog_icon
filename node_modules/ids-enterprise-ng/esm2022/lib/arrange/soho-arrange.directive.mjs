import { Directive, Output, EventEmitter, Input, } from '@angular/core';
import * as i0 from "@angular/core";
export class SohoArrangeDirective {
    set arrangeOptions(arrangeOptions) {
        this._arrangeOptions = arrangeOptions;
    }
    constructor(elementRef, ngZone) {
        this.elementRef = elementRef;
        this.ngZone = ngZone;
        this.beforeArrange = new EventEmitter();
        this.arrangeUpdate = new EventEmitter();
        this.dragEnd = new EventEmitter();
    }
    ngAfterViewInit() {
        this.ngZone.runOutsideAngular(() => {
            this.jQueryElement = jQuery(this.elementRef.nativeElement);
            this.jQueryElement.arrange(this._arrangeOptions);
            this.arrange = this.jQueryElement.data('arrange');
            // Bind to jQuery events and emit as angular events
            this.jQueryElement.on('beforearrange', (event, status) => this.ngZone.run(() => this.beforeArrange.emit({ event, status })));
            this.jQueryElement.on('arrangeupdate', (event, status) => this.ngZone.run(() => this.arrangeUpdate.emit({ event, status })));
            this.jQueryElement.on('dragend', (event) => this.ngZone.run(() => this.dragEnd.emit({ event })));
        });
    }
    ngOnDestroy() {
        this.arrange?.destroy();
    }
    updated(settings) {
        if (settings) {
            this.arrange?.updated(settings);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoArrangeDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.4", type: SohoArrangeDirective, selector: "[soho-arrange]", inputs: { arrangeOptions: "arrangeOptions" }, outputs: { beforeArrange: "beforeArrange", arrangeUpdate: "arrangeUpdate", dragEnd: "dragEnd" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoArrangeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[soho-arrange]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { beforeArrange: [{
                type: Output
            }], arrangeUpdate: [{
                type: Output
            }], dragEnd: [{
                type: Output
            }], arrangeOptions: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29oby1hcnJhbmdlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lkcy1lbnRlcnByaXNlLW5nL3NyYy9saWIvYXJyYW5nZS9zb2hvLWFycmFuZ2UuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBSVQsTUFBTSxFQUNOLFlBQVksRUFDWixLQUFLLEdBRU4sTUFBTSxlQUFlLENBQUM7O0FBTXZCLE1BQU0sT0FBTyxvQkFBb0I7SUFTL0IsSUFBYSxjQUFjLENBQUMsY0FBa0M7UUFDNUQsSUFBSSxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUM7SUFDeEMsQ0FBQztJQUVELFlBQ1UsVUFBc0IsRUFDdEIsTUFBYztRQURkLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQVZkLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQW9CLENBQUM7UUFDckQsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBb0IsQ0FBQztRQUNyRCxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQW9CLENBQUM7SUFTdEQsQ0FBQztJQUVKLGVBQWU7UUFDYixJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUNqQyxJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBRTNELElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUVqRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRWxELG1EQUFtRDtZQUNuRCxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxLQUE0QixFQUFFLE1BQVcsRUFBRSxFQUFFLENBQ25GLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRXJFLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDLEtBQTRCLEVBQUUsTUFBVyxFQUFFLEVBQUUsQ0FDbkYsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFckUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBNEIsRUFBRSxFQUFFLENBQ2hFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDekQsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVELE9BQU8sQ0FBQyxRQUE2QjtRQUNuQyxJQUFJLFFBQVEsRUFBRTtZQUNaLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQzs4R0E5Q1Usb0JBQW9CO2tHQUFwQixvQkFBb0I7OzJGQUFwQixvQkFBb0I7a0JBSmhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtpQkFDM0I7c0hBT1csYUFBYTtzQkFBdEIsTUFBTTtnQkFDRyxhQUFhO3NCQUF0QixNQUFNO2dCQUNHLE9BQU87c0JBQWhCLE1BQU07Z0JBRU0sY0FBYztzQkFBMUIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSxcbiAgRWxlbWVudFJlZixcbiAgTmdab25lLFxuICBBZnRlclZpZXdJbml0LFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uRGVzdHJveSxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tzb2hvLWFycmFuZ2VdJyxcbn0pXG5cbmV4cG9ydCBjbGFzcyBTb2hvQXJyYW5nZURpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gIHByaXZhdGUgalF1ZXJ5RWxlbWVudD86IEpRdWVyeTtcbiAgcHJpdmF0ZSBfYXJyYW5nZU9wdGlvbnMhOiBTb2hvQXJyYW5nZU9wdGlvbnM7XG4gIHByaXZhdGUgYXJyYW5nZT86IFNvaG9BcnJhbmdlU3RhdGljO1xuXG4gIEBPdXRwdXQoKSBiZWZvcmVBcnJhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxTb2hvQXJyYW5nZUV2ZW50PigpO1xuICBAT3V0cHV0KCkgYXJyYW5nZVVwZGF0ZSA9IG5ldyBFdmVudEVtaXR0ZXI8U29ob0FycmFuZ2VFdmVudD4oKTtcbiAgQE91dHB1dCgpIGRyYWdFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPFNvaG9BcnJhbmdlRXZlbnQ+KCk7XG5cbiAgQElucHV0KCkgc2V0IGFycmFuZ2VPcHRpb25zKGFycmFuZ2VPcHRpb25zOiBTb2hvQXJyYW5nZU9wdGlvbnMpIHtcbiAgICB0aGlzLl9hcnJhbmdlT3B0aW9ucyA9IGFycmFuZ2VPcHRpb25zO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgbmdab25lOiBOZ1pvbmUsXG4gICkge31cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGhpcy5qUXVlcnlFbGVtZW50ID0galF1ZXJ5KHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KTtcblxuICAgICAgdGhpcy5qUXVlcnlFbGVtZW50LmFycmFuZ2UodGhpcy5fYXJyYW5nZU9wdGlvbnMpO1xuXG4gICAgICB0aGlzLmFycmFuZ2UgPSB0aGlzLmpRdWVyeUVsZW1lbnQuZGF0YSgnYXJyYW5nZScpO1xuXG4gICAgICAvLyBCaW5kIHRvIGpRdWVyeSBldmVudHMgYW5kIGVtaXQgYXMgYW5ndWxhciBldmVudHNcbiAgICAgIHRoaXMualF1ZXJ5RWxlbWVudC5vbignYmVmb3JlYXJyYW5nZScsIChldmVudDogSlF1ZXJ5LlRyaWdnZXJlZEV2ZW50LCBzdGF0dXM6IGFueSkgPT5cbiAgICAgICAgdGhpcy5uZ1pvbmUucnVuKCgpID0+IHRoaXMuYmVmb3JlQXJyYW5nZS5lbWl0KHsgZXZlbnQsIHN0YXR1cyB9KSkpO1xuXG4gICAgICB0aGlzLmpRdWVyeUVsZW1lbnQub24oJ2FycmFuZ2V1cGRhdGUnLCAoZXZlbnQ6IEpRdWVyeS5UcmlnZ2VyZWRFdmVudCwgc3RhdHVzOiBhbnkpID0+XG4gICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB0aGlzLmFycmFuZ2VVcGRhdGUuZW1pdCh7IGV2ZW50LCBzdGF0dXMgfSkpKTtcblxuICAgICAgdGhpcy5qUXVlcnlFbGVtZW50Lm9uKCdkcmFnZW5kJywgKGV2ZW50OiBKUXVlcnkuVHJpZ2dlcmVkRXZlbnQpID0+XG4gICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB0aGlzLmRyYWdFbmQuZW1pdCh7IGV2ZW50IH0pKSk7XG4gICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLmFycmFuZ2U/LmRlc3Ryb3koKTtcbiAgfVxuXG4gIHVwZGF0ZWQoc2V0dGluZ3M/OiBTb2hvQXJyYW5nZU9wdGlvbnMpIHtcbiAgICBpZiAoc2V0dGluZ3MpIHtcbiAgICAgIHRoaXMuYXJyYW5nZT8udXBkYXRlZChzZXR0aW5ncyk7XG4gICAgfVxuICB9XG59XG4iXX0=