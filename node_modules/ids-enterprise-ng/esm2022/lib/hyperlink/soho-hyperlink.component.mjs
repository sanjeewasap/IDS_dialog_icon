import { Component, Output, HostBinding, Input, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../icon/soho-icon.component";
export class SohoHyperlinkComponent {
    static { this.SHOWVISITED = 'show-visited'; }
    static { this.DIRECTIONAL = 'forward-caret'; }
    static { this.BACK = 'back-caret'; }
    /**
     * The type of the hyperlink, defaulting to 'hide-focus'.
     *
     * @todo replace override of native attribute
     */
    // eslint-disable-next-line @angular-eslint/no-input-rename
    set sohoHyperlink(type) {
        if (type) {
            this.hyperlinkType = type;
        }
    }
    get showVisitedClass() {
        if (this.hyperlinkType === SohoHyperlinkComponent.SHOWVISITED) {
            return true;
        }
    }
    get directionalClass() {
        if (this.hyperlinkType === SohoHyperlinkComponent.DIRECTIONAL) {
            return true;
        }
    }
    get backClass() {
        if (this.hyperlinkType === SohoHyperlinkComponent.BACK) {
            return true;
        }
    }
    constructor(element) {
        this.element = element;
        this.hyperLinkClass = true;
    }
    ngAfterViewInit() {
        this.jQueryElement = jQuery(this.element.nativeElement);
        /*
         * hideFocus() is the plugin used for hyperlink
         * Initialize hideFocus()
         */
        this.jQueryElement.hideFocus();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoHyperlinkComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.4", type: SohoHyperlinkComponent, selector: "a[soho-hyperlink]", inputs: { sohoHyperlink: ["soho-hyperlink", "sohoHyperlink"], icon: "icon", href: "href", disabled: "disabled", isCaretRight: "isCaretRight", isCaretLeft: "isCaretLeft" }, outputs: { change: "change" }, host: { properties: { "class.hyperlink": "this.hyperLinkClass", "class.show-visited": "this.showVisitedClass", "class.directional": "this.directionalClass", "class.back": "this.backClass", "attr.href": "this.href", "attr.disabled": "this.disabled", "attr.isCaretRight": "this.isCaretRight", "attr.isCaretLeft": "this.isCaretLeft" } }, ngImport: i0, template: ` <svg soho-icon *ngIf="isCaretLeft" [icon]="'caret-left'"></svg>
              <ng-content></ng-content>
              <svg soho-icon *ngIf="isCaretRight" [icon]="'caret-right'"></svg>
              `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.SohoIconComponent, selector: "svg[soho-icon]", inputs: ["isEmptyState", "extraIconClass", "alert", "icon"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoHyperlinkComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'a[soho-hyperlink]',
                    template: ` <svg soho-icon *ngIf="isCaretLeft" [icon]="'caret-left'"></svg>
              <ng-content></ng-content>
              <svg soho-icon *ngIf="isCaretRight" [icon]="'caret-right'"></svg>
              `,
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { sohoHyperlink: [{
                type: Input,
                args: ['soho-hyperlink']
            }], icon: [{
                type: Input
            }], change: [{
                type: Output
            }], hyperLinkClass: [{
                type: HostBinding,
                args: ['class.hyperlink']
            }], showVisitedClass: [{
                type: HostBinding,
                args: ['class.show-visited']
            }], directionalClass: [{
                type: HostBinding,
                args: ['class.directional']
            }], backClass: [{
                type: HostBinding,
                args: ['class.back']
            }], href: [{
                type: HostBinding,
                args: ['attr.href']
            }, {
                type: Input
            }], disabled: [{
                type: HostBinding,
                args: ['attr.disabled']
            }, {
                type: Input
            }], isCaretRight: [{
                type: HostBinding,
                args: ['attr.isCaretRight']
            }, {
                type: Input
            }], isCaretLeft: [{
                type: HostBinding,
                args: ['attr.isCaretLeft']
            }, {
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29oby1oeXBlcmxpbmsuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWRzLWVudGVycHJpc2Utbmcvc3JjL2xpYi9oeXBlcmxpbmsvc29oby1oeXBlcmxpbmsuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxTQUFTLEVBRVQsTUFBTSxFQUVOLFdBQVcsRUFDWCxLQUFLLEVBQ0wsdUJBQXVCLEVBQ3hCLE1BQU0sZUFBZSxDQUFDOzs7O0FBYXZCLE1BQU0sT0FBTyxzQkFBc0I7YUFFMUIsZ0JBQVcsR0FBc0IsY0FBYyxDQUFDO2FBQ2hELGdCQUFXLEdBQXNCLGVBQWUsQ0FBQzthQUNqRCxTQUFJLEdBQXNCLFlBQVksQ0FBQztJQUU5Qzs7OztPQUlHO0lBQ0gsMkRBQTJEO0lBQzNELElBQTZCLGFBQWEsQ0FBQyxJQUF1QjtRQUNoRSxJQUFJLElBQUksRUFBRTtZQUNSLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQVlELElBQXVDLGdCQUFnQjtRQUNyRCxJQUFJLElBQUksQ0FBQyxhQUFhLEtBQUssc0JBQXNCLENBQUMsV0FBVyxFQUFFO1lBQzdELE9BQU8sSUFBSSxDQUFDO1NBQ2I7SUFDSCxDQUFDO0lBRUQsSUFBc0MsZ0JBQWdCO1FBQ3BELElBQUksSUFBSSxDQUFDLGFBQWEsS0FBSyxzQkFBc0IsQ0FBQyxXQUFXLEVBQUU7WUFDN0QsT0FBTyxJQUFJLENBQUM7U0FDYjtJQUNILENBQUM7SUFFRCxJQUErQixTQUFTO1FBQ3RDLElBQUksSUFBSSxDQUFDLGFBQWEsS0FBSyxzQkFBc0IsQ0FBQyxJQUFJLEVBQUU7WUFDdEQsT0FBTyxJQUFJLENBQUM7U0FDYjtJQUNILENBQUM7SUFhRCxZQUFvQixPQUFtQjtRQUFuQixZQUFPLEdBQVAsT0FBTyxDQUFZO1FBL0JQLG1CQUFjLEdBQUcsSUFBSSxDQUFDO0lBK0JYLENBQUM7SUFFNUMsZUFBZTtRQUNiLElBQUksQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFeEQ7OztXQUdHO1FBQ0gsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNqQyxDQUFDOzhHQW5FVSxzQkFBc0I7a0dBQXRCLHNCQUFzQixtbEJBUHZCOzs7ZUFHRzs7MkZBSUYsc0JBQXNCO2tCQVRsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFFBQVEsRUFBRTs7O2VBR0c7b0JBQ2IsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEO2lHQWM4QixhQUFhO3NCQUF6QyxLQUFLO3VCQUFDLGdCQUFnQjtnQkFNZCxJQUFJO3NCQUFaLEtBQUs7Z0JBTUksTUFBTTtzQkFBZixNQUFNO2dCQUV5QixjQUFjO3NCQUE3QyxXQUFXO3VCQUFDLGlCQUFpQjtnQkFFUyxnQkFBZ0I7c0JBQXRELFdBQVc7dUJBQUMsb0JBQW9CO2dCQU1LLGdCQUFnQjtzQkFBckQsV0FBVzt1QkFBQyxtQkFBbUI7Z0JBTUQsU0FBUztzQkFBdkMsV0FBVzt1QkFBQyxZQUFZO2dCQU1VLElBQUk7c0JBQXRDLFdBQVc7dUJBQUMsV0FBVzs7c0JBQUcsS0FBSztnQkFFTyxRQUFRO3NCQUE5QyxXQUFXO3VCQUFDLGVBQWU7O3NCQUFHLEtBQUs7Z0JBRU8sWUFBWTtzQkFBdEQsV0FBVzt1QkFBQyxtQkFBbUI7O3NCQUFHLEtBQUs7Z0JBRUUsV0FBVztzQkFBcEQsV0FBVzt1QkFBQyxrQkFBa0I7O3NCQUFHLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlclZpZXdJbml0LFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBIb3N0QmluZGluZyxcbiAgSW5wdXQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgdHlwZSBTb2hvSHlwZXJsaW5rVHlwZSA9ICdzaG93LXZpc2l0ZWQnIHwgJ2ZvcndhcmQtY2FyZXQnIHwgJ2JhY2stY2FyZXQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhW3NvaG8taHlwZXJsaW5rXScsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgdGVtcGxhdGU6IGAgPHN2ZyBzb2hvLWljb24gKm5nSWY9XCJpc0NhcmV0TGVmdFwiIFtpY29uXT1cIidjYXJldC1sZWZ0J1wiPjwvc3ZnPlxuICAgICAgICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICAgICAgICAgIDxzdmcgc29oby1pY29uICpuZ0lmPVwiaXNDYXJldFJpZ2h0XCIgW2ljb25dPVwiJ2NhcmV0LXJpZ2h0J1wiPjwvc3ZnPlxuICAgICAgICAgICAgICBgLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcblxuZXhwb3J0IGNsYXNzIFNvaG9IeXBlcmxpbmtDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcblxuICBzdGF0aWMgU0hPV1ZJU0lURUQ6IFNvaG9IeXBlcmxpbmtUeXBlID0gJ3Nob3ctdmlzaXRlZCc7XG4gIHN0YXRpYyBESVJFQ1RJT05BTDogU29ob0h5cGVybGlua1R5cGUgPSAnZm9yd2FyZC1jYXJldCc7XG4gIHN0YXRpYyBCQUNLOiBTb2hvSHlwZXJsaW5rVHlwZSA9ICdiYWNrLWNhcmV0JztcblxuICAvKipcbiAgICogVGhlIHR5cGUgb2YgdGhlIGh5cGVybGluaywgZGVmYXVsdGluZyB0byAnaGlkZS1mb2N1cycuXG4gICAqXG4gICAqIEB0b2RvIHJlcGxhY2Ugb3ZlcnJpZGUgb2YgbmF0aXZlIGF0dHJpYnV0ZVxuICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9uby1pbnB1dC1yZW5hbWVcbiAgQElucHV0KCdzb2hvLWh5cGVybGluaycpIHNldCBzb2hvSHlwZXJsaW5rKHR5cGU6IFNvaG9IeXBlcmxpbmtUeXBlKSB7XG4gICAgaWYgKHR5cGUpIHtcbiAgICAgIHRoaXMuaHlwZXJsaW5rVHlwZSA9IHR5cGU7XG4gICAgfVxuICB9XG5cbiAgQElucHV0KCkgaWNvbj86IHN0cmluZztcblxuICAvKipcbiAgICogQHRvZG8gcmVwbGFjZSBvdmVycmlkZSBvZiBuYXRpdmUgYXR0cmlidXRlXG4gICAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L25vLW91dHB1dC1uYXRpdmUsIEBhbmd1bGFyLWVzbGludC9uby1vdXRwdXQtcmVuYW1lXG4gIEBPdXRwdXQoKSBjaGFuZ2U/OiBFdmVudEVtaXR0ZXI8U29ob0h5cGVybGlua0V2ZW50PjtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmh5cGVybGluaycpIGh5cGVyTGlua0NsYXNzID0gdHJ1ZTtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNob3ctdmlzaXRlZCcpIGdldCBzaG93VmlzaXRlZENsYXNzKCkge1xuICAgIGlmICh0aGlzLmh5cGVybGlua1R5cGUgPT09IFNvaG9IeXBlcmxpbmtDb21wb25lbnQuU0hPV1ZJU0lURUQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuZGlyZWN0aW9uYWwnKSBnZXQgZGlyZWN0aW9uYWxDbGFzcygpIHtcbiAgICBpZiAodGhpcy5oeXBlcmxpbmtUeXBlID09PSBTb2hvSHlwZXJsaW5rQ29tcG9uZW50LkRJUkVDVElPTkFMKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmJhY2snKSBnZXQgYmFja0NsYXNzKCkge1xuICAgIGlmICh0aGlzLmh5cGVybGlua1R5cGUgPT09IFNvaG9IeXBlcmxpbmtDb21wb25lbnQuQkFDSykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmhyZWYnKSBASW5wdXQoKSBocmVmPzogc3RyaW5nO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5kaXNhYmxlZCcpIEBJbnB1dCgpIGRpc2FibGVkPzogYm9vbGVhbjtcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuaXNDYXJldFJpZ2h0JykgQElucHV0KCkgaXNDYXJldFJpZ2h0PzogYm9vbGVhbjtcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuaXNDYXJldExlZnQnKSBASW5wdXQoKSBpc0NhcmV0TGVmdD86IGJvb2xlYW47XG5cbiAgcHJpdmF0ZSBoeXBlcmxpbmtUeXBlPzogU29ob0h5cGVybGlua1R5cGU7XG4gIHByaXZhdGUgalF1ZXJ5RWxlbWVudD86IEpRdWVyeTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHsgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLmpRdWVyeUVsZW1lbnQgPSBqUXVlcnkodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpO1xuXG4gICAgLypcbiAgICAgKiBoaWRlRm9jdXMoKSBpcyB0aGUgcGx1Z2luIHVzZWQgZm9yIGh5cGVybGlua1xuICAgICAqIEluaXRpYWxpemUgaGlkZUZvY3VzKClcbiAgICAgKi9cbiAgICB0aGlzLmpRdWVyeUVsZW1lbnQuaGlkZUZvY3VzKCk7XG4gIH1cbn1cbiJdfQ==