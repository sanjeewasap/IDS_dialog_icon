import { Injectable } from '@angular/core';
import { SohoAboutRef } from './soho-about.ref';
import * as i0 from "@angular/core";
/**
 * This service is used to create about dialogs.
 */
export class SohoAboutService {
    /**
     * Constructor.
     */
    constructor(ngZone) {
        this.ngZone = ngZone;
    }
    /**
     * Creates a about defined by the given info, returning a reference to the
     * associated about dialog that can be interacted with.
     *
     * The about dialog won't be open until open is called on the returned instance,
     * see the about ref api for further methods.
     *
     * @parent options - a compete set of options; can be null.
     *
     * @return the about reference.
     */
    about(options) {
        return new SohoAboutRef(this.ngZone).options(options);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoAboutService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoAboutService }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.4", ngImport: i0, type: SohoAboutService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29oby1hYm91dC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWRzLWVudGVycHJpc2Utbmcvc3JjL2xpYi9hYm91dC9zb2hvLWFib3V0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBRWhEOztHQUVHO0FBRUgsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7T0FFRztJQUNILFlBQTZCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO0lBQzNDLENBQUM7SUFFRDs7Ozs7Ozs7OztPQVVHO0lBQ0gsS0FBSyxDQUFDLE9BQTBCO1FBQzlCLE9BQU8sSUFBSSxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN4RCxDQUFDOzhHQXBCVSxnQkFBZ0I7a0hBQWhCLGdCQUFnQjs7MkZBQWhCLGdCQUFnQjtrQkFENUIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU29ob0Fib3V0UmVmIH0gZnJvbSAnLi9zb2hvLWFib3V0LnJlZic7XG5cbi8qKlxuICogVGhpcyBzZXJ2aWNlIGlzIHVzZWQgdG8gY3JlYXRlIGFib3V0IGRpYWxvZ3MuXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTb2hvQWJvdXRTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yLlxuICAgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBuZ1pvbmU6IE5nWm9uZSkge1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBhYm91dCBkZWZpbmVkIGJ5IHRoZSBnaXZlbiBpbmZvLCByZXR1cm5pbmcgYSByZWZlcmVuY2UgdG8gdGhlXG4gICAqIGFzc29jaWF0ZWQgYWJvdXQgZGlhbG9nIHRoYXQgY2FuIGJlIGludGVyYWN0ZWQgd2l0aC5cbiAgICpcbiAgICogVGhlIGFib3V0IGRpYWxvZyB3b24ndCBiZSBvcGVuIHVudGlsIG9wZW4gaXMgY2FsbGVkIG9uIHRoZSByZXR1cm5lZCBpbnN0YW5jZSxcbiAgICogc2VlIHRoZSBhYm91dCByZWYgYXBpIGZvciBmdXJ0aGVyIG1ldGhvZHMuXG4gICAqXG4gICAqIEBwYXJlbnQgb3B0aW9ucyAtIGEgY29tcGV0ZSBzZXQgb2Ygb3B0aW9uczsgY2FuIGJlIG51bGwuXG4gICAqXG4gICAqIEByZXR1cm4gdGhlIGFib3V0IHJlZmVyZW5jZS5cbiAgICovXG4gIGFib3V0KG9wdGlvbnM/OiBTb2hvQWJvdXRPcHRpb25zKTogU29ob0Fib3V0UmVmIHtcbiAgICByZXR1cm4gbmV3IFNvaG9BYm91dFJlZih0aGlzLm5nWm9uZSkub3B0aW9ucyhvcHRpb25zKTtcbiAgfVxufVxuIl19