@charset "UTF-8";
/**
 * Checkbox Mixins.
 */
@keyframes check {
  0% {
    height: 0;
    left: 0;
    top: 8px;
    width: 0;
  }
  50% {
    height: 0;
    left: 0;
    top: 8px;
    width: 4px;
  }
  100% {
    height: 10px;
    left: 4px;
    top: 0;
    width: 4px;
  }
}
@keyframes checkindeterminate {
  0% {
    width: 0;
  }
  100% {
    width: 10px;
  }
}
.icon-dirty {
  position: absolute;
  color: var(--ids-color-caution-30);
  top: 1px;
}
.icon-dirty[dir=rtl] {
  transform: rotate(90deg);
  top: 0;
}

.ids-color-picker .icon-dirty {
  margin-inline-start: 35px;
}

.ids-color-picker.compact .icon-dirty {
  margin-inline-start: 27px;
}

.ids-radio-group .icon-dirty {
  margin-inline-start: -1px;
  margin-block-start: 9px;
  top: auto;
  z-index: 1;
}

.ids-checkbox .icon-dirty {
  margin-inline-start: -25px;
}
.ids-checkbox .icon-dirty[dir=rtl] {
  margin-inline-start: -20px;
  transform: none;
  top: -1px;
}
.ids-checkbox.hitbox .icon-dirty {
  margin-inline-start: -30px;
}
.ids-checkbox.hitbox .icon-dirty[dir=rtl] {
  margin-inline-start: -26px;
}

.ids-textarea .icon-dirty {
  top: 0;
  margin-inline-start: 1px;
}
.ids-textarea .icon-dirty[dir=rtl] {
  top: 1px;
}

.validation-message {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: flex;
  font-family: var(--ids-font-family-default);
  margin-top: var(--ids-space-30);
}
.validation-message.has-custom-icon {
  color: var(--ids-icon-color-default);
}
.validation-message.disabled {
  color: var(--ids-input-color-text-disabled);
}
.validation-message .ids-icon {
  margin-inline-end: var(--ids-space-30);
}
.validation-message.alert {
  color: var(--ids-color-caution-default);
}
.validation-message.alert.disabled {
  color: var(--ids-color-caution-30);
}
.validation-message.warning {
  color: var(--ids-color-warning-default);
}
.validation-message.warning.disabled {
  color: var(--ids-color-warning-30);
}
.validation-message.error {
  color: var(--ids-color-error-default);
}
.validation-message.error.disabled {
  color: var(--ids-color-error-30);
}
.validation-message.info {
  color: var(--ids-color-info-default);
}
.validation-message.info.disabled {
  color: var(--ids-color-info-30);
}
.validation-message.success {
  color: var(--ids-color-success-default);
}
.validation-message.success.disabled {
  color: var(--ids-color-success-30);
}

:host(.justify-center) .ids-checkbox .checkmark,
:host(.justify-center) .ids-checkbox:not([color]) input[type=checkbox] ~ .checkmark {
  top: calc(50% - 8px);
}

:host([no-margin]) .ids-checkbox {
  margin: var(--ids-space-none);
}

.ids-checkbox {
  margin-bottom: var(--ids-space-40);
}
.ids-checkbox label {
  cursor: var(--ids-cursor-pointer);
  user-select: none;
  padding-inline-start: 24px;
  position: relative;
  display: inline-block;
}
.ids-checkbox label.empty::before {
  content: "Â ";
}
.ids-checkbox label.required .label-checkbox::after {
  position: absolute;
  font-family: var(--ids-font-family-default);
  margin-inline-start: var(--ids-space-20);
  margin-inline-end: var(--ids-space-20);
  font-size: var(--ids-font-size-50);
  color: var(--ids-input-required-indicator-color-text-default);
  content: "*";
  right: -13px;
  top: -2px;
}
.ids-checkbox label.no-required-indicator .label-checkbox::after, .ids-checkbox label.empty .label-checkbox::after {
  content: "";
}
.ids-checkbox.disabled label {
  cursor: var(--ids-cursor-default);
}
.ids-checkbox.disabled label.required .label-checkbox::after {
  color: var(--ids-input-required-indicator-color-text-disabled);
}
.ids-checkbox.hitbox {
  padding-top: var(--ids-space-50);
  padding-bottom: var(--ids-space-50);
}
.ids-checkbox.hitbox label {
  padding-inline-start: 42px;
}
.ids-checkbox.hitbox label span.checkmark {
  margin-inline-start: 14px;
}
.ids-checkbox.hitbox .validation-message {
  margin-inline-start: 14px;
}
.ids-checkbox.horizontal {
  margin-inline-end: var(--ids-space-50);
  display: inline-block;
}
.ids-checkbox input[type=checkbox] {
  position: absolute;
  cursor: var(--ids-cursor-pointer);
  opacity: 0;
  height: 0;
  width: 0;
}
.ids-checkbox input[type=checkbox] ~ .checkmark {
  position: absolute;
  border: var(--ids-checkbox-border);
  border-radius: var(--ids-checkbox-border-radius);
  height: 14px;
  width: 14px;
  left: 0;
  top: 2px;
}
.ids-checkbox input[type=checkbox].error ~ .checkmark {
  border-color: var(--ids-checkbox-color-border-error);
}
.ids-checkbox input[type=checkbox]:checked ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-selected);
  border-color: var(--ids-checkbox-color-border-selected);
}
.ids-checkbox input[type=checkbox]:checked ~ .checkmark::after {
  position: absolute;
  display: block;
  border: var(--ids-font-size-20) solid var(--ids-checkbox-color-border-selected-after);
  border-width: var(--ids-checkbox-border-width-selected-after);
  animation: check 0.15s;
  transform: rotate(45deg);
  content: "";
  height: 10px;
  left: 4px;
  top: 0;
  width: 4px;
}
.ids-checkbox input[type=checkbox].indeterminate ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-indeterminate);
  border-color: var(--ids-checkbox-color-border-indeterminate);
}
.ids-checkbox input[type=checkbox].indeterminate ~ .checkmark::after {
  position: absolute;
  animation: checkindeterminate 0.15s;
  display: block;
  border: 1px solid var(--ids-checkbox-color-border-indeterminate-after);
  border-width: var(--ids-checkbox-border-width-indeterminate);
  content: "";
  height: 6px;
  left: 2px;
  top: 0;
  transform: none;
  width: 10px;
}
.ids-checkbox input[type=checkbox]:focus ~ .checkmark {
  border-color: var(--ids-checkbox-color-border-focus);
  box-shadow: var(--ids-checkbox-focus-box-shadow);
}
.ids-checkbox input[type=checkbox]:disabled ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-disabled);
  border-color: var(--ids-checkbox-color-border-disabled);
  cursor: var(--ids-cursor-default);
}
.ids-checkbox input[type=checkbox]:disabled ~ .label-checkbox {
  cursor: var(--ids-cursor-default);
  color: var(--ids-checkbox-color-text-disabled);
}
.ids-checkbox input[type=checkbox]:disabled.error ~ .checkmark {
  border-color: var(--ids-color-error-30);
}
.ids-checkbox input[type=checkbox]:disabled:checked ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-selected-disabled);
  border-color: var(--ids-checkbox-color-border-selected-disabled);
}
.ids-checkbox.no-animation input[type=checkbox]:checked ~ .checkmark::after {
  animation: none;
}
.ids-checkbox[color=emerald] input[type=checkbox] ~ .checkmark {
  background-color: var(--ids-color-emerald-70);
  border-color: var(--ids-color-emerald-70);
}
.ids-checkbox[color=emerald] input[type=checkbox]:disabled ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-disabled);
  border-color: var(--ids-checkbox-color-border-disabled);
  cursor: var(--ids-cursor-default);
}
.ids-checkbox[color=emerald] input[type=checkbox]:disabled:checked ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-selected-disabled);
  border-color: var(--ids-checkbox-color-border-selected-disabled);
}
.ids-checkbox[color=emerald] input[type=checkbox]:focus ~ .checkmark {
  border-color: var(--ids-color-emerald-70);
}
.ids-checkbox[color=amethyst] input[type=checkbox] ~ .checkmark {
  background-color: var(--ids-color-amethyst-70);
  border-color: var(--ids-color-amethyst-70);
}
.ids-checkbox[color=amethyst] input[type=checkbox]:disabled ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-disabled);
  border-color: var(--ids-checkbox-color-border-disabled);
  cursor: var(--ids-cursor-default);
}
.ids-checkbox[color=amethyst] input[type=checkbox]:disabled:checked ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-selected-disabled);
  border-color: var(--ids-checkbox-color-border-selected-disabled);
}
.ids-checkbox[color=amethyst] input[type=checkbox]:focus ~ .checkmark {
  border-color: var(--ids-color-amethyst-70);
}
.ids-checkbox[color=azure] input[type=checkbox] ~ .checkmark {
  background-color: var(--ids-color-azure-70);
  border-color: var(--ids-color-azure-70);
}
.ids-checkbox[color=azure] input[type=checkbox]:disabled ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-disabled);
  border-color: var(--ids-checkbox-color-border-disabled);
  cursor: var(--ids-cursor-default);
}
.ids-checkbox[color=azure] input[type=checkbox]:disabled:checked ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-selected-disabled);
  border-color: var(--ids-checkbox-color-border-selected-disabled);
}
.ids-checkbox[color=azure] input[type=checkbox]:focus ~ .checkmark {
  border-color: var(--ids-color-azure-70);
}
.ids-checkbox[color=amber] input[type=checkbox] ~ .checkmark {
  background-color: var(--ids-color-amber-70);
  border-color: var(--ids-color-amber-70);
}
.ids-checkbox[color=amber] input[type=checkbox]:disabled ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-disabled);
  border-color: var(--ids-checkbox-color-border-disabled);
  cursor: var(--ids-cursor-default);
}
.ids-checkbox[color=amber] input[type=checkbox]:disabled:checked ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-selected-disabled);
  border-color: var(--ids-checkbox-color-border-selected-disabled);
}
.ids-checkbox[color=amber] input[type=checkbox]:focus ~ .checkmark {
  border-color: var(--ids-color-amber-70);
}
.ids-checkbox[color=ruby] input[type=checkbox] ~ .checkmark {
  background-color: var(--ids-color-ruby-70);
  border-color: var(--ids-color-ruby-70);
}
.ids-checkbox[color=ruby] input[type=checkbox]:disabled ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-disabled);
  border-color: var(--ids-checkbox-color-border-disabled);
  cursor: var(--ids-cursor-default);
}
.ids-checkbox[color=ruby] input[type=checkbox]:disabled:checked ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-selected-disabled);
  border-color: var(--ids-checkbox-color-border-selected-disabled);
}
.ids-checkbox[color=ruby] input[type=checkbox]:focus ~ .checkmark {
  border-color: var(--ids-color-ruby-70);
}
.ids-checkbox .validation-message {
  margin-top: var(--ids-space-30);
  margin-inline-start: -1px;
}
.ids-checkbox.has-focus input[type=checkbox] ~ .checkmark {
  border-color: var(--ids-checkbox-focus-border-color);
  box-shadow: var(--ids-checkbox-focus-box-shadow);
}

:host-context(form) {
  margin-top: var(--ids-space-40);
  display: flex;
}

:host([dir=rtl]) input[type=checkbox] ~ .checkmark {
  left: initial;
  right: 0;
}
:host([dir=rtl]) label.required .label-checkbox::after {
  right: initial;
  left: -13px;
}

:host(.multiselect-checkbox) input[type=checkbox]:not(:checked):not(:disabled) ~ .checkmark {
  background-color: var(--ids-checkbox-color-background-multiselect);
}
:host(.multiselect-checkbox) .ids-checkbox label {
  padding-inline-start: var(--ids-space-60);
}