import{a as n}from"./ids-chunk-N7RNTKMO.js";import{a as h}from"./ids-chunk-AKCO43TX.js";import{a as d,b as a}from"./ids-chunk-XE4WFW5M.js";import{a as u}from"./ids-chunk-GFV2Z7F5.js";import{e as r}from"./ids-chunk-QPDOZZIG.js";import{a as t}from"./ids-chunk-EQJWBFQ2.js";import{a as l}from"./ids-chunk-U7OOVFXE.js";var b=`
/* Ids Switch Component */ /**
 * Switch Mixins.
 */
.ids-switch {
  margin-block-end: var(--ids-input-margin-bottom);
}
.ids-switch label {
  cursor: var(--ids-cursor-pointer);
  user-select: none;
  padding-inline-start: 40px;
  position: relative;
  display: inline-block;
}
.ids-switch label:hover .slider::after {
  box-shadow: 0 2px 5px var(--ids-switch-toggle-color-background-hover);
}
.ids-switch label:active .slider::after {
  box-shadow: var(--ids-switch-toggle-shadow-focus);
}
.ids-switch.disabled label {
  cursor: var(--ids-cursor-default);
}
.ids-switch input[type=checkbox] {
  position: absolute;
  cursor: var(--ids-cursor-default);
  opacity: 0;
  height: 0;
  width: 0;
}
.ids-switch input[type=checkbox] ~ .slider {
  position: absolute;
  background-color: var(--ids-switch-pole-color-background-default);
  border-radius: 4px;
  display: inline-block;
  height: 4px;
  left: 0;
  top: 10px;
  width: 31px;
}
.ids-switch input[type=checkbox] ~ .slider::after {
  position: absolute;
  background-color: var(--ids-switch-toggle-color-background-default);
  border: 1px solid var(--ids-switch-toggle-color-border-default);
  border-radius: var(--ids-border-radius-circle);
  content: "";
  height: 14px;
  left: 0;
  top: -7px;
  width: 14px;
  transition: all var(--ids-motion-duration) var(--ids-motion-ease);
}
.ids-switch input[type=checkbox]:checked ~ .slider {
  background-color: var(--ids-switch-pole-color-background-selected);
  transition: all var(--ids-motion-duration) var(--ids-motion-ease);
}
.ids-switch input[type=checkbox]:checked ~ .slider::after {
  background-color: var(--ids-switch-toggle-color-background-selected);
  border-color: var(--ids-switch-toggle-color-border-selected);
  left: 15px;
  transition: all var(--ids-motion-duration) var(--ids-motion-ease);
}
.ids-switch input[type=checkbox]:focus ~ .slider::after {
  box-shadow: var(--ids-switch-toggle-shadow-focus);
}
.ids-switch input[type=checkbox]:disabled ~ .slider {
  background-color: var(--ids-switch-pole-color-background-disabled);
  border-color: var(--ids-switch-pole-off-disabled-border-color);
  cursor: var(--ids-cursor-default);
}
.ids-switch input[type=checkbox]:disabled ~ .slider::after {
  background-color: var(--ids-switch-toggle-color-background-disabled);
  border-color: var(--ids-switch-toggle-color-border-disabled);
  box-shadow: none;
}
.ids-switch input[type=checkbox]:disabled ~ .label-text {
  cursor: var(--ids-cursor-default);
  color: var(--ids-color-text-disabled);
}
.ids-switch input[type=checkbox]:disabled:checked ~ .slider {
  background-color: var(--ids-switch-pole-color-background-selected-disabled);
  border-color: var(--ids-switch-pole-on-disabled-border-color);
}
.ids-switch input[type=checkbox]:disabled:checked ~ .slider::after {
  border-color: var(--ids-switch-toggle-color-border-selected-disabled);
  background-color: var(--ids-switch-toggle-color-background-selected-disabled);
}

:host([dir=rtl]) input[type=checkbox] ~ .slider {
  left: initial;
  right: 0;
}
:host([dir=rtl]) input[type=checkbox]:checked ~ .slider::after {
  left: 0;
  right: 15px;
}
:host([dir=rtl]) input[type=checkbox] ~ .slider::after {
  left: initial;
  right: 0;
}
:host([dir=rtl]) label {
  padding-right: 40px;
  padding-left: 0;
}`;var p=n(h(u)),c=class extends p{input;labelEl;constructor(){super()}isFormComponent=!0;static get attributes(){return[t.CHECKED,t.DISABLED,t.LABEL,t.VALUE]}connectedCallback(){super.connectedCallback(),this.input=this.shadowRoot?.querySelector('input[type="checkbox"]'),this.labelEl=this.shadowRoot?.querySelector("label"),this.#e()}disconnectedCallback(){p.prototype.disconnectedCallback.apply(this),this.#t("remove"),this.attachNativeEvents("remove")}template(){let e=r(this.disabled)?" disabled":"",i=r(this.checked)?" checked":"";return`
      <div${` class="ids-switch${e}"`}>
        <label>
          <input type="checkbox" class="checkbox"${e}${i} part="checkbox">
          <span class="slider${i}" part="slider"></span>
          <ids-text class="label-text" part="label">${this.label}</ids-text>
        </label>
      </div>
    `}#t(e=""){if(this.input){let i="change";if(e==="remove"){let s=this.handledEvents?.get(i);s&&s.target===this.input&&this.offEvent(i,this.input)}else this.onEvent(i,this.input,()=>{this.checked=!!this.input?.checked})}}attachNativeEvents(e=""){return this.input&&["change","focus","keydown","keypress","keyup","click","dbclick"].forEach(s=>{if(e==="remove"){let o=this.handledEvents?.get(s);o&&o.target===this.input&&this.offEvent(s,this.input)}else this.onEvent(s,this.input,o=>{this.triggerEvent(o.type,this,{detail:{elem:this,nativeEvent:o,value:this.value,checked:this.input?.checked}})})}),this}#e(){this.#t(),this.attachNativeEvents()}set checked(e){let i=this.shadowRoot?.querySelector(".slider");this.input=this.shadowRoot?.querySelector('input[type="checkbox"]');let s=r(e);s?(this.setAttribute(t.CHECKED,s.toString()),this.input?.setAttribute(t.CHECKED,s.toString()),i?.classList.add(t.CHECKED)):(this.removeAttribute(t.CHECKED),this.input?.removeAttribute(t.CHECKED),i?.classList.remove(t.CHECKED))}get checked(){return r(this.getAttribute(t.CHECKED))}set disabled(e){this.input=this.shadowRoot?.querySelector('input[type="checkbox"]');let i=r(e),s=this.shadowRoot?.querySelector(".label-text");i?(this.setAttribute(t.DISABLED,i.toString()),this.input?.setAttribute(t.DISABLED,""),this.container?.classList.add(t.DISABLED),s?.setAttribute(t.DISABLED,"true")):(this.removeAttribute(t.DISABLED),this.input?.removeAttribute(t.DISABLED),this.container?.classList.remove(t.DISABLED),s?.removeAttribute(t.DISABLED))}get disabled(){return this.hasAttribute(t.DISABLED)}set label(e){let i=this.shadowRoot?.querySelector(".label-text")||document.createElement("span");if(e){this.setAttribute(t.LABEL,e),i.innerHTML=e;return}this.removeAttribute(t.LABEL),i.innerHTML=""}get label(){return this.getAttribute(t.LABEL)||""}set value(e){this.input=this.shadowRoot?.querySelector('input[type="checkbox"]'),e?this.setAttribute(t.VALUE,e):this.removeAttribute(t.VALUE),this.input?.setAttribute(t.VALUE,e||"")}get value(){return this.getAttribute(t.VALUE)}focus(){this.input?.focus()}};c=l([d("ids-switch"),a(b)],c);export{c as a};
