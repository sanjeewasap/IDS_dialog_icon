import{a as n}from"./ids-chunk-N7RNTKMO.js";import{a as u}from"./ids-chunk-AKCO43TX.js";import{a as l,b as c}from"./ids-chunk-XE4WFW5M.js";import{a as b}from"./ids-chunk-GFV2Z7F5.js";import{e as i}from"./ids-chunk-QPDOZZIG.js";import{a as r}from"./ids-chunk-EQJWBFQ2.js";import{a as s}from"./ids-chunk-U7OOVFXE.js";var p=`
/**
 * Radio Mixins.
 */
.ids-radio {
  outline: none;
  margin-block-start: 8px;
  margin-block-end: 8px;
}
.ids-radio label {
  cursor: var(--ids-cursor-pointer);
  position: relative;
  padding-inline-start: 24px;
  display: inline-block;
  user-select: none;
}
.ids-radio.disabled label {
  cursor: var(--ids-cursor-default);
}
.ids-radio.horizontal {
  display: inline-block;
  margin-inline-end: 12px;
}
.ids-radio input[type=radio] {
  position: absolute;
  cursor: var(--ids-cursor-pointer);
  opacity: 0;
  height: 0;
  width: 0;
}
.ids-radio input[type=radio] ~ .circle {
  position: absolute;
  border: 1px solid var(--ids-radio-button-color-border-default);
  border-radius: var(--ids-radio-button-border-radius);
  height: 14px;
  left: 0;
  top: 3px;
  transition: border-color var(--ids-motion-duration) var(--ids-motion-ease);
  width: 14px;
}
.ids-radio input[type=radio] ~ .circle::after {
  position: absolute;
  background-color: var(--ids-radio-button-color-background);
  border: 1px solid var(--ids-radio-button-color-background);
  border-radius: var(--ids-radio-button-border-radius);
  content: "";
  height: 0;
  left: 6px;
  top: 6px;
  transition: all var(--ids-motion-duration) var(--ids-motion-ease);
  width: 0;
}
.ids-radio input[type=radio].error ~ .circle {
  border-color: var(--ids-color-error-default);
}
.ids-radio input[type=radio].error ~ .label-text {
  color: var(--ids-color-error-default);
}
.ids-radio input[type=radio]:checked ~ .circle {
  background-color: var(--ids-radio-button-color-background-selected);
  border-color: var(--ids-radio-button-color-border-selected);
}
.ids-radio input[type=radio]:checked ~ .circle::after {
  background-color: var(--ids-radio-button-inner-color-background-selected);
  border-color: var(--ids-radio-button-inner-color-background-selected);
  border-width: 2px;
  height: 4px;
  left: 3px;
  top: 3px;
  width: 4px;
}
.ids-radio input[type=radio]:focus ~ .circle {
  box-shadow: var(--ids-shadow-20);
}
.ids-radio input[type=radio]:disabled ~ .circle {
  border-color: var(--ids-radio-button-color-border-disabled);
  cursor: var(--ids-cursor-default);
  box-shadow: none;
  box-shadow: none;
}
.ids-radio input[type=radio]:disabled ~ .label-text {
  cursor: var(--ids-cursor-default);
  color: var(--ids-color-text-disabled);
}
.ids-radio input[type=radio]:disabled.error ~ .circle {
  border-color: var(--ids-radio-button-color-border-disabled);
}
.ids-radio input[type=radio]:disabled.error ~ .label-text {
  color: var(--ids-radio-button-color-border-disabled);
}
.ids-radio input[type=radio]:disabled:checked ~ .circle {
  background-color: var(--ids-radio-button-color-background-selected-disabled);
  border-color: var(--ids-radio-button-color-border-selected-disabled);
}
.ids-radio:focus input[type=radio] ~ .circle {
  box-shadow: var(--ids-shadow-20);
}
.ids-radio[color=emerald] input[type=radio] ~ .circle {
  border-color: var(--ids-color-emerald-70);
}
.ids-radio[color=emerald] input[type=radio]:checked ~ .circle {
  background-color: var(--ids-color-emerald-70);
}
.ids-radio[color=emerald] input[type=radio]:disabled ~ .circle {
  border-color: var(--ids-radio-button-color-border-disabled);
  cursor: var(--ids-cursor-default);
  box-shadow: none;
}
.ids-radio[color=emerald] input[type=radio]:disabled:checked ~ .circle {
  background-color: var(--ids-radio-button-color-background-selected-disabled);
  border-color: var(--ids-radio-button-color-border-selected-disabled);
}
.ids-radio[color=emerald] input[type=radio]:focus ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-emerald-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=emerald]:focus input[type=radio] ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-emerald-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=amethyst] input[type=radio] ~ .circle {
  border-color: var(--ids-color-amethyst-70);
}
.ids-radio[color=amethyst] input[type=radio]:checked ~ .circle {
  background-color: var(--ids-color-amethyst-70);
}
.ids-radio[color=amethyst] input[type=radio]:disabled ~ .circle {
  border-color: var(--ids-radio-button-color-border-disabled);
  cursor: var(--ids-cursor-default);
  box-shadow: none;
}
.ids-radio[color=amethyst] input[type=radio]:disabled:checked ~ .circle {
  background-color: var(--ids-radio-button-color-background-selected-disabled);
  border-color: var(--ids-radio-button-color-border-selected-disabled);
}
.ids-radio[color=amethyst] input[type=radio]:focus ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-amethyst-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=amethyst]:focus input[type=radio] ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-amethyst-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=azure] input[type=radio] ~ .circle {
  border-color: var(--ids-color-azure-70);
}
.ids-radio[color=azure] input[type=radio]:checked ~ .circle {
  background-color: var(--ids-color-azure-70);
}
.ids-radio[color=azure] input[type=radio]:disabled ~ .circle {
  border-color: var(--ids-radio-button-color-border-disabled);
  cursor: var(--ids-cursor-default);
  box-shadow: none;
}
.ids-radio[color=azure] input[type=radio]:disabled:checked ~ .circle {
  background-color: var(--ids-radio-button-color-background-selected-disabled);
  border-color: var(--ids-radio-button-color-border-selected-disabled);
}
.ids-radio[color=azure] input[type=radio]:focus ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-azure-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=azure]:focus input[type=radio] ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-azure-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=amber] input[type=radio] ~ .circle {
  border-color: var(--ids-color-amber-70);
}
.ids-radio[color=amber] input[type=radio]:checked ~ .circle {
  background-color: var(--ids-color-amber-70);
}
.ids-radio[color=amber] input[type=radio]:disabled ~ .circle {
  border-color: var(--ids-radio-button-color-border-disabled);
  cursor: var(--ids-cursor-default);
  box-shadow: none;
}
.ids-radio[color=amber] input[type=radio]:disabled:checked ~ .circle {
  background-color: var(--ids-radio-button-color-background-selected-disabled);
  border-color: var(--ids-radio-button-color-border-selected-disabled);
}
.ids-radio[color=amber] input[type=radio]:focus ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-amber-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=amber]:focus input[type=radio] ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-amber-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=ruby] input[type=radio] ~ .circle {
  border-color: var(--ids-color-ruby-70);
}
.ids-radio[color=ruby] input[type=radio]:checked ~ .circle {
  background-color: var(--ids-color-ruby-70);
}
.ids-radio[color=ruby] input[type=radio]:disabled ~ .circle {
  border-color: var(--ids-radio-button-color-border-disabled);
  cursor: var(--ids-cursor-default);
  box-shadow: none;
}
.ids-radio[color=ruby] input[type=radio]:disabled:checked ~ .circle {
  background-color: var(--ids-radio-button-color-background-selected-disabled);
  border-color: var(--ids-radio-button-color-border-selected-disabled);
}
.ids-radio[color=ruby] input[type=radio]:focus ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-ruby-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}
.ids-radio[color=ruby]:focus input[type=radio] ~ .circle {
  box-shadow: 0 0 0 1px var(--ids-input-color-background-readonly), 0 0 0 2px var(--ids-color-ruby-70), 0 0 4px 5px var(--ids-input-color-background-readonly);
}

:host([dir=rtl]) input[type=radio] ~ .circle {
  left: initial;
  right: 0;
}
:host([dir=rtl]) label {
  padding-right: 24px;
  padding-left: 0;
}
:host([dir=rtl]) label.required .label-text::after {
  right: initial;
  left: -13px;
}`;var g=n(u(b)),d=class extends g{input;labelEl;rootEl;constructor(){super()}static get attributes(){return[r.CHECKED,r.COLOR,r.DISABLED,r.GROUP_DISABLED,r.HORIZONTAL,r.LABEL,r.LANGUAGE,r.VALIDATION_HAS_ERROR,r.VALUE]}connectedCallback(){super.connectedCallback(),this.input=this.shadowRoot?.querySelector('input[type="radio"]'),this.labelEl=this.shadowRoot?.querySelector("label"),this.rootEl=this.shadowRoot?.querySelector(".ids-radio"),this.checked&&!this.input?.getAttribute(r.CHECKED)&&(this.checked=!0),this.#i()}template(){let o=i(this.groupDisabled)||i(this.disabled),t=o?" disabled":"",e=o?' aria-disabled="true"':"",h=this.color?` color="${this.color}"`:"",v=i(this.horizontal)?" horizontal":"",a=i(this.checked)?" checked":"";return`
      <div${` class="ids-radio${t}${v}"`}${h}>
        <label>
          <input type="radio" part="radio" tabindex="-1" class="radio-button"${t}${a}>
          <span class="circle${a}" part="circle"></span>
          <ids-text class="label-text"${e} part="label">${this.label}</ids-text>
        </label>
      </div>
    `}#r(){this.onEvent("change",this.input,()=>{this.checked=!!this.input?.checked})}#o(){this.onEvent("click",this.labelEl,()=>{this.input?.focus()})}#t(){["change","focus","keydown","keypress","keyup","click","dbclick"].forEach(t=>{this.onEvent(t,this.input,e=>{this.triggerEvent(e.type,this,{detail:{elem:this,nativeEvent:e,value:this.value,checked:!!this.input?.checked}})})})}#i(){this.#o(),this.#r(),this.#t()}set checked(o){let t=this.shadowRoot?.querySelector(".circle"),e=i(o);e?this.setAttribute(r.CHECKED,e.toString()):this.removeAttribute(r.CHECKED),this.input&&this.rootEl&&t&&(e?(i(this.disabled)||i(this.groupDisabled)||this.rootEl.setAttribute("tabindex","0"),t.classList.add(r.CHECKED),this.input.checked=!0):(this.rootEl.setAttribute("tabindex","-1"),this.input.checked=!1,t.classList.remove(r.CHECKED)))}get checked(){return i(this.getAttribute(r.CHECKED))}set color(o){o?(this.setAttribute(r.COLOR,o.toString()),this.rootEl?.setAttribute(r.COLOR,o.toString())):(this.removeAttribute(r.COLOR),this.rootEl?.removeAttribute(r.COLOR))}get color(){return this.getAttribute(r.COLOR)}set disabled(o){let t=this.shadowRoot?.querySelector(".label-text"),e=i(o);e?(this.setAttribute(r.DISABLED,e.toString()),this.input?.setAttribute(r.DISABLED,e.toString()),this.rootEl?.classList.add(r.DISABLED),this.rootEl?.setAttribute("tabindex","-1"),t?.setAttribute("aria-disabled","true"),t?.setAttribute(r.DISABLED,"true")):(this.removeAttribute(r.DISABLED),this.input?.removeAttribute(r.DISABLED),t?.removeAttribute("aria-disabled"),t?.removeAttribute(r.DISABLED),this.rootEl?.classList.remove(r.DISABLED))}get disabled(){return i(this.getAttribute(r.DISABLED))}set groupDisabled(o){let t=this.shadowRoot?.querySelector(".label-text"),e=i(o);e?(this.setAttribute(r.GROUP_DISABLED,e.toString()),this.input?.setAttribute(r.DISABLED,e.toString()),this.rootEl?.classList.add(r.DISABLED),this.rootEl?.setAttribute("tabindex","-1"),t?.setAttribute(r.DISABLED,"true")):(this.removeAttribute(r.GROUP_DISABLED),this.input?.removeAttribute(r.DISABLED),this.rootEl?.classList.remove(r.DISABLED),t?.removeAttribute(r.DISABLED))}get groupDisabled(){return i(this.getAttribute(r.GROUP_DISABLED))}set horizontal(o){let t=i(o);t?(this.setAttribute(r.HORIZONTAL,t.toString()),this.rootEl?.classList.add(r.HORIZONTAL)):(this.removeAttribute(r.HORIZONTAL),this.rootEl?.classList.remove(r.HORIZONTAL))}get horizontal(){return i(this.getAttribute(r.HORIZONTAL))}set label(o){let t=this.labelEl?.querySelector(".label-text");o?this.setAttribute(r.LABEL,o):this.removeAttribute(r.LABEL),t&&(t.innerHTML=o||"")}get label(){return this.getAttribute(r.LABEL)||""}set validationHasError(o){let t=i(o);t?(this.setAttribute(r.VALIDATION_HAS_ERROR,t.toString()),this.input?.classList.add("error")):(this.removeAttribute(r.VALIDATION_HAS_ERROR),this.input?.classList.remove("error"))}get validationHasError(){return i(this.getAttribute(r.VALIDATION_HAS_ERROR))}set value(o){o?this.setAttribute(r.VALUE,o):this.removeAttribute(r.VALUE),this.input?.setAttribute(r.VALUE,o||"")}get value(){return this.getAttribute(r.VALUE)}focus(){this.input?.focus()}};d=s([l("ids-radio"),c(p)],d);export{d as a};
