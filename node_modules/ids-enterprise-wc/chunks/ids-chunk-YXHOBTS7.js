import{e as i}from"./ids-chunk-QPDOZZIG.js";import{a as n}from"./ids-chunk-EQJWBFQ2.js";var o=s=>class extends s{#e=[];#t=[];constructor(...e){super(...e)}static get attributes(){return[...s.attributes,n.VIEW_PICKER,n.HIDDEN]}set eventsData(e){this.#e=this.sortEventsByDate(e),this.renderEventsData?.(!0),this.onEventsChange?.(this.#e)}get eventsData(){return this.#e}set eventTypesData(e){this.#t=e,this.renderEventsData?.(!0),this.onEventTypesChange?.(e)}get eventTypesData(){return this.#t}set beforeEventsRender(e){this.state.beforeEventsRender=e,this.renderEventsData?.()}set viewPicker(e){let t=i(e);t?this.setAttribute(n.VIEW_PICKER,""):this.removeAttribute(n.VIEW_PICKER),typeof this.onViewPickerChange=="function"&&this.onViewPickerChange(t)}get viewPicker(){return this.hasAttribute(n.VIEW_PICKER)}onHiddenChange(e){i(e)?this.container?.classList.add(n.HIDDEN):this.container?.classList.remove(n.HIDDEN)}sortEventsByDate(e){return e.slice().sort((t,a)=>{let r=new Date(t.starts),d=new Date(a.starts);return r.getTime()-d.getTime()})}generateDateKey(e){let t=e.getFullYear(),a=e.getMonth().toString(),r=e.getDate().toString();return parseInt(`${t}${a.padStart(2,"0")}${r.padStart(2,"0")}`)}removeAllEvents(){this.container?.querySelectorAll("ids-calendar-event")?.forEach(t=>t.remove())}createViewPickerTemplate(e){let t=e[0].toUpperCase()+e.slice(1).toLowerCase();return`
      <ids-menu-button id="view-picker-btn" menu="view-picker" value="${e}" dropdown-icon display-selected-text>
        <span><ids-text translate-text="true">${t}</ids-text></span>
      </ids-menu-button>
      <ids-popup-menu id="view-picker" trigger-type="click" target="#view-picker-btn">
        <ids-menu-group select="single">
          <ids-menu-item value="month" selected="${e==="month"}">
            <ids-text translate-text="true">Month</ids-text>
          </ids-menu-item>
          <ids-menu-item value="week" selected="${e==="week"}">
            <ids-text translate-text="true">Week</ids-text>
          </ids-menu-item>
          <ids-menu-item value="day" selected="${e==="day"}">
            <ids-text translate-text="true">Day</ids-text>
          </ids-menu-item>
        </ids-menu-group>
      </ids-popup-menu>
    `}viewPickerConnected(){let e=this.container?.querySelector("#view-picker-btn");e&&e.configureMenu()}attachViewPickerEvents(e){let t=this.container?.querySelector("#view-picker");t&&e&&(this.offEvent(`selected.${e}-view-picker`,t),this.onEvent(`selected.${e}-view-picker`,t,a=>{a.stopPropagation(),this.#n(a.detail.value)}))}#n(e,t){e&&this.triggerEvent("viewchange",this,{detail:{view:e,elem:this,date:t},bubbles:!0,cancelable:!0,composed:!0})}triggerDateChange(e,t){this.triggerEvent("datechange",this,{detail:{date:e,type:t},bubbles:!0,cancelable:!0,composed:!0})}getEventById(e){return this.#e.find(t=>t.id===e)}getEventElemById(e){return this.container?.querySelector(`ids-calendar-event[data-id="${e}"]`)}getEventTypeById(e){return this.#t.find(t=>e===t.id)}setViewPickerValue(e){let t=this.container?.querySelector("#view-picker-btn");t&&(t.value=e)}},c=o;export{c as a};
