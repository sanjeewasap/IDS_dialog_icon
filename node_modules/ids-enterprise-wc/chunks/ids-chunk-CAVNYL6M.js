import{a as l,b as B,c as o,e as n,g as S,k as c,l as m}from"./ids-chunk-Z4LLT2TE.js";import{k as v}from"./ids-chunk-ODGLGMPF.js";import{a as E}from"./ids-chunk-T6ZV4PDM.js";import{a as f}from"./ids-chunk-AKCO43TX.js";import{a as h,b}from"./ids-chunk-XE4WFW5M.js";import{a as y}from"./ids-chunk-GFV2Z7F5.js";import{a as s}from"./ids-chunk-EQJWBFQ2.js";import{a as p}from"./ids-chunk-U7OOVFXE.js";var k=`
/* Ids Toast Container Component */
:host(ids-toast-message) {
  --toast-message-duration: 6000ms;
  display: block;
}

.ids-toast-message {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--ids-toast-color-background);
  box-sizing: border-box;
  border: 1px solid var(--ids-toast-color-border);
  border-radius: var(--ids-border-radius-01);
  color: var(--ids-toast-color-text);
  font-family: var(--ids-font-family-default);
  font-size: var(--ids-font-size-40);
  outline: 0;
}
.ids-toast-message.audible {
  clip: rect(0, 0, 0, 0);
  height: 0;
  line-height: 0;
  min-height: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}
.ids-toast-message.effect-scale {
  animation: animScale 0.25s;
}
.ids-toast-message.effect-scale-hide {
  animation: animScaleOut 0.25s;
}
.ids-toast-message .main-container {
  display: flex;
}
.ids-toast-message .main-container .content-container {
  margin-block-end: var(--ids-space-50);
  margin-block-start: var(--ids-space-60);
  margin-inline-start: var(--ids-space-50);
  padding-block-end: var(--ids-space-10);
  flex-grow: 1;
}
.ids-toast-message .main-container .close-button-container {
  flex-grow: 0;
  margin: var(--ids-space-10);
}
.ids-toast-message .title {
  display: block;
  font-weight: var(--ids-font-weight-semibold);
}
.ids-toast-message .message {
  display: block;
  margin-block-start: var(--ids-space-40);
}
.ids-toast-message .close-button::part(button) {
  margin-left: auto;
}
.ids-toast-message .progress-bar {
  background-color: var(--ids-toast-progress-color-background);
  height: 3px;
  overflow: hidden;
  width: 0;
}
.ids-toast-message .progress-bar.running {
  animation: progressBarUpdate;
  animation-play-state: running;
  animation-duration: var(--toast-message-duration);
  animation-timing-function: linear;
}
.ids-toast-message .progress-bar.running.paused {
  animation-play-state: paused;
}
.ids-toast-message .progress-bar.hidden {
  height: 0;
}

@keyframes animScale {
  0% {
    transform: translate3d(0, 40px, 0) scale3d(0.1, 0.6, 1);
    opacity: 0;
  }
  100% {
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
    opacity: 1;
  }
}
@keyframes animScaleOut {
  0% {
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
    opacity: 1;
  }
  100% {
    transform: translate3d(0, 40px, 0) scale3d(0.1, 0.6, 1);
    opacity: 0;
  }
}
@keyframes progressBarUpdate {
  0% {
    width: 100%;
  }
  100% {
    width: 0%;
  }
}`;var I=E(f(y)),r=class extends I{constructor(){super()}connectedCallback(){super.connectedCallback(),this.#s(),this.#e()}static get attributes(){return[...super.attributes,s.AUDIBLE,s.PROGRESS_BAR,s.TIMEOUT,o]}template(){let t=l,a=this.audible?" hidden":"",i=`
      <ids-trigger-button part="close-button" class="close-button">
        <ids-text audible="true">
          <slot name="close-button-label">${t.closeButtonLabel}</slot>
        </ids-text>
        <ids-icon icon="close" part="close-button-icon" size="small"></ids-icon>
      </ids-trigger-button>`,g=`<div class="progress-bar${a}" part="progress-bar"></div>`;return`
      <div class="ids-toast-message ${s.AUDIBLE}" part="toast">
        <div class="main-container">
          <span class="content-container" aria-relevant="additions text" aria-live="polite">
            <span class="title" part="title"><slot name="title">${t.title}</slot></span>
            <span class="message" part="message"><slot name="message">${t.message}</slot></span>
          </span>
          <span class="close-button-container">${i}</span>
        </div>
        ${g}
      </div>`}get progressBarEl(){return this.shadowRoot?.querySelector(".progress-bar")}#s(){let t=this.progressBarEl;if(this.audible||(this.container?.classList.remove(s.AUDIBLE),this.container?.classList.add(n.start)),t){this.progressBar||t.classList.add("hidden");let a=this.audible?B:this.timeout;t.style?.setProperty("--toast-message-duration",`${a}ms`),t.classList.add("running")}}async removeToastMessage(){let t=this.container;t&&(this.audible||(t.classList.remove(n.start),t.classList.add(n.end),this.container&&await v(this.container,"animScaleOut")),this.parentNode?.removeChild(this),this.triggerEvent(S.removeMessage,this,{detail:{elem:this,messageId:this.messageId,options:{title:this.title,message:this.message,messageId:this.messageId,closeButtonLabel:this.closeButtonLabel,allowLink:this.allowLink,audible:this.audible,progressBar:this.progressBar,timeout:this.timeout}}}))}#t(t){this.progressBarEl&&this.progressBarEl.classList[t?"add":"remove"]("paused")}#e(){let t=this.container,a=this.messageId;this.onEvent("animationend",this.progressBarEl,()=>{this.removeToastMessage()});let i=!1;["mousedown.toast","touchstart.toast","mouseup.toast","touchend.toast"].forEach(d=>{this.onEvent(d,t,e=>{i=!!/mousedown|touchstart/i.test(e.type),this.#t(i)},{passive:!0})}),[`keydown.toast-${a}`,`keyup.toast-${a}`].forEach(d=>{this.onEvent(d,document,e=>{let u=e.which||e.keyCode;e.ctrlKey&&e.altKey&&u===80&&(i=e.type==="keydown",this.#t(i)),e.type==="keydown"&&u===27&&(e.stopImmediatePropagation(),e.preventDefault(),this.removeToastMessage())})});let A=this.shadowRoot?.querySelector(".close-button");this.onEvent("click.toast",A,()=>this.removeToastMessage())}set audible(t){m(t)?this.setAttribute(s.AUDIBLE,t.toString()):this.removeAttribute(s.AUDIBLE)}get audible(){return c(this,s.AUDIBLE)}set progressBar(t){m(t)?this.setAttribute(s.PROGRESS_BAR,t.toString()):this.removeAttribute(s.PROGRESS_BAR)}get progressBar(){return c(this,s.PROGRESS_BAR)}set timeout(t){t?this.setAttribute(s.TIMEOUT,t.toString()):this.removeAttribute(s.TIMEOUT)}get timeout(){let t=parseInt(this.getAttribute(s.TIMEOUT)??"",10);return isNaN(t)?l.timeout:t}set messageId(t){t?this.setAttribute(o,t.toString()):this.removeAttribute(o)}get messageId(){return this.getAttribute(o)}};r=p([h("ids-toast-message"),b(k)],r);export{r as a};
