import{a as C}from"./ids-chunk-WDFJ6LQU.js";import{a as R}from"./ids-chunk-OHTSFY5B.js";import{a as P}from"./ids-chunk-JS3ZKE4F.js";import{a,b as l,c as p,d as O}from"./ids-chunk-SBYA6MC4.js";import{b as D}from"./ids-chunk-NZGHOKVC.js";import{a as I}from"./ids-chunk-DF3OTTVT.js";import{a as T}from"./ids-chunk-I4KVLUTU.js";import{a as S}from"./ids-chunk-SEZJIM5Z.js";import{a as k}from"./ids-chunk-6I35WZF4.js";import{a as L}from"./ids-chunk-WGF76AHI.js";import{a as y}from"./ids-chunk-N7RNTKMO.js";import{a as w}from"./ids-chunk-T6ZV4PDM.js";import{a as E}from"./ids-chunk-RRSHSZ55.js";import{a as x}from"./ids-chunk-AKCO43TX.js";import{a as g,b as m}from"./ids-chunk-XE4WFW5M.js";import{a as A}from"./ids-chunk-GFV2Z7F5.js";import{e as o}from"./ids-chunk-QPDOZZIG.js";import{a as t}from"./ids-chunk-EQJWBFQ2.js";import{a as f}from"./ids-chunk-U7OOVFXE.js";var B=`
@charset "UTF-8";
/**
 * Css for clearable mixin
 */
.ids-input .ids-input-field .btn-clear,
.ids-input .ids-textarea-field .btn-clear,
.ids-textarea .ids-input-field .btn-clear,
.ids-textarea .ids-textarea-field .btn-clear {
  outline: 0;
}
.ids-input .ids-input-field .btn-clear.is-empty,
.ids-input .ids-textarea-field .btn-clear.is-empty,
.ids-textarea .ids-input-field .btn-clear.is-empty,
.ids-textarea .ids-textarea-field .btn-clear.is-empty {
  display: none;
}
.ids-input .ids-input-field .btn-clear [slot=icon],
.ids-input .ids-textarea-field .btn-clear [slot=icon],
.ids-textarea .ids-input-field .btn-clear [slot=icon],
.ids-textarea .ids-textarea-field .btn-clear [slot=icon] {
  margin-inline-start: 0;
  color: inherit;
}
.ids-input.has-clearable .btn-clear,
.ids-textarea.has-clearable .btn-clear {
  margin-inline-end: 4px;
}
.ids-input.has-clearable .btn-clear.is-empty,
.ids-textarea.has-clearable .btn-clear.is-empty {
  display: initial;
  visibility: hidden;
  pointer-events: none;
}

.ids-trigger-field .ids-input-field.has-clearable {
  padding-inline-end: 55px;
}
.ids-trigger-field .ids-input-field.has-clearable ~ .btn-clear {
  margin-top: 0;
  right: -8px;
}

.btn-clear[part=clearable-button] [slot=icon] {
  padding: 2px;
}

.icon-dirty {
  position: absolute;
  color: var(--ids-color-caution-30);
  top: 1px;
}
.icon-dirty[dir=rtl] {
  transform: rotate(90deg);
  top: 0;
}

.ids-color-picker .icon-dirty {
  margin-inline-start: 35px;
}

.ids-color-picker.compact .icon-dirty {
  margin-inline-start: 27px;
}

.ids-radio-group .icon-dirty {
  margin-inline-start: -1px;
  margin-block-start: 9px;
  top: auto;
  z-index: 1;
}

.ids-checkbox .icon-dirty {
  margin-inline-start: -25px;
}
.ids-checkbox .icon-dirty[dir=rtl] {
  margin-inline-start: -20px;
  transform: none;
  top: -1px;
}
.ids-checkbox.hitbox .icon-dirty {
  margin-inline-start: -30px;
}
.ids-checkbox.hitbox .icon-dirty[dir=rtl] {
  margin-inline-start: -26px;
}

.ids-textarea .icon-dirty {
  top: 0;
  margin-inline-start: 1px;
}
.ids-textarea .icon-dirty[dir=rtl] {
  top: 1px;
}

.label-state-hidden .ids-label-text.empty::before {
  content: "\xA0";
}

.label-state-collapsed .ids-label-text {
  display: none;
}

.validation-message {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: flex;
  font-family: var(--ids-font-family-default);
  margin-top: var(--ids-space-30);
}
.validation-message.has-custom-icon {
  color: var(--ids-icon-color-default);
}
.validation-message.disabled {
  color: var(--ids-input-color-text-disabled);
}
.validation-message .ids-icon {
  margin-inline-end: var(--ids-space-30);
}
.validation-message.alert {
  color: var(--ids-color-caution-default);
}
.validation-message.alert.disabled {
  color: var(--ids-color-caution-30);
}
.validation-message.warning {
  color: var(--ids-color-warning-default);
}
.validation-message.warning.disabled {
  color: var(--ids-color-warning-30);
}
.validation-message.error {
  color: var(--ids-color-error-default);
}
.validation-message.error.disabled {
  color: var(--ids-color-error-30);
}
.validation-message.info {
  color: var(--ids-color-info-default);
}
.validation-message.info.disabled {
  color: var(--ids-color-info-30);
}
.validation-message.success {
  color: var(--ids-color-success-default);
}
.validation-message.success.disabled {
  color: var(--ids-color-success-30);
}

/* stylelint-disable */
/* stylelint-enable */
/* in case of external label in compound component */
.ids-label-text {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: var(--ids-font-family-default);
  color: var(--ids-input-label-color-text-default);
  display: flex;
  margin-block-end: var(--ids-input-margin-bottom);
  align-items: baseline;
  justify-content: inherit;
}
.ids-label-text.empty::before {
  content: "\xA0";
}
.ids-label-text.required::after {
  position: relative;
  font-family: var(--ids-font-family-default);
  margin-inline-start: var(--ids-space-20);
  margin-inline-end: var(--ids-space-20);
  font-size: var(--ids-font-size-50);
  color: var(--ids-input-required-indicator-color-text-default);
  content: "*";
  margin-top: -10px;
  top: 1px;
  line-height: 0;
}
.ids-label-text.required.no-required-indicator::after, .ids-label-text.required.empty::after {
  content: "";
}
.ids-label-text ids-text::part(text),
.ids-label-text .ids-text {
  display: inline;
}

.disabled .ids-label-text {
  color: var(--ids-color-text-disabled);
}
.disabled .ids-label-text.required::after {
  color: var(--ids-input-required-indicator-color-text-disabled);
}

:host {
  display: block;
  max-width: var(--ids-input-width-full);
}
:host .ids-input {
  display: inline-block;
}

:host([size=full]) {
  width: 100%;
}

:host([label-wrap=ellipsis]) .ids-label-text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
:host([label-wrap=ellipsis]) .ids-label-text.required {
  padding-inline-end: 8px;
}
:host([label-wrap=ellipsis]) .ids-label-text.required::after {
  display: block;
  margin-top: unset;
  margin-inline-start: 100%;
  top: -8px;
}

:host([label-wrap=ellipsis-no-stretch]) .ids-label-text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
:host([label-wrap=ellipsis-no-stretch]) .ids-label-text.required {
  padding-inline-end: 8px;
}
:host([label-wrap=ellipsis-no-stretch]) .ids-label-text.required::after {
  display: block;
  margin-top: unset;
  margin-inline-start: 100%;
  top: -8px;
}
:host([label-wrap=ellipsis-no-stretch]) .xs .ids-label-text {
  max-width: calc(var(--ids-input-width-10) - 2px);
}
:host([label-wrap=ellipsis-no-stretch]) .sm .ids-label-text {
  max-width: calc(var(--ids-input-width-20) - 2px - 8px);
}
:host([label-wrap=ellipsis-no-stretch]) .mm .ids-label-text {
  max-width: calc(var(--ids-input-width-30) - 2px - 8px);
}
:host([label-wrap=ellipsis-no-stretch]) .md .ids-label-text {
  max-width: calc(var(--ids-input-width-40) - 2px - 8px);
}
:host([label-wrap=ellipsis-no-stretch]) .lg .ids-label-text {
  max-width: calc(var(--ids-input-width-50) - 2px - 8px);
}
:host([label-wrap=ellipsis-no-stretch]) .full .ids-label-text {
  max-width: calc(100% - 8px);
}

:host([label-wrap=wrap-no-stretch]) .xs .ids-label-text {
  max-width: calc(var(--ids-input-width-10) - 2px);
}
:host([label-wrap=wrap-no-stretch]) .sm .ids-label-text {
  max-width: calc(var(--ids-input-width-20) - 2px - 8px);
}
:host([label-wrap=wrap-no-stretch]) .mm .ids-label-text {
  max-width: calc(var(--ids-input-width-30) - 2px - 8px);
}
:host([label-wrap=wrap-no-stretch]) .md .ids-label-text {
  max-width: calc(var(--ids-input-width-40) - 2px - 8px);
}
:host([label-wrap=wrap-no-stretch]) .lg .ids-label-text {
  max-width: calc(var(--ids-input-width-50) - 2px - 8px);
}
:host([label-wrap=wrap-no-stretch]) .full .ids-label-text {
  max-width: calc(100% - 8px);
}

.ids-input {
  position: relative;
  display: block;
  margin-block-end: var(--ids-space-60);
  max-width: var(--ids-input-width-full);
}
.ids-input .field-container {
  transition: border var(--ids-motion-duration) var(--ids-motion-ease);
  margin: var(--ids-space-none);
  padding: var(--ids-space-none);
  position: relative;
  border: 1px solid;
  align-items: center;
  border-collapse: separate;
  border-radius: 2px;
  color: inherit;
  display: flex;
  resize: none;
  text-align: left;
  max-width: var(--ids-input-width-full);
}
.ids-input:focus-within .ids-input-field, .ids-input.readonly:focus-within .ids-input-field, .ids-input.is-active .ids-input-field {
  outline: none;
  outline-color: transparent;
}
.ids-input:focus-within .field-container, .ids-input.readonly:focus-within .field-container, .ids-input.is-active .field-container {
  border-color: var(--ids-input-color-border-focus) !important;
  box-shadow: var(--ids-shadow-focus);
}
.ids-input .ids-icon.starting-icon {
  margin-inline-start: var(--ids-space-40);
}
.ids-input .ids-icon.ending-icon {
  margin-inline-end: var(--ids-space-40);
}
.ids-input .ids-input-field {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;
  background-color: transparent;
  border: none;
  font-family: var(--ids-font-family-default);
  padding-block-start: var(--ids-space-30);
  padding-block-end: var(--ids-space-30);
  padding-inline-start: var(--ids-space-40);
  padding-inline-end: var(--ids-space-40);
  font-size: var(--ids-input-font-size);
  width: 100%;
  appearance: none;
  color: currentColor;
  display: inline-block;
  height: fit-content;
  resize: none;
  text-align: left;
}
.ids-input .ids-input-field:focus-visible {
  outline: none;
}
.ids-input .ids-input-field.text-ellipsis {
  text-overflow: ellipsis;
}
.ids-input .ids-input-field.start {
  text-align: start;
}
.ids-input .ids-input-field.center {
  text-align: center;
}
.ids-input .ids-input-field.end {
  text-align: end;
}
.ids-input .validation-message {
  margin-block-start: var(--ids-space-30);
  margin-bottom: 0;
}
.ids-input.no-margins, .ids-input.no-margins.compact {
  margin: 0;
}
.ids-input.no-margins.field-height-xs, .ids-input.no-margins.compact.field-height-xs {
  margin-block-end: 0;
}
.ids-input.no-margins .field-container, .ids-input.no-margins.compact .field-container {
  margin-bottom: 0;
}
.ids-input.no-margins .ids-input-field, .ids-input.no-margins.compact .ids-input-field {
  margin: 0;
}
.ids-input.no-margins .validation-message, .ids-input.no-margins.compact .validation-message {
  margin-bottom: 0;
  margin-block-start: var(--ids-space-30);
}
.ids-input.no-margins .ids-label-text.empty, .ids-input.no-margins.compact .ids-label-text.empty {
  margin: 0;
  visibility: hidden;
  height: 0;
}
.ids-input.xs .field-container {
  width: calc(var(--ids-input-width-10) - 2px);
}
.ids-input.sm .field-container {
  width: calc(var(--ids-input-width-20) - 2px);
}
.ids-input.mm .field-container {
  width: calc(var(--ids-input-width-30) - 2px);
}
.ids-input.md .field-container {
  width: calc(var(--ids-input-width-40) - 2px);
}
.ids-input.lg .field-container {
  width: calc(var(--ids-input-width-50) - 2px);
}
.ids-input.full {
  display: block;
}
.ids-input.full .field-container {
  width: var(--ids-input-width-full);
}
@media (max-width: 360px) {
  .ids-input .field-container {
    max-width: calc(var(--ids-input-width-30) - 2px);
  }
}
.ids-input.field-height-xs {
  margin-block-end: var(--ids-font-size-20);
}
.ids-input.field-height-xs .ids-label-text {
  font-size: var(--ids-input-label-font-size);
}
.ids-input.field-height-xs .ids-input-field {
  padding-inline-start: var(--ids-space-30);
  padding-inline-end: var(--ids-space-30);
  padding-top: 0;
  padding-bottom: 0;
  font-size: var(--ids-input-font-size-sm);
  height: calc(var(--ids-input-height-10) - 2px);
}
.ids-input.field-height-xs.no-margin-bottom {
  margin-bottom: 0;
}
.ids-input.field-height-xs.no-margin-bottom .field-container,
.ids-input.field-height-xs.no-margin-bottom .ids-input-field {
  margin-bottom: 0;
}
.ids-input.field-height-sm .ids-input-field {
  height: calc(var(--ids-input-height-20) - 2px);
}
.ids-input.field-height-md .ids-input-field {
  height: calc(var(--ids-input-height-30) - 2px);
}
.ids-input.field-height-lg .ids-input-field {
  height: calc(var(--ids-input-height-40) - 2px);
}
.ids-input.compact {
  margin-block-end: var(--ids-font-size-20);
}
.ids-input.compact .ids-label-text {
  font-size: var(--ids-input-label-font-size);
}
.ids-input.compact .ids-input-field {
  padding-inline-start: var(--ids-space-30);
  padding-inline-end: var(--ids-space-30);
  padding-top: 0;
  padding-bottom: 0;
  font-size: var(--ids-input-font-size-sm);
  height: calc(var(--ids-input-height-10) - 2px);
}
.ids-input.compact.no-margin-bottom {
  margin-bottom: 0;
}
.ids-input.compact.no-margin-bottom .field-container,
.ids-input.compact.no-margin-bottom .ids-input-field {
  margin-bottom: 0;
  height: calc(var(--ids-input-height-10) - 2px);
}
.ids-input.color-variant-borderless {
  --ids-input-color-border-focus: transparent;
  margin: 1px;
  border-radius: 0;
}
.ids-input.color-variant-borderless input {
  font-size: var(--ids-font-size-40);
}
.ids-input.color-variant-borderless .icon-dirty {
  display: none;
}
.ids-input.color-variant-borderless .validation-message {
  display: none;
}
.ids-input.color-variant-borderless .field-container {
  background-color: transparent;
  border-color: transparent !important;
}
.ids-input.color-variant-borderless:focus-within .field-container {
  box-shadow: none;
}
.ids-input.color-variant-borderless.ids-input.field-height-lg .ids-input-field {
  padding-inline: calc(var(--ids-space-60) - 2px);
}
.ids-input.color-variant-borderless.ids-input.field-height-md .ids-input-field {
  padding-inline: calc(var(--ids-space-50) - 2px);
}
.ids-input.color-variant-borderless.ids-input.field-height-sm .ids-input-field {
  padding-inline: calc(var(--ids-space-40) - 2px);
}
.ids-input.color-variant-borderless.ids-input.field-height-xs .ids-input-field {
  font-size: var(--ids-data-grid-font-size-sm);
  padding-inline: var(--ids-space-20);
}
.ids-input.color-variant-borderless.ids-input.field-height-xxs .ids-input-field {
  font-size: var(--ids-data-grid-font-size-sm);
  padding-inline: var(--ids-space-10);
}
.ids-input.color-variant-in-cell {
  margin: 1px;
}
.ids-input.color-variant-in-cell input {
  font-size: var(--ids-font-size-40);
}
.ids-input.color-variant-in-cell.ids-input.field-height-lg .ids-input-field {
  padding-inline: 11px;
  height: 40px;
}
.ids-input.color-variant-in-cell.ids-input.full .field-container {
  margin-inline: 3px;
  width: initial;
}
.ids-input.color-variant-in-cell.ids-input.field-height-md .ids-input-field {
  padding-inline: 6px;
  height: 30px;
}
.ids-input.color-variant-in-cell.ids-input.field-height-sm .ids-input-field {
  padding-inline: 4px;
  height: 27px;
}
.ids-input.color-variant-in-cell.ids-input.field-height-sm.full .field-container {
  margin-inline: 2px;
}
.ids-input.color-variant-in-cell.ids-input.field-height-xs .ids-input-field {
  padding-inline: 1px;
  height: 24px;
}
.ids-input.color-variant-in-cell.ids-input.field-height-xs.full .field-container {
  margin-inline: 1px;
}

.caps-lock-indicator {
  padding-inline-start: 8px;
  padding-inline-end: 8px;
}

/* stylelint-disable-next-line no-duplicate-selectors */
.ids-input {
  /* stylelint-disable-next-line no-duplicate-selectors */
}
.ids-input .field-container {
  background-color: var(--ids-input-color-background-default);
  border-color: var(--ids-input-color-border-default);
  color: var(--ids-input-color-text);
}
.ids-input.readonly .field-container, .ids-input.readonly.hover .field-container, .ids-input.readonly.focus-within .field-container {
  border-color: var(--ids-input-color-border-readonly);
  color: var(--ids-input-color-text-readonly);
}
.ids-input.readonly .field-container.error, .ids-input.readonly .field-container.error:hover, .ids-input.readonly.hover .field-container.error, .ids-input.readonly.hover .field-container.error:hover, .ids-input.readonly.focus-within .field-container.error, .ids-input.readonly.focus-within .field-container.error:hover {
  border-color: var(--ids-color-error-default);
  color: var(--ids-color-error-default);
}
.ids-input.readonly:not(.readonly-background):not(.bg-transparent) .field-container, .ids-input.readonly:not(.readonly-background):not(.bg-transparent).hover .field-container, .ids-input.readonly:not(.readonly-background):not(.bg-transparent).focus-within .field-container {
  background-color: var(--ids-input-color-background-readonly);
}
.ids-input.disabled .field-container, .ids-input.disabled:hover .field-container, .ids-input.disabled:focus-within .field-container {
  border-color: var(--ids-input-color-border-disabled);
  color: var(--ids-input-color-text-disabled);
  -webkit-text-fill-color: var(--ids-input-color-text-disabled);
}
.ids-input.bg-transparent .field-container, .ids-input.bg-transparent.readonly .field-container, .ids-input.bg-transparent.disabled .field-container {
  background-color: transparent;
}
.ids-input.bg-transparent:focus-within .field-container {
  background-color: transparent;
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .field-container, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .field-container {
  border-color: var(--ids-input-color-border-hover);
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .alert,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .alert:hover,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .warning,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .warning:hover, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .alert,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .alert:hover,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .warning,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .warning:hover {
  border-color: var(--ids-input-color-border-alert-default);
  color: var(--ids-input-color-text-alert-default);
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .alert:focus-within, .ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .alert.is-active,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .alert:hover:focus-within,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .alert:hover.is-active,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .warning:focus-within,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .warning.is-active,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .warning:hover:focus-within,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .warning:hover.is-active, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .alert:focus-within, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .alert.is-active,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .alert:hover:focus-within,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .alert:hover.is-active,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .warning:focus-within,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .warning.is-active,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .warning:hover:focus-within,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .warning:hover.is-active {
  border-color: var(--ids-input-color-border-alert-default);
  box-shadow: var(--ids-input-shadow-alert-focus) 0 0 3px 2px;
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .alert[disabled],
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .alert:hover[disabled],
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .warning[disabled],
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .warning:hover[disabled], .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .alert[disabled],
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .alert:hover[disabled],
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .warning[disabled],
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .warning:hover[disabled] {
  border-color: var(--ids-input-color-border-alert-disabled);
  color: var(--ids-input-color-text-alert-disabled);
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .error,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .error:hover, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .error,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .error:hover {
  border-color: var(--ids-input-color-border-error-default);
  color: var(--ids-input-error-color-text-error-default);
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .error:focus-within, .ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .error.is-active,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .error:hover:focus-within,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .error:hover.is-active, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .error:focus-within, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .error.is-active,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .error:hover:focus-within,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .error:hover.is-active {
  border-color: var(--ids-input-color-border-error-default);
  box-shadow: var(--ids-input-color-shadow-error-focus) 0 0 3px 2px;
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .error[disabled],
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .error:hover[disabled], .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .error[disabled],
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .error:hover[disabled] {
  border-color: var(--ids-input-color-border-error-disabled);
  color: var(--ids-input-color-border-error-disabled);
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .info,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .info:hover, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .info,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .info:hover {
  border-color: var(--ids-input-color-border-info-default);
  color: var(--ids-input-color-text-info-default);
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .info:focus-within, .ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .info.is-active,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .info:hover:focus-within,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .info:hover.is-active, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .info:focus-within, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .info.is-active,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .info:hover:focus-within,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .info:hover.is-active {
  border-color: var(--ids-input-color-border-info-default);
  box-shadow: var(--ids-input-shadow-info-focus) 0 0 3px 2px;
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .info[disabled],
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .info:hover[disabled], .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .info[disabled],
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .info:hover[disabled] {
  border-color: var(--ids-input-color-border-info-disabled);
  color: var(--ids-input-color-text-info-disabled);
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .success,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .success:hover, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .success,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .success:hover {
  border-color: var(--ids-input-color-border-success-default);
  color: var(--ids-input-color-text-success-default);
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .success:focus-within, .ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .success.is-active,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .success:hover:focus-within,
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .success:hover.is-active, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .success:focus-within, .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .success.is-active,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .success:hover:focus-within,
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .success:hover.is-active {
  border-color: var(--ids-input-color-border-success-default);
  box-shadow: var(--ids-input-shadow-success-focus) 0 0 3px 2px;
}
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .success[disabled],
.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .success:hover[disabled], .ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .success[disabled],
.ids-input:hover.readonly.readonly-background:not(.color-variant-alternate-formatter) .success:hover[disabled] {
  border-color: var(--ids-input-color-border-success-disabled);
  color: var(--ids-input-color-text-success-disabled);
}
.ids-input:hover:not(.disabled).readonly.readonly-background.color-variant-alternate-formatter .field-container {
  border-color: var(--ids-data-grid-filter-input-color-background-hover);
}
.ids-input .alert,
.ids-input .alert:hover,
.ids-input .warning,
.ids-input .warning:hover {
  border-color: var(--ids-input-color-border-alert-default);
  color: var(--ids-input-color-text-alert-default);
}
.ids-input .alert:focus-within, .ids-input .alert.is-active,
.ids-input .alert:hover:focus-within,
.ids-input .alert:hover.is-active,
.ids-input .warning:focus-within,
.ids-input .warning.is-active,
.ids-input .warning:hover:focus-within,
.ids-input .warning:hover.is-active {
  border-color: var(--ids-input-color-border-alert-default);
  box-shadow: var(--ids-input-shadow-alert-focus) 0 0 3px 2px;
}
.ids-input .alert[disabled],
.ids-input .alert:hover[disabled],
.ids-input .warning[disabled],
.ids-input .warning:hover[disabled] {
  border-color: var(--ids-input-color-border-alert-disabled);
  color: var(--ids-input-color-text-alert-disabled);
}
.ids-input .error,
.ids-input .error:hover {
  border-color: var(--ids-input-color-border-error-default);
  color: var(--ids-input-error-color-text-error-default);
}
.ids-input .error:focus-within, .ids-input .error.is-active,
.ids-input .error:hover:focus-within,
.ids-input .error:hover.is-active {
  border-color: var(--ids-input-color-border-error-default);
  box-shadow: var(--ids-input-color-shadow-error-focus) 0 0 3px 2px;
}
.ids-input .error[disabled],
.ids-input .error:hover[disabled] {
  border-color: var(--ids-input-color-border-error-disabled);
  color: var(--ids-input-color-border-error-disabled);
}
.ids-input .info,
.ids-input .info:hover {
  border-color: var(--ids-input-color-border-info-default);
  color: var(--ids-input-color-text-info-default);
}
.ids-input .info:focus-within, .ids-input .info.is-active,
.ids-input .info:hover:focus-within,
.ids-input .info:hover.is-active {
  border-color: var(--ids-input-color-border-info-default);
  box-shadow: var(--ids-input-shadow-info-focus) 0 0 3px 2px;
}
.ids-input .info[disabled],
.ids-input .info:hover[disabled] {
  border-color: var(--ids-input-color-border-info-disabled);
  color: var(--ids-input-color-text-info-disabled);
}
.ids-input .success,
.ids-input .success:hover {
  border-color: var(--ids-input-color-border-success-default);
  color: var(--ids-input-color-text-success-default);
}
.ids-input .success:focus-within, .ids-input .success.is-active,
.ids-input .success:hover:focus-within,
.ids-input .success:hover.is-active {
  border-color: var(--ids-input-color-border-success-default);
  box-shadow: var(--ids-input-shadow-success-focus) 0 0 3px 2px;
}
.ids-input .success[disabled],
.ids-input .success:hover[disabled] {
  border-color: var(--ids-input-color-border-success-disabled);
  color: var(--ids-input-color-text-success-disabled);
}
.ids-input.color-variant-alternate .field-container {
  border-color: transparent;
  color: var(--ids-input-header-color-text-default);
  background-color: var(--ids-input-header-color-background);
  border-bottom: 1px solid var(--ids-input-header-color-border);
  box-shadow: none;
}
.ids-input.color-variant-alternate .ids-input-field::placeholder {
  color: var(--ids-input-header-color-text-placeholder);
}
.ids-input.color-variant-alternate-formatter .field-container {
  background-color: var(--ids-data-grid-filter-input-color-background);
  border-color: var(--ids-data-grid-filter-input-color-border-default);
  color: var(--ids-data-grid-filter-input-color-text-default);
}
.ids-input.color-variant-alternate-formatter:hover.readonly.readonly-background .field-container, .ids-input.color-variant-alternate-formatter:hover:not(.readonly):not(.disabled):not(.color-variant-borderless) .field-container, .ids-input.color-variant-alternate-formatter.ids-input:hover:not(.readonly):not(.disabled):not(.color-variant-borderless):hover .field-container {
  border-color: var(--ids-data-grid-filter-input-color-background-hover);
}
.ids-input.color-variant-alternate-formatter:focus-within .field-container, .ids-input.color-variant-alternate-formatter:focus-within:hover .field-container {
  border-color: var(--ids-data-grid-filter-input-color-border-focus);
}
.ids-input.color-variant-alternate-formatter:focus-within .ids-input-field {
  box-shadow: 0 0 3px 1px var(--ids-shadow-focus);
}
.ids-input.color-variant-alternate-formatter.disabled .field-container, .ids-input.color-variant-alternate-formatter.disabled:hover .field-container {
  border-color: var(--ids-data-grid-filter-input-color-border-disabled);
  color: var(--ids-data-grid-filter-input-color-text-disabled);
}
.ids-input.color-variant-alternate-formatter.readonly:not(.readonly-background):not(.bg-transparent) .field-container {
  background-color: var(--ids-data-grid-filter-input-color-background-readonly);
  border-color: var(--ids-data-grid-filter-input-color-border-readonly);
  color: var(--ids-data-grid-filter-input-color-text-readonly);
}
.ids-input.color-variant-alternate-formatter .ids-input-field::placeholder {
  color: var(--ids-data-grid-filter-input-color-text-placeholder);
}
.ids-input.color-variant-alternate .field-container, .ids-input.color-variant-app-menu .field-container {
  color: var(--ids-input-color-text-default);
}
.ids-input.color-variant-list-builder .field-container {
  background-color: transparent;
  color: var(--ids-list-builder-input-text-color);
  border: 0;
}

.highlight {
  font-weight: var(--ids-font-weight-bold);
}

.ids-input-field[type=number]::-webkit-inner-spin-button,
.ids-input-field[type=number]::-webkit-outer-spin-button {
  appearance: none;
}

.ids-input-field::-webkit-caps-lock-indicator {
  visibility: hidden;
}

:host ids-popup[type=dropdown] {
  width: 100%;
  max-width: var(--ids-input-width-40);
}

:host([size=xs]) ids-popup[type=dropdown] {
  max-width: var(--ids-input-width-10);
}

:host([size=sm]) ids-popup[type=dropdown] {
  max-width: var(--ids-input-width-20);
}

:host([size=mm]) ids-popup[type=dropdown] {
  max-width: var(--ids-input-width-30);
}

:host([size=md]) ids-popup[type=dropdown] {
  max-width: var(--ids-input-width-40);
}

:host([size=lg]) ids-popup[type=dropdown] {
  max-width: var(--ids-input-width-50);
}

:host([size=full]) ids-popup[type=dropdown] {
  max-width: var(--ids-input-width-full);
}

:host(:not([show-loading-indicator=true])) ::slotted(.slot-loading-indicator) {
  display: none;
}

:host([show-loading-indicator=true]) {
  pointer-events: none;
}
:host([show-loading-indicator=true]) ::slotted(ids-loading-indicator) {
  margin-top: 3px;
  margin-bottom: 3px;
}
:host([show-loading-indicator=true]) ::slotted(ids-trigger-button[slot=trigger-end]) {
  display: none;
}
:host([show-loading-indicator=true]) ::slotted(.slot-loading-indicator) {
  margin-inline-end: 12px;
  margin-inline-start: 8px;
}

:host([show-loading-indicator=true][field-height=xs]) ::slotted(.slot-loading-indicator) {
  margin-inline-start: 4px;
  margin-inline-end: 4px;
}

:host([show-loading-indicator=true][field-height=sm]) ::slotted(.slot-loading-indicator) {
  margin-inline-end: 8px;
  margin-inline-start: 4px;
}

::slotted(.audible) {
  clip: rect(0, 0, 0, 0);
  height: 0;
  line-height: 0;
  min-height: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}`;var z=0,_=L(I(k(P(D(S(R(E(C(T(y(w(x(A))))))))))))),c=class extends _{generatedId="";triggeredByChange=!1;constructor(){super(),Object.defineProperty(this,"id",{get:()=>this.#e,set:i=>{this.#e=i},configurable:!0,enumerable:!0})}isFormComponent=!0;colorVariants=["alternate","alternate-formatter","borderless","in-cell","list-builder"];static get attributes(){return[...super.attributes,t.ACTIVE,t.AUTOSELECT,t.BG_TRANSPARENT,t.CAPS_LOCK,t.CURSOR,t.DISABLED,t.FORMAT,t.ID,t.LABEL_WRAP,t.NO_MARGINS,t.PADDING,t.PASSWORD_VISIBLE,t.PLACEHOLDER,t.READONLY_BACKGROUND,t.READONLY,t.REVEALABLE_PASSWORD,t.SIZE,t.TABBABLE,t.TEXT_ALIGN,t.TEXT_ELLIPSIS,t.TYPE,t.VALUE]}connectedCallback(){super.connectedCallback(),this.#a(),this.hasAttribute(t.AUTOSELECT)&&this.handleAutoselect(),this.isPasswordVisible&&this.#i(!0),this.capsLock&&this.#t(!0),this.#o()}template(){this.templateHostAttributes();let{ariaLabel:i,capsLock:e,containerClass:r,inputClass:n,inputState:u,labelHtml:h,placeholder:s,showHide:d,type:b,value:v}=this.templateVariables();return`<div class="${r}" part="container">
      ${h}
      <div class="field-container" part="field-container">
        <input
          part="input"
          id="${this.id}-input"
          ${b}${n}${s}${u}
          ${i}
          ${v}
          ></input>
        ${d}
        ${e}
        <slot name="loading-indicator"></slot>
      </div>
      ${this.autocomplete?`
        <ids-popup
          type="dropdown"
          align="bottom, left"
          align-target="#${this.id}-input"
          part="popup"
        >
          <ids-list-box slot="content" size="${this.size}"></ids-list-box>
        </ids-popup>`:""}
    </div>`}templateHostAttributes(){this.id||(this.generatedId=`ids-input-${z++}`)}templateVariables(){let i={readonly:this.readonly?"readonly":"",disabled:this.disabled?"disabled":"",required:this.validate?"required":"",noMargins:this.noMargins?"no-margins":""},e=this.placeholder?` placeholder="${this.placeholder}"`:"",r=` type="${this.isPasswordVisible&&this.passwordVisible?"text":this.type||a.default}"`,n=`ids-input-field ${this.textAlign}`,u=this.templateShowHide(),h=this.templateCapsLock();n+=o(this.bgTransparent)?" bg-transparent":"",n+=o(this.readonlyBackground)?"":" readonly-background",n+=o(this.textEllipsis)?" text-ellipsis":"",n=` class="${n}"`;let s=o(this.readonly)?" readonly":"";s=o(this.disabled)?" disabled":s;let d=`ids-input${s} ${this.size}`;d+=o(this.compact)?" compact":"",d+=o(this.noMargins)?" no-margins":"";let b=this.hasAttribute(t.LABEL_STATE)&&this.label?`aria-label="${this.label}"`:"",v=!this.label.length||this.labelState==="hidden"?" empty":"",N=`<label
      class="ids-label-text${this.labelRequired?"":" no-required-indicator"}${v}"
      for="${this.id}-input"
      part="label"
      ${i.readonly}
      ${i.disabled}
      ${i.required}
    >
      <slot name="label-pre"></slot>
      <ids-text part="label" label ${i.disabled} color-unset>
        ${this.label}
      </ids-text>
      <slot name="label-post"></slot>
    </label>`,V=this.hasAttribute(t.VALUE)?` value="${this.getAttribute(t.VALUE)}" `:"";return{ariaLabel:b,capsLock:h,containerClass:d,inputClass:n,inputState:s,labelHtml:N,placeholder:e,showHide:u,type:r,value:V}}get isPasswordVisible(){return this.revealablePassword&&this.type===a.password}templateShowHide(){return this.isPasswordVisible?`<ids-button id="show-hide-password" class="show-hide-password" no-padding text="${this.passwordVisible?"HIDE":"SHOW"}"></ids-button>`:""}templateCapsLock(){return this.capsLock?'<ids-icon id="caps-lock-indicator" class="caps-lock-indicator" icon="capslock"></ids-icon>':""}onColorVariantRefresh(i){super.colorVariant=i,this.clearable&&this.refreshClearableButtonStyles()}get input(){return this.container?.querySelector('input[part="input"]')}get capsLockIcon(){return this.container?.querySelector("#caps-lock-indicator")}get fieldContainer(){return this.container?.querySelector(".field-container")}get labelEl(){return this.#s||this.shadowRoot?.querySelector(`[for="${this.id}-input"]`)}get revealablePassword(){return o(this.getAttribute(t.REVEALABLE_PASSWORD))}set revealablePassword(i){let e=o(i);this.type===a.password?e?(this.setAttribute(t.REVEALABLE_PASSWORD,"true"),this.#i(!0)):(this.setAttribute(t.REVEALABLE_PASSWORD,"false"),this.#i(!1)):this.removeAttribute(t.REVEALABLE_PASSWORD)}get capsLock(){return o(this.getAttribute(t.CAPS_LOCK))}set capsLock(i){o(i)?(this.setAttribute(t.CAPS_LOCK,"true"),this.#t(!0)):(this.removeAttribute(t.CAPS_LOCK),this.#t(!1))}get passwordVisible(){return o(this.getAttribute(t.PASSWORD_VISIBLE))}set passwordVisible(i){let e=o(i);e!==this.passwordVisible&&(e?this.setAttribute(t.PASSWORD_VISIBLE,"true"):this.setAttribute(t.PASSWORD_VISIBLE,"false")),this.#r()}setInputState(i){if(i===t.READONLY||i===t.DISABLED){if(!this.shadowRoot)return;let e=[].slice.call(this.shadowRoot.querySelectorAll(".validation-message")),r={prop1:i,prop2:i!==t.READONLY?t.READONLY:t.DISABLED,val:o(this[i])};r.val?(this.input?.removeAttribute(r.prop2),this.container?.classList?.remove?.(r.prop2),this.container?.querySelector?.("ids-text")?.removeAttribute(r.prop2),e.forEach(n=>n.classList.remove(r.prop2)),this.input?.setAttribute(r.prop1,"true"),this.container?.classList.add(r.prop1),this.container?.querySelector?.("ids-text")?.setAttribute?.(r.prop1,"true"),e.forEach(n=>n.classList.add(r.prop1))):(this.input?.removeAttribute(r.prop1),this.container?.classList.remove(r.prop1),this.container?.querySelector("ids-text")?.removeAttribute(r.prop1),e.forEach(n=>n.classList.remove(r.prop1)))}}setLabelText(i){return super.setLabelText(i,`[for="${this.id}-input"]`)}handleAutoselect(){this.autoselect?this.handleInputFocusEvent():this.handleInputFocusEvent("remove")}handleInputFocusEvent(i){let e="focus";if(i==="remove"){let r=this?.handledEvents?.get(e);r&&r.target===this.input&&this.offEvent(e,this.input)}else this.onEvent(e,this.input,()=>{requestAnimationFrame(()=>{this.input?.select()})})}#t(i){let e=r=>{this.capsLockIcon&&r.getModifierState&&(this.capsLockIcon.hidden=!r.getModifierState("CapsLock"))};i?(!this.capsLockIcon&&this.input&&this.input.insertAdjacentHTML("afterend",this.templateCapsLock()),this.offEvent("keydown.input-capslock"),this.onEvent("keydown.input-capslock",this,e),this.offEvent("keyup.input-capslock"),this.onEvent("keyup.input-capslock",this,e),this.capsLockIcon&&(this.capsLockIcon.hidden=!0)):(this.offEvent("keydown.input-capslock"),this.offEvent("keyup.input-capslock"),this.capsLockIcon?.remove())}#n(){return this.input?(["focus","select","keydown","keypress","keyup","click","dbclick"].forEach(e=>{this.onEvent(e,this.input,r=>{this.triggerEvent(r.type,this,{detail:{elem:this,nativeEvent:r,value:this.value}})})}),this):this}#a(){this.#n(),this.onEvent("change.input",this.container,i=>{this.triggeredByChange=!0,this.value=this.input?.value,this.triggerEvent("change",this,{bubbles:!0,detail:{elem:this,nativeEvent:i,value:this.value}})})}#i(i){let e=this.container?.querySelector(".show-hide-password");if(i){if(!e&&this.isPasswordVisible){let r=document.createElement("ids-button");r.text=this.passwordVisible?"HIDE":"SHOW",r.id="show-hide-password",r.classList.add("show-hide-password"),r.noPadding=!0,this.input&&(this.input.insertAdjacentElement("afterend",r),this.input.type=`${this.passwordVisible?"text":this.type}`)}this.offEvent("click.input-showhidepassword"),this.onEvent("click.input-showhidepassword",e,()=>{this.passwordVisible=!this.passwordVisible,this.#r()})}else this.offEvent("click.input-showhidepassword"),this.input?.setAttribute("type",this.type),e?.remove()}#r(){if(!this.shadowRoot)return;let i=this.shadowRoot.querySelector(".show-hide-password"),e=this.shadowRoot.querySelector(".ids-input-field");this.passwordVisible?(i?.setAttribute("text","HIDE"),e?.setAttribute("type","text")):(i?.setAttribute("text","SHOW"),e?.setAttribute("type","password"))}set active(i){let e=o(i),r="is-active";e?(this.setAttribute(t.ACTIVE,e.toString()),this.container?.classList.add(r)):(this.removeAttribute(t.ACTIVE),this.container?.classList.remove(r))}get active(){return o(this.hasAttribute(t.ACTIVE))}set autoselect(i){let e=o(i);e?this.setAttribute(t.AUTOSELECT,e.toString()):this.removeAttribute(t.AUTOSELECT),this.handleAutoselect()}get autoselect(){return o(this.getAttribute(t.AUTOSELECT))}set bgTransparent(i){let e=o(i),r="bg-transparent";e?(this.setAttribute(t.BG_TRANSPARENT,e.toString()),this.container?.classList.add(r),this.input?.classList.add(r)):(this.removeAttribute(t.BG_TRANSPARENT),this.container?.classList.remove(r),this.input?.classList.remove(r))}get bgTransparent(){return o(this.getAttribute(t.BG_TRANSPARENT))}set textEllipsis(i){let e=o(i),r="text-ellipsis";e?(this.setAttribute(t.TEXT_ELLIPSIS,e.toString()),this.input?.classList.add(r)):(this.removeAttribute(t.TEXT_ELLIPSIS),this.input?.classList.remove(r))}get textEllipsis(){return o(this.getAttribute(t.TEXT_ELLIPSIS))}set disabled(i){o(i)?this.setAttribute(t.DISABLED,"true"):this.removeAttribute(t.DISABLED),this.setInputState(t.DISABLED)}get disabled(){return o(this.getAttribute(t.DISABLED))}#s;set placeholder(i){if(i){this.setAttribute(t.PLACEHOLDER,i),this.input?.setAttribute(t.PLACEHOLDER,i);return}this.removeAttribute(t.PLACEHOLDER),this.input?.removeAttribute(t.PLACEHOLDER)}get placeholder(){return this.getAttribute(t.PLACEHOLDER)}set readonly(i){let e=o(i);e?this.setAttribute(t.READONLY,e.toString()):this.removeAttribute(t.READONLY),this.setInputState(t.READONLY)}get readonly(){return o(this.getAttribute(t.READONLY))}set readonlyBackground(i){let e=o(i);e?this.setAttribute(t.READONLY_BACKGROUND,e.toString()):this.removeAttribute(t.READONLY_BACKGROUND),this.#o()}get readonlyBackground(){return o(this.getAttribute(t.READONLY_BACKGROUND))}#o(){this.container?.classList.toggle(t.READONLY_BACKGROUND,this.readonlyBackground)}set labelWrap(i){!i||O.indexOf(i)<0?this.removeAttribute(t.LABEL_WRAP):this.setAttribute(t.LABEL_WRAP,i)}get labelWrap(){return this.getAttribute(t.LABEL_WRAP)||"wrap"}set size(i){let e=l[i]||l.default;this.setAttribute(t.SIZE,e),this.container?.classList.remove(...Object.values(l)),this.container?.classList.add(e)}get size(){return this.getAttribute(t.SIZE)||l.default}set textAlign(i){let e=p[i]||p.default;this.setAttribute(t.TEXT_ALIGN,e),this.input?.classList.remove("start","center","end"),this.input?.classList.add(e)}get textAlign(){return this.getAttribute(t.TEXT_ALIGN)||p.default}set type(i){let e=a[i];if(e){this.setAttribute(t.TYPE,i),this.input?.setAttribute(t.TYPE,e);return}this.setAttribute(t.TYPE,a.default),this.input?.setAttribute(t.TYPE,a.default)}get type(){return this.getAttribute(t.TYPE)??a.default}set value(i){let e=["string","number"].includes(typeof i)?String(i):String(i||""),r=this.getAttribute(t.VALUE)||"";this.mask&&(e=this.processMaskFromProperty(i)||e),this.input&&this.input?.value!==e&&(this.input.value=e,this.triggeredByChange||this.input?.dispatchEvent(new Event("change",{bubbles:!0})),this.triggeredByChange=!1),r!==e&&this.setAttribute(t.VALUE,e)}get value(){return this.input?.value||""}set#e(i){i!==""&&(this.setAttribute(t.ID,i),this.input?.setAttribute(t.ID,`${i}-input`))}get#e(){return this.getAttribute(t.ID)||this.generatedId}set cursor(i){this.setAttribute(t.CURSOR,i),this.input?.style.setProperty("cursor",i)}get cursor(){return this.getAttribute(t.CURSOR)??""}set noMargins(i){if(o(i)){this.setAttribute(t.NO_MARGINS,""),this.container?.classList.add("no-margins");return}this.removeAttribute(t.NO_MARGINS),this.container?.classList.remove("no-margins")}get noMargins(){return o(this.getAttribute(t.NO_MARGINS))}set padding(i){if(i){this.setAttribute(t.PADDING,String(i)),this.input?.style.setProperty("padding-inline-start",`${i}px`),this.input?.style.setProperty("padding-inline-end",`${i}px`);return}this.removeAttribute(t.PADDING),this.input?.style.setProperty("padding-inline-start",""),this.input?.style.setProperty("padding-inline-end","")}get padding(){return this.getAttribute(t.PADDING)||""}blur(){this.input?.blur()}focus(){this.input?.focus()}set format(i){i?this.setAttribute(t.FORMAT,i):this.removeAttribute(t.FORMAT)}get format(){return this.getAttribute(t.FORMAT)}};c=f([g("ids-input"),m(B)],c);export{c as a};
