import{a as o}from"./ids-chunk-N7RNTKMO.js";import{a as l}from"./ids-chunk-RRSHSZ55.js";import{a}from"./ids-chunk-AKCO43TX.js";import{a as u,b as r}from"./ids-chunk-XE4WFW5M.js";import{a as m}from"./ids-chunk-GFV2Z7F5.js";import{e as d}from"./ids-chunk-QPDOZZIG.js";import{a as e}from"./ids-chunk-EQJWBFQ2.js";import{a as n}from"./ids-chunk-U7OOVFXE.js";var p=`
/* Ids Theme Switcher Css */
:host {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding: 0 var(--ids-space-20);
}

:host([hidden]) {
  display: none;
}`;var h=o(l(a(m))),s=class extends h{popup;menuButton;constructor(){super()}connectedCallback(){super.connectedCallback(),this.popup=this.shadowRoot?.querySelector("ids-popup-menu"),this.menuButton=this.shadowRoot?.querySelector("ids-menu-button"),this.menuButton?.configureMenu?.(),this.#t()}disconnectedCallback(){this.popup=null,this.menuButton=null,this.container=null,super.disconnectedCallback()}#t(){this.onEvent("selected.themeswitcher",this.popup,t=>{let i=t.detail.elem.value;(i==="light"||i==="dark"||i==="contrast")&&(this.mode=i),i?.indexOf("-")>-1&&(this.locale&&this.localeAPI.setLocale(i),document.querySelector("ids-container").setLocale(i))})}onLocaleChange=()=>{this.popup?.popup&&(this.popup.popup.locale=this.locale,this.popup.popup.language=this.language.name),this.menuButton&&(this.menuButton.locale=this.locale,this.menuButton.language=this.language.name),this.shadowRoot?.querySelectorAll("[translate-text]").forEach(t=>{t.language=this.language.name})};template(){return`<ids-menu-button id="ids-theme-switcher" menu="ids-theme-menu" color-variant="${this.colorVariant}" icon="more">
      <span class="audible">Theme Switcher</span>
    </ids-menu-button>
    <ids-popup-menu id="ids-theme-menu" target="#ids-theme-switcher" trigger-type="click">
      ${this.menuTemplate()}
    </ids-popup-menu>`}menuTemplate(){return`<ids-menu-group>
    <ids-menu-item>
      <ids-text translate-text="true">Mode</ids-text>
        <ids-popup-menu>
          <ids-menu-group select="single">
            <ids-menu-item selected="true" value="light">
              <ids-text translate-text="true">Light</ids-text>
              </ids-menu-item>
            <ids-menu-item value="dark">
              <ids-text translate-text="true">Dark</ids-text>
            </ids-menu-item>
            <ids-menu-item value="contrast">
              <ids-text translate-text="true">Contrast</ids-text>
            </ids-menu-item>
          </ids-menu-group>
        </ids-popup-menu>
      </ids-menu-item>
      <ids-menu-item>
        <ids-text translate-text="true">Locale</ids-text>
        <ids-popup-menu>
          <ids-menu-group select="single" id="locale-menu">
            <ids-menu-item selected="true" value="en-US">
              <ids-text translate-text="true">English</ids-text>
              <ids-text>(en-US)</ids-text>
            </ids-menu-item>
            <ids-menu-item value="de-DE">
              <ids-text translate-text="true">German</ids-text>
              <ids-text>(de-DE)</ids-text>
            </ids-menu-item>
            <ids-menu-item value="uk-UA">
              <ids-text translate-text="true">Ukrainian</ids-text>
              <ids-text>(uk-UA)</ids-text>
            </ids-menu-item>
            <ids-menu-item value="bg-BG">
              <ids-text translate-text="true">Bulgarian</ids-text>
              <ids-text>(bg-BG)</ids-text>
            </ids-menu-item>
            <ids-menu-item value="he-IL">
              <ids-text translate-text="true">Hebrew</ids-text>
              <ids-text>(he-IL)</ids-text>
            </ids-menu-item>
            <ids-menu-item value="ar-EG">
              <ids-text translate-text="true">Arabic</ids-text>
              <ids-text>(ar-EG)</ids-text>
            </ids-menu-item>
            <ids-menu-item value="th-TH">
              <ids-text translate-text="true">Thai</ids-text>
              <ids-text>(th-TH)</ids-text>
            </ids-menu-item>
            <ids-menu-item value="zh-Hans">
              <ids-text translate-text="true">Chinese</ids-text>
              <ids-text>(zh-Hans)</ids-text>
            </ids-menu-item>
          </ids-menu-group>
        </ids-popup-menu>
      </ids-menu-item>
    </ids-menu-group>`}static get attributes(){return[...super.attributes,e.LANGUAGE,e.MODE,e.SELF_MANAGED,e.THEME]}colorVariants=["alternate"];set mode(t){if(t){this.theme=`default-${t}`,this.triggerEvent("modechanged",this,{detail:{elem:this,mode:t},bubbles:!0,composed:!0}),this.setAttribute(e.MODE,t);return}this.removeAttribute(e.MODE)}get mode(){return this.getAttribute(e.MODE)||"light"}set selfManaged(t){if(t){this.setAttribute(e.SELF_MANAGED,String(t));return}this.removeAttribute(e.SELF_MANAGED)}get selfManaged(){return d(this.getAttribute(e.SELF_MANAGED))||!1}set theme(t){if(t){this.setAttribute(e.THEME,t),this.loadTheme(t),this.triggerEvent("themechanged",this,{detail:{elem:this,mode:t},bubbles:!0,composed:!0});return}this.removeAttribute(e.THEME)}get theme(){return this.getAttribute(e.THEME)||"default-light"}onColorVariantRefresh(){this.container?.setAttribute(e.COLOR_VARIANT,this.colorVariant)}};s=n([u("ids-theme-switcher"),r(p)],s);export{s as a};
