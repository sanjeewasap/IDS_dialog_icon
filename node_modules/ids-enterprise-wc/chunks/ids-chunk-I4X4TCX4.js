import{a as p}from"./ids-chunk-44CLLQBZ.js";import{a as l}from"./ids-chunk-4LNK4CO7.js";import{a as h}from"./ids-chunk-AKCO43TX.js";import{a as d,b as n}from"./ids-chunk-XE4WFW5M.js";import{a as c}from"./ids-chunk-GFV2Z7F5.js";import{e as r}from"./ids-chunk-QPDOZZIG.js";import{a as e}from"./ids-chunk-EQJWBFQ2.js";import{a}from"./ids-chunk-U7OOVFXE.js";var u=`
/* Ids Card Component */ /** Ripple Mixin - Adds Ripple Classes used in various components */
.is-rippling {
  position: relative;
  overflow: hidden;
}

.ripple-effect {
  border-radius: var(--ids-border-radius-circle);
  background-color: var(--ids-color-primary);
  position: absolute;
  display: block;
  opacity: 0;
  transform: scale(0);
}
.ripple-effect.animating {
  animation: ripple-animation 1.2s ease-out;
}

@keyframes ripple-animation {
  from {
    opacity: 0.3;
    transform: scale(0);
  }
  to {
    opacity: 0;
    transform: scale(2);
  }
}
.ids-card {
  background-color: var(--ids-card-color-background);
  border: 1px solid var(--ids-card-color-border);
  border-radius: var(--ids-card-border-radius);
  box-shadow: var(--ids-card-shadow);
  margin-block-end: var(--ids-card-margin-bottom);
  height: var(--ids-card-height);
}
.ids-card .ids-card-content {
  height: var(--ids-card-content-height);
  overflow: auto;
  width: 100%;
}
.ids-card .ids-card-content.overflow-hidden {
  overflow: hidden;
}
.ids-card .ids-card-content.has-checkbox {
  padding-inline-start: 50px;
}
.ids-card-checkbox {
  position: absolute;
  display: flex;
  top: 0;
  left: 0;
  bottom: 0;
  width: 50px;
  align-items: center;
  justify-content: center;
}
.ids-card.is-selectable {
  cursor: var(--ids-cursor-pointer);
}
.ids-card.is-selected {
  background-color: var(--ids-card-color-background-selected);
  outline: 2px solid var(--ids-card-color-border-selected);
  outline-offset: -1px;
}
.ids-card .hidden {
  display: none;
}

:host([auto-fit]) .ids-card {
  box-sizing: border-box;
  height: 100%;
  margin: 0;
  display: flex;
  flex-direction: column;
  min-height: auto;
}
:host([auto-fit]) .ids-card .ids-card-content {
  height: unset;
}

:host([auto-height]) .ids-card {
  min-height: auto;
  height: auto;
}
:host([auto-height]) .ids-card .ids-card-content {
  height: auto;
}
:host([auto-height]) .ids-card ids-button,
:host([auto-height]) .ids-card ids-hyperlink {
  height: auto;
}
:host([auto-height]) .ids-card ids-button::part(button),
:host([auto-height]) .ids-card ids-hyperlink::part(link) {
  height: auto;
}

:host([no-header]) .ids-card-header {
  padding: 0;
}

:host([borderless]) .ids-card {
  border-color: transparent;
  box-shadow: none;
}

:host([actionable]) ids-hyperlink {
  height: 50px;
}
:host([actionable]) ids-hyperlink::part(link) {
  box-sizing: border-box;
  border: none;
  color: var(--ids-card-color-text-default);
  display: flex;
  margin: 0;
  padding: 0;
  text-align: center;
  text-decoration: none;
  width: 100%;
  white-space: normal;
}
:host([actionable]) ids-hyperlink::part(link):hover {
  color: var(--ids-card-color-text-hover);
}

:host .flex-content,
:host ::slotted(.flex-content) {
  display: flex;
  align-items: center;
  padding: 15px 16px;
  gap: 16px;
}

:host([actionable]) .ids-card {
  contain: unset;
  height: auto;
}
:host([actionable]) .ids-card ::slotted([slot=card-content]) {
  pointer-events: none;
  width: 100%;
}
:host([actionable]) .ids-card ids-button {
  align-items: center;
  height: 50px;
  width: 100%;
}
:host([actionable]) .ids-card ids-hyperlink::part(link),
:host([actionable]) .ids-card ids-button::part(button) {
  align-items: center;
  height: 50px;
}
:host([actionable]) .ids-card ids-hyperlink::part(link):focus,
:host([actionable]) .ids-card ids-button::part(button):focus {
  border: 1px solid var(--ids-card-color-border);
  box-shadow: var(--ids-shadow-30);
}

.ids-card-body {
  width: 100%;
}

.ids-card-header {
  padding: var(--ids-card-header-padding);
}

.ids-card-footer {
  background-color: var(--ids-card-color-background);
  padding: 6px 0 0;
  display: none;
  bottom: 0;
  border-top: 1px solid var(--ids-card-divider-color-border);
  width: 100%;
}
.ids-card-footer.no-padding {
  padding: 0;
}

.has-footer .ids-card-content {
  height: 260px;
}
.has-footer .ids-card-footer {
  display: block;
}

::slotted([slot=card-header]),
::slotted([slot=card-footer]) {
  display: flex;
  flex-direction: row;
  align-items: center;
}

::slotted([slot=card-footer]) {
  justify-content: center;
}

::slotted([slot=card-content].fixed-height) {
  align-items: center;
  box-sizing: border-box;
  cursor: pointer;
  display: flex;
  flex-direction: column;
  height: inherit;
  justify-content: center;
  padding: 0 8px;
  text-align: center;
  width: 100%;
}

:host([actionable][height]) .ids-card ids-hyperlink {
  height: inherit;
}
:host([actionable][height]) .ids-card ids-hyperlink::part(link) {
  height: inherit;
}
:host([actionable][height]) .ids-card ids-button {
  height: inherit;
}
:host([actionable][height]) .ids-card ids-button::part(button) {
  height: inherit;
}`;var g=l(h(p(c))),s=class extends g{constructor(){super()}connectedCallback(){super.connectedCallback(),this.#r(),this.#i(),this.#e()}static get attributes(){return[...super.attributes,e.ACTIONABLE,e.AUTO_FIT,e.AUTO_HEIGHT,e.BORDERLESS,e.HEIGHT,e.HREF,e.NO_HEADER,e.OVERFLOW,e.TARGET]}cardTemplate(){return`
      <div class="ids-card" part="card">
        <div class="ids-card-body">
          <div class="ids-card-header" part="header">
            <slot name="card-header"></slot>
          </div>
          <div class="ids-card-content ${this.selection==="multiple"?"has-checkbox":""} ${this.overflow==="hidden"?"overflow-hidden":""}" part="content">
            <slot name="card-content"></slot>
          </div>
          <div class="ids-card-checkbox ${this.selection==="multiple"?"":"hidden"}">
            <ids-checkbox></ids-checkbox>
          </div>
          <div class="ids-card-footer" part="footer">
            <slot name="card-footer"></slot>
          </div>
        </div>
      </div>
    `}actionableButtonTemplate(){return`
      <div class="ids-card" part="card">
        <ids-button>
          <slot name="card-content"></slot>
        </ids-button>
      </div>
    `}actionableLinkTemplate(){return`
      <div class="ids-card" part="card">
        <ids-hyperlink href="${this.href}" target="${this.target}">
          <slot name="card-content"></slot>
        </ids-hyperlink>
      </div>
    `}template(){return this.actionable?this.href?this.actionableLinkTemplate():this.actionableButtonTemplate():this.cardTemplate()}#i(){if(this.onEvent("click",this,this.#s),this.selection==="multiple"){let t=this.container?.querySelector("ids-checkbox");t?.onEvent("click",t,i=>{i.stopPropagation(),i.preventDefault(),this.#t(i)})}return this.actionable&&this.href&&this.setupRipple(),this}#r(){let t=this.querySelector('[slot="card-footer"]');if(this.container?.classList[t?"add":"remove"]("has-footer"),t){let i=t.hasAttribute(e.NO_PADDING);this.container?.querySelector(".ids-card-footer")?.classList[i?"add":"remove"](e.NO_PADDING)}}#s(t){this.selection==="single"?this.#o(t):this.selection==="multiple"&&this.#t(t)}#o(t){[...document.querySelectorAll('ids-card[selection="single"]')].forEach(o=>o.setAttribute(e.SELECTED,"false")),this.setAttribute(e.SELECTED,"true"),this.triggerEvent("selectionchanged",this,{detail:{elem:this,nativeEvent:t,selected:this.selected,selection:this.selection}})}#t(t){this.container?.querySelector("ids-checkbox")?.setAttribute(e.CHECKED,String(this.selected!=="true")),this.setAttribute(e.SELECTED,String(this.selected!=="true")),this.triggerEvent("selectionchanged",this,{detail:{elem:this,nativeEvent:t,selected:this.selected,selection:this.selection}})}redraw(){if(!this.shadowRoot||!this.container)return;let t=document.createElement("template"),i=this.template();if(this.shadowRoot.innerHTML="",this.hasStyles=!1,this.appendStyles(),t.innerHTML=i,this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.container=this.shadowRoot.querySelector(".ids-card"),this.height){let o=this.container?.querySelector("ids-hyperlink")?.container;this.setAttribute(e.HEIGHT,this.height),this.container?.style.setProperty("height",`${this.height}px`),o?.style.setProperty("height",`${this.height}px`),this.querySelector("[slot]")?.classList.add("fixed-height")}this.actionable&&this.href&&this.setupRipple()}set autoFit(t){if(r(t)){this.setAttribute(e.AUTO_FIT,String(t));return}this.removeAttribute(e.AUTO_FIT)}get autoFit(){return r(this.getAttribute(e.AUTO_FIT))}set autoHeight(t){let i=r(t);if(r(t)){this.setAttribute("auto-height",String(i));return}this.removeAttribute("auto-height")}get autoHeight(){return this.getAttribute(e.AUTO_HEIGHT)}set borderless(t){r(t)?this.setAttribute(e.BORDERLESS,""):this.removeAttribute(e.BORDERLESS)}get borderless(){return this.hasAttribute(e.BORDERLESS)}set actionable(t){let i=r(t);if(r(t)){this.setAttribute(e.ACTIONABLE,String(i)),this.container&&this.redraw();return}this.removeAttribute(e.ACTIONABLE),this.container&&this.redraw()}get actionable(){return r(this.getAttribute(e.ACTIONABLE))}set overflow(t){t==="hidden"?(this.container?.querySelector(".ids-card-content")?.classList.add("overflow-hidden"),this.setAttribute(e.OVERFLOW,t)):(this.container?.querySelector(".ids-card-content")?.classList.remove("overflow-hidden"),this.removeAttribute(e.OVERFLOW))}get overflow(){return this.getAttribute(e.OVERFLOW)}get href(){return this.getAttribute("href")}set href(t){t?(this.setAttribute("href",t),this.container&&(this.redraw(),this.container.querySelector("ids-hyperlink")?.setAttribute("href",t))):(this.removeAttribute("href"),this.container&&this.redraw())}get height(){return this.getAttribute(e.HEIGHT)}set height(t){t?this.setAttribute(e.HEIGHT,t):this.removeAttribute(e.HEIGHT),this.#e()}#e(){let t=this.container?.querySelector("ids-hyperlink")?.container;this.container?.style?.setProperty("height",this.height?`${this.height}px`:""),t?.style?.setProperty("height",this.height?`${this.height}px`:""),this.querySelector("[slot]")?.classList.toggle("fixed-height",!!this.height)}get target(){return this.getAttribute("target")}set target(t){t?(this.setAttribute("target",t),this.container&&(this.container.querySelector("ids-hyperlink")?.setAttribute("target",t),this.redraw())):(this.removeAttribute("target"),this.container&&this.redraw())}get noHeader(){return this.getAttribute(e.NO_HEADER)}set noHeader(t){t?this.setAttribute(e.NO_HEADER,t):this.removeAttribute(e.NO_HEADER)}};s=a([d("ids-card"),n(u)],s);export{s as a};
