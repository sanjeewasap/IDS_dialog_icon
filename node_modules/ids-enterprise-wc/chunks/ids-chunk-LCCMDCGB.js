import{a as I}from"./ids-chunk-VSDBW2YP.js";import{a as E}from"./ids-chunk-4LOG7J7O.js";import{a as k}from"./ids-chunk-ONPEMRJP.js";import{c as g}from"./ids-chunk-M7IB5XSG.js";import{a as v}from"./ids-chunk-ZIGY2P3N.js";import{a as m}from"./ids-chunk-BWPOZP66.js";import{a as T}from"./ids-chunk-T2TIUOXF.js";import{a as L}from"./ids-chunk-OIS6KGMU.js";import{a as x}from"./ids-chunk-N7RNTKMO.js";import{a as A}from"./ids-chunk-AKCO43TX.js";import{a as b,b as p}from"./ids-chunk-XE4WFW5M.js";import{a as y}from"./ids-chunk-GFV2Z7F5.js";import{e as d,f as l,g as f}from"./ids-chunk-QPDOZZIG.js";import{a as i}from"./ids-chunk-EQJWBFQ2.js";import{a as u}from"./ids-chunk-U7OOVFXE.js";var w=`
/* Ids Axis Chart Component */
.chart-legend {
  display: flex;
  padding-inline-start: 8px;
  flex-direction: row;
  margin-top: -4px;
  justify-content: flex-start;
  width: inherit;
}
.chart-legend a {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  align-items: center;
  border: 1px solid transparent;
  display: flex;
  font-family: var(--ids-font-family-default);
  font-size: var(--ids-chart-legend-font-size);
  color: var(--ids-chart-legend-color-text);
  padding-inline-start: 8px;
  padding-inline-end: 8px;
  padding-block-start: 2px;
  padding-block-end: 2px;
  text-decoration: none;
}
.chart-legend a:focus {
  outline: none;
  border-color: var(--ids-color-border-focus);
  box-shadow: var(--ids-shadow-focus);
}
.chart-legend .swatch {
  display: inline-flex;
  margin-inline-end: 8px;
  height: 12px;
  width: 12px;
}
.chart-legend .swatch.color-1 {
  background-color: var(--ids-chart-color-1);
}
.chart-legend .swatch.color-2 {
  background-color: var(--ids-chart-color-2);
}
.chart-legend .swatch.color-3 {
  background-color: var(--ids-chart-color-3);
}
.chart-legend .swatch.color-4 {
  background-color: var(--ids-chart-color-4);
}
.chart-legend .swatch.color-5 {
  background-color: var(--ids-chart-color-5);
}
.chart-legend .swatch.color-6 {
  background-color: var(--ids-chart-color-6);
}
.chart-legend .swatch.color-7 {
  background-color: var(--ids-chart-color-7);
}
.chart-legend .swatch.color-8 {
  background-color: var(--ids-chart-color-8);
}
.chart-legend .swatch.color-9 {
  background-color: var(--ids-chart-color-9);
}
.chart-legend .swatch.color-10 {
  background-color: var(--ids-chart-color-10);
}
.chart-legend .swatch.color-11 {
  background-color: var(--ids-chart-color-11);
}
.chart-legend .swatch.color-12 {
  background-color: var(--ids-chart-color-12);
}
.chart-legend .swatch.color-13 {
  background-color: var(--ids-chart-color-13);
}
.chart-legend .swatch.color-14 {
  background-color: var(--ids-chart-color-14);
}
.chart-legend .swatch.color-15 {
  background-color: var(--ids-chart-color-15);
}
.chart-legend .swatch.color-16 {
  background-color: var(--ids-chart-color-16);
}
.chart-legend .swatch.color-17 {
  background-color: var(--ids-chart-color-17);
}
.chart-legend .swatch.color-18 {
  background-color: var(--ids-chart-color-18);
}
.chart-legend .swatch.color-19 {
  background-color: var(--ids-chart-color-19);
}
.chart-legend .swatch.color-20 {
  background-color: var(--ids-chart-color-20);
}
.chart-legend .swatch.color-21 {
  background-color: var(--ids-chart-color-21);
}

.ids-chart-container {
  display: flex;
  flex-direction: column;
}
.ids-chart-container.legend-top {
  margin-block-end: 8px;
  flex-direction: column-reverse;
}
.ids-chart-container.legend-top .chart-legend {
  margin-inline-start: 0;
  justify-content: end;
}
.ids-chart-container.legend-right, .ids-chart-container.legend-left {
  flex-direction: row;
}
.ids-chart-container.legend-right .chart-legend, .ids-chart-container.legend-left .chart-legend {
  margin-inline-start: 0;
  flex-direction: column;
  justify-content: center;
}
.ids-chart-container.legend-right .chart-legend a, .ids-chart-container.legend-left .chart-legend a {
  margin-block-end: 8px;
  width: max-content;
}
.ids-chart-container.legend-left {
  flex-direction: row-reverse;
}

.ids-axis-chart {
  display: flex;
}
.ids-axis-chart.hidden {
  display: none;
}
.ids-axis-chart .grid {
  shape-rendering: crispedges;
  stroke: var(--ids-axis-chart-grid-color);
  stroke-width: 1;
  stroke-dasharray: 2 2;
}
.ids-axis-chart .grid.horizontal-lines line:last-child {
  stroke: var(--ids-axis-chart-last-line-color-border);
  stroke-dasharray: none;
}
.ids-axis-chart .grid.hidden {
  stroke-width: 0;
}
.ids-axis-chart.horizontal .grid.horizontal-lines line:last-child {
  stroke: inherit;
  stroke-dasharray: inherit;
}
.ids-axis-chart.horizontal .grid.vertical-lines line:first-child {
  stroke: var(--ids-axis-chart-first-line-color);
  stroke-dasharray: none;
}
.ids-axis-chart g[tabindex="0"]:focus {
  outline: var(--ids-axis-chart-outline-focus);
}
.ids-axis-chart .labels {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: var(--ids-axis-chart-font-family);
  font-size: var(--ids-axis-chart-font-size);
}
.ids-axis-chart .labels text {
  fill: var(--ids-axis-chart-color-text);
}
.ids-axis-chart .labels.x-labels {
  text-anchor: middle;
}
.ids-axis-chart .labels.y-labels {
  text-anchor: end;
}
.ids-axis-chart .labels.axis-labels text {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: var(--ids-axis-chart-font-weight);
  text-anchor: middle;
}
.ids-axis-chart .audible {
  opacity: 0;
}

.ids-chart-container.selectable .audible {
  font-size: 1px;
}

ids-empty-message:not([hidden]),
::slotted(ids-empty-message:not([hidden])) {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}
ids-empty-message:not([hidden])[hidden],
::slotted(ids-empty-message:not([hidden]))[hidden] {
  display: none;
}

.tooltip-center {
  margin-block: var(--ids-space-30);
  text-align: center;
}

.tooltip.chart-legend {
  flex-direction: column;
  margin-block-end: var(--ids-space-40);
  padding: 0;
}
.tooltip.chart-legend .swatch {
  margin-inline: var(--ids-space-30);
  padding: 0;
}

.tooltip-row span {
  padding-inline-start: var(--ids-space-20);
  padding-inline-end: var(--ids-space-30);
}

:host([dir=rtl]) .ids-axis-chart {
  transform: scale(-1, 1);
}
:host([dir=rtl]) .ids-axis-chart:not(.horizontal) .labels.y-labels text {
  transform: scale(-1, 1) translate(var(--ids-axis-chart-ylabels-x, -45px), 0);
}
:host([dir=rtl]) .labels.x-labels {
  transform: scale(-1, 1);
  transform-origin: unset;
}`;var N=I(E(x(A(y)))),c=class extends N{initialized=!1;constructor(){super(),this.state=this.state||{},this.state.horizontal=!1,this.state.yAxisFormatter={notation:"compact",compactDisplay:"short"}}svg;canvas;emptyMessage;legend;sectionWidths=[];sectionWidth=NaN;sectionHeights=[];sectionHeight=NaN;resizeToParentHeight;resizeToParentWidth;parentWidth=NaN;parentHeight=NaN;datasource=new L;vetoableEventTypes=["beforeselected","beforedeselected"];onSelectableChange(){this.legendsClickable?.(this.selectable)}connectedCallback(){super.connectedCallback?.(),this.svg=this.shadowRoot?.querySelector("svg"),this.emptyMessage=this.querySelector("ids-empty-message")||this.shadowRoot?.querySelector("ids-empty-message"),this.legend=this.shadowRoot?.querySelector('[name="legend"]'),this.getAttribute(i.WIDTH)&&(this.width=this.getAttribute(i.WIDTH)),this.getAttribute(i.HEIGHT)&&(this.height=this.getAttribute(i.HEIGHT)),this.#k(),this.#u(),this.redraw()}disconnectedCallback(){super.disconnectedCallback(),this.#e?.disconnect(),this.#e=void 0,this.emptyMessage?.remove(),this.emptyMessage=void 0,this.svg?.remove(),this.svg=void 0,this.legend?.remove(),this.legend=void 0}static get attributes(){return[...super.attributes,i.ANIMATED,i.ALIGN_X_LABELS,i.AXIS_LABEL_BOTTOM,i.AXIS_LABEL_END,i.AXIS_LABEL_MARGIN,i.AXIS_LABEL_START,i.AXIS_LABEL_TOP,i.DATA,i.HEIGHT,i.HORIZONTAL,i.MARGINS,i.SHOW_HORIZONTAL_GRID_LINES,i.SHOW_VERTICAL_GRID_LINES,i.ROTATE_NAME_LABELS,i.STACKED,i.TITLE,i.WIDTH]}template(){return`<div class="ids-chart-container" part="container">
      <svg class="ids-axis-chart${this.horizontal?" horizontal":""}" part="chart" width="${this.width}" height="${this.height}" xmlns="http://www.w3.org/2000/svg">
      </svg>
      <slot name="legend">
      </slot>
      <slot name="empty-message">
        <ids-empty-message icon="empty-no-data" hidden>
          <ids-text type="h2" font-size="20" label="true" slot="label">${this.localeAPI?.translate("NoData")||"No Data Available"}</ids-text>
        </ids-empty-message>
      </slot>
      <slot name="tooltip">
        <ids-tooltip id="tooltip"></ids-tooltip>
      </slot>
    </div>`}#u(){this.onLocaleChange=()=>{this.redraw();let t=this.shadowRoot?.querySelector("ids-empty-message ids-text");t&&(t.textContent=this.localeAPI?.translate("NoData"))},this.onLanguageChange=()=>{let t=this.shadowRoot?.querySelector("ids-empty-message ids-text");t&&(t.textContent=this.localeAPI?.translate("NoData"))}}#o=0;#r=0;#e=void 0;#h(){(this.resizeToParentHeight||this.resizeToParentWidth)&&!this.#e&&(this.parentWidth=this.parentElement?.offsetWidth,this.parentHeight=this.parentElement?.offsetHeight,this.#e=new ResizeObserver(k(t=>{this.resize(t)},350)),this.#e.disconnect(),this.#e.observe(this.parentElement))}isGrouped=!1;resize(t){this.initialized&&((t[0].contentRect.width!==this.parentWidth&&this.resizeToParentWidth&&this.parentWidth>0||t[0].contentRect.height!==this.parentHeight&&this.resizeToParentHeight&&this.parentHeight>0)&&(this.initialized=!1,this.resizeToParentHeight&&(this.height="inherit"),this.resizeToParentWidth&&(this.width="inherit"),this.initialized=!0,this.redraw(),this.reanimate()),this.parentWidth=this.parentElement?.offsetWidth,this.parentHeight=this.parentElement?.offsetHeight)}redraw(){if(this.initialized){if(this.data&&this.data.length===0&&this.initialized){this.#$(),this.legend&&(this.legend.innerHTML=this.legendTemplate());return}this.#p(),this.afterCalculateCallback?.(),this.#L(),this.svg&&(this.svg.innerHTML=this.#v()),this.legend&&(this.legend.innerHTML=this.legendTemplate()),this.adjustLabels(),this.#b(),this.legendsClickable?.(this.selectable),this.triggerEvent("rendered",this,{detail:{svg:this.svg,data:this.data,markerData:this.markerData}}),this.afterConnectedCallback&&this.afterConnectedCallback()}}#b(){if(!this.localeAPI?.isRTL())return;let t={x:[...this.svg?.querySelectorAll(".labels.x-labels text")??[]],y:[...this.svg?.querySelectorAll(".labels.y-labels text")??[]]},e=this.#r+this.margins.left,s=a=>{let n=l(a)-e;return n+=this.horizontal?this.margins.leftInner+this.margins.rightInner:0,n},r=t.x.map(a=>s(a.getAttribute("x"))).reverse();t.x.forEach((a,n)=>{this.horizontal||a.setAttribute("transform",`rotate(${this.rotateNameLabels}, ${r[n]}, ${a.getAttribute("y")})`),a.setAttribute("x",r[n]),a.setAttribute("text-anchor","start"),this.alignXLabels==="middle"&&a.setAttribute("transform-origin","0 -4px")}),s=a=>`-${l(a)+e}px`,t.y.forEach(a=>{if(this.horizontal){let n=a.getAttribute("transform")?.split(",");if(n?.length===3){let o=l(n[1]),h=l(n[2]);a.setAttribute("transform-origin",`${o}px ${h}px`),a.setAttribute("transform",`rotate(${this.rotateNameLabels}) scale(-1, 1)`)}else{let h=`scale(-1, 1) translate(${s(a.getAttribute("x"))}, 0)`;a.style.setProperty("transform",h)}}else{let n=s(a.getAttribute("x"));a.style.setProperty("--ids-axis-chart-ylabels-x",n)}})}markerData={markerCount:0,groupCount:0,min:0,max:0,scale:new m(this.yAxisMin,0),gridTop:0,gridBottom:0,gridLeft:0,gridRight:0,groupTotals:[0]};#p(){let t=0,e=0;this.markerData={markerCount:0,groupCount:0,min:0,max:0,scale:new m(this.yAxisMin,0),gridTop:0,gridBottom:0,gridLeft:0,gridRight:0,groupTotals:[0]},this.data?.forEach((a,n)=>{t++,e=0,this.markerData.groupTotals[n]=0,a.data?.forEach(o=>{o.value>this.markerData.max&&(this.markerData.max=o.value),this.markerData.groupTotals[n]+=o.value,o.value<this.markerData.min&&(this.markerData.min=o.value),this.markerData.min===void 0&&(this.markerData.min=o.value),e++}),e>this.markerData.markerCount&&(this.markerData.markerCount=e),this.markerData.groupCount=t});let s=Math.max(...this.markerData.groupTotals),r=new m(this.yAxisMin,this.stacked?s:this.markerData.max);this.markerData.scale=r,this.markerData.scaleValues=[];for(let a=r.niceMin||0;a<=r.niceMax;a+=Number(r.tickSpacing))this.markerData.scaleValues.push(a);this.xMaxTextWidth(),this.yMaxTextWidth(),this.markerData.gridTop=this.margins.top+this.textWidths.top,this.markerData.gridBottom=this.height-this.margins.bottom-this.textWidths.bottom,this.markerData.gridLeft=this.textWidths.left+this.margins.left+this.margins.leftInner*2+this.margins.rightInner,this.markerData.gridRight=this.width-this.margins.right-this.textWidths.right,this.horizontal?(this.#f(),this.#y()):(this.#x(),this.#A())}#f(){this.markerData.points=[],this.data?.forEach(t=>{let e=this.textWidths.top+this.margins.top+this.margins.topInner,s=[];for(let r=0;r<this.markerData.markerCount;r++){let a=t.data?.[r]?.value||0,o=(a-(this.markerData.scale.niceMin||0))/(this.markerData.scale.niceMax-this.markerData.scale.niceMin)*(this.markerData.gridRight-this.markerData.gridLeft);s.push({top:e,left:this.markerData.gridRight-o,value:a}),e+=this.#s()}this.markerData.points?.push(s)})}#x(){this.markerData.points=[],this.data?.forEach(t=>{let e=this.textWidths.left+this.margins.left+this.margins.leftInner*2,s=[];for(let r=0;r<this.markerData.markerCount;r++){let a=t.data?.[r]?.value||0,o=(a-(this.markerData.scale.niceMin||0))/(this.markerData.scale.niceMax-this.markerData.scale.niceMin)*(this.markerData.gridBottom-this.markerData.gridTop);s.push({left:e,top:this.markerData.gridBottom-o,value:a}),e+=this.#s()}this.markerData.points?.push(s)})}#A(){this.sectionWidth=(this.markerData.gridRight-this.markerData.gridLeft)/this.markerData.markerCount;let t=this.textWidths.left+this.margins.left+this.margins.leftInner*2;this.sectionWidths=[];for(let e=0;e<this.markerData.markerCount+1;e++)this.sectionWidths.push({left:t,width:this.sectionWidth}),t+=this.sectionWidth}#y(){this.sectionHeight=(this.markerData.gridBottom-this.markerData.gridTop)/this.markerData.markerCount;let t=this.textWidths.top+this.margins.top+this.margins.topInner;this.isGrouped&&(t-=(this.markerData.groupCount||0)%2),this.sectionHeights=[];for(let e=0;e<this.markerData.markerCount;e++)this.sectionHeights.push({top:t,height:this.sectionHeight}),t+=this.sectionHeight}#L(){let t="";if(!this.shadowRoot?.styleSheets)return;this.data?.forEach((s,r)=>{let a=s,n=a.patternColor;!n&&a.color&&a.color.substr(0,1)==="#"&&(n=a.color),!n&&a.color&&a.color.substr(0,1)!=="#"&&a.color.substr(0,11)!=="--ids-color"&&(n=`var(--ids-color-${a.color})`),!n&&a.color&&a.color.substr(0,1)!=="#"&&a.color.substr(0,11)==="--ids-color"&&(n=`var(${a.color})`),n||(n=`var(${this.colors[r]})`),t+=`--ids-chart-color-${r+1}: ${n} !important;`});let e=this.shadowRoot.styleSheets[0];e.cssRules&&e.cssRules[0].selectorText===":host"&&e.deleteRule(0),e.insertRule(`:host {
      ${t}
    }`)}#v(){return`<title></title>
    <title>${this.title}</title>
    <defs>
      ${this.#M()}
    </defs>
    <g class="grid vertical-lines${this.showVerticalGridLines?"":" hidden"}">
      ${this.#w()}
    </g>
    <g class="grid horizontal-lines${this.showHorizontalGridLines?"":" hidden"}">
      ${this.#E()}
    </g>
    ${this.chartTemplate()}
    <g class="labels x-labels">
      ${this.#D()}
    </g>
    <g class="labels y-labels">
      ${this.#S()}
    </g>
    <g class="labels axis-labels">
      ${this.#I()}
    </g>
    `}chartTemplate(){return""}tooltipElements(){return[]}tooltipTemplate(){return"<b>${label}</b> ${value}"}attachTooltipEvents(){this.tooltipElements().forEach(t=>{this.onEvent("hoverend",t,async()=>{let e=this.container?.querySelector("ids-tooltip");e&&(e.innerHTML=this.#T(t),e.target=t,e.placement="top",e.visible=!0)})})}tooltipData(t,e=0){let s=this.data[e]?.data;return{label:s[t]?.name||this.data[0].data[t].name,value:s[t]?.value||0,tooltip:s[t]?.tooltip}}#T(t){let e=Number(t.getAttribute("group-index")),s=Number(t.getAttribute("index")),r=this.tooltipData(s,e);if(r.tooltip)return r.tooltip.replace("${value}",r.value).replace("${label}",r.label);if(this.stacked||this.isGrouped){let a=`<div class="tooltip-center"><b>${r.label}</b></div><div class="tooltip chart-legend">`;for(let n=0;n<this.data.length;n++){let o=this.data[n],h=o.name,D=this.data[n].data[s]?.value,S=o.pattern?"":` color-${n+1}`,$=o.pattern?`<svg width="12" height="12" xmlns="http://www.w3.org/2000/svg"><rect width="12" height="12" fill="url(#${o.pattern})"></rect></svg>`:"";h&&D&&(a+=`<div class="tooltip-row">
            <div class="swatch${S}">${$}</div>
            <span>${this.data[n].name}</span>
            <b>${this.data[n].data[s].value}</b></div>`)}return`${a}</div>`}return f(this.tooltipTemplate(),r)}#t;#k(){this.#t={bottom:"",end:"",start:"",top:""}}#i(t){if(this.#t){let e=this.#t[t],s={bottom:this.axisLabelBottom,end:this.axisLabelEnd,start:this.axisLabelStart,top:this.axisLabelTop};typeof e<"u"&&e!==s[t]&&(this.#t[t]=s[t]||"",this.initialized&&this.redraw())}}#I(){let t="";if(this.#t){let s={start:12,mid:this.width/2,end:this.width-12},r={start:12,mid:this.height/2,end:this.height-12},n=this.localeAPI?.isRTL()?" scale(-1, 1)":"",o={top:`translate(${s.mid}, ${r.start})${n}`,bottom:`translate(${s.mid}, ${r.end})${n}`,start:`translate(${s.start}, ${r.mid}) rotate(-90)${n}`,end:`translate(${s.end}, ${r.mid}) rotate(90)${n}`};["top","bottom","start","end"].forEach(h=>{this.#t[h]&&(t+=`<text
          class="axis-label-${h}"
          transform="${o[h]}"
        >${this.#t[h]}</text>`)})}return t}#E(){let t="",e=this.margins.top+this.margins.topInner,s=this.textWidths.left+this.margins.left+this.margins.leftInner,r=this.width-this.margins.right,{markerCount:a,scaleValues:n}=this.markerData,o=this.horizontal?a+1:n?.length||0;for(let h=0;h<o;h++)t+=`<line x1="${s}" x2="${r}" y1="${e}" y2="${e}"></line>`,e+=this.horizontal?this.#s():this.#a();return t}#w(){let t="",e=this.textWidths.left+this.margins.left;e+=this.margins.leftInner*(this.horizontal?1:2);let s=this.margins.top,r=this.height-this.margins.bottom-this.textWidths.bottom,{markerCount:a,scaleValues:n}=this.markerData,o=this.horizontal?n?.length||0:a;for(let h=0;h<o;h++)t+=`<line x1="${e}" x2="${e}" y1="${s}" y2="${r}"></line>`,e+=this.horizontal?this.#a():this.#s();return t}#n(t){return this.xAxisFormatter?typeof this.xAxisFormatter=="function"?this.xAxisFormatter(t,this.data,this):"":t}formatYLabel(t){return this.yAxisFormatter?typeof this.yAxisFormatter=="function"?this.yAxisFormatter(t,this.data,this):new Intl.NumberFormat(this.locale||"en",this.yAxisFormatter).format(t):t}#l(){let t="",e=0,s=0,r=this.#s();if(this.horizontal){e=this.textWidths.left+this.margins.left,s=this.margins.top+this.margins.topInner+3+r/2,this.axisLabelTop&&(s+=this.axisLabelMargin);for(let n=0;n<this.markerData.markerCount;n++){let o=this.rotateNameLabels!==0?` transform="rotate(${this.rotateNameLabels}, ${e}, ${s})"`:"",h=this.#n(this.data[0]?.data[n]?.name);t+=`<text x="${e}" y="${s}" aria-hidden="true"${o}>${h}</text>`,s+=r}}else{e=this.textWidths.left+this.margins.left+this.margins.leftInner*2,s=this.height-this.margins.top-this.margins.bottom+this.margins.bottomInner,this.axisLabelTop&&(s+=this.axisLabelMargin);for(let a=0;a<this.markerData.markerCount;a++){let n=this.#n(this.data[0]?.data[a]?.name),o;if(this.alignXLabels==="middle"){let h=e+this.sectionWidths[a].width/2;o=this.rotateNameLabels!==0?` transform="rotate(${this.rotateNameLabels}, ${h}, ${s})" transform-origin="8px 8px"`:"",t+=`<text x="${h}" y="${s}" alignment-baseline="middle" text-anchor="middle" aria-hidden="true"${o}>${n}</text>`}else o=this.rotateNameLabels!==0?` transform="rotate(${this.rotateNameLabels}, ${e}, ${s})" text-anchor="end"`:"",t+=`<text x="${e}" y="${s}" aria-hidden="true"${o}>${n}</text>`;e+=this.alignXLabels==="middle"?this.sectionWidths[a].width:r}}return t}#d(){let t="",e=0,s=0;return this.horizontal?(e=this.textWidths.left+this.margins.left+this.margins.leftInner,s=this.height-this.margins.top-this.margins.bottom+this.margins.bottomInner,this.axisLabelTop&&(s+=this.axisLabelMargin),this.markerData.scaleValues?.slice().forEach(r=>{t+=`<text x="${e}" y="${s}" aria-hidden="true">${this.formatYLabel(r)}</text>`,e+=this.#a()})):(e=this.textWidths.left+this.margins.left,s=this.margins.top+3,this.markerData.scaleValues?.slice().reverse().forEach(a=>{t+=`<text x="${e}" y="${s}" aria-hidden="true">${this.formatYLabel(a)}</text>`,s+=this.#a()})),t}#s(){if(this.horizontal){let{gridTop:s,gridBottom:r,markerCount:a}=this.markerData;return(r-s)/a}let t=this.textWidths.left+this.margins.left+this.margins.leftInner;return(this.width-this.margins.right-this.margins.rightInner*2-t)/(this.markerData.markerCount-1)}#a(){let t=this.markerData.scaleValues?.length||0,e=0;return this.horizontal?(e+=this.margins.left+this.margins.right,e+=this.textWidths.left+this.textWidths.right,e+=this.margins.leftInner*2+this.margins.rightInner,e=this.width-e):(e+=this.margins.top+this.margins.bottom,e+=this.textWidths.top+this.textWidths.bottom,e=this.height-e),e/(t-1)}#D(){return this.horizontal?this.#d():this.#l()}#S(){return this.horizontal?this.#l():this.#d()}#$(){this.svg?.classList.add("hidden"),this.emptyMessage?.style.setProperty("height",`${this.height}px`),this.emptyMessage?.removeAttribute("hidden")}#N(){this.svg?.classList.remove("hidden"),this.emptyMessage?.style.setProperty("height",""),this.emptyMessage?.setAttribute("hidden","")}#M(){let t="";return this.data?.forEach((e,s)=>{let r=T[e.pattern];if(r){let a=`${this.color(s)}`||"#000000";r=r.replace('fill="#000000"',`fill="${a}"`),t+=r}}),t}onTitleChange(t=""){let e=this.container?.querySelector(i.TITLE);e&&(e.textContent=t)}set height(t){let e=t;t==="inherit"&&(e=this.#c().height,this.resizeToParentHeight=!0,this.#h()),this.setAttribute(i.HEIGHT,String(e)),this.svg?.setAttribute(i.HEIGHT,String(e)),this.redraw()}get height(){let t=l(this.getAttribute(i.HEIGHT));return Number.isNaN(t)?500:t}set horizontal(t){if(!/^ids-(axis|bar)-chart$/gi.test(this.nodeName))return;let e=d(t);e!==this.state.horizontal&&(this.state.horizontal=e,e?(this.setAttribute(i.HORIZONTAL,""),this.svg?.classList.add(i.HORIZONTAL)):(this.removeAttribute(i.HORIZONTAL),this.svg?.classList.remove(i.HORIZONTAL)),this.redraw())}get horizontal(){return this.state.horizontal}set width(t){let e=t;t==="inherit"&&(e=this.#c().width,this.resizeToParentWidth=!0,this.#h()),this.setAttribute(i.WIDTH,String(e)),this.svg?.setAttribute(i.WIDTH,String(e)),this.#z(Number(e)),this.redraw()}get width(){let t=l(this.getAttribute(i.WIDTH));return Number.isNaN(t)?700:t}#c(){let t=document.querySelector("ids-container"),e=!1;t.hidden&&(t.hidden=!1,e=!0);let s={width:this.parentElement?.offsetWidth||parseInt(this.parentElement?.style.width),height:this.parentElement?.offsetHeight||parseInt(this.parentElement?.style.height)};return e&&(t.hidden=!0),s}#z(t){let e=this.container;if(e){if(e.classList.contains("ids-chart-container")){e.style.width=`${t}px`;return}e.parentNode?.style.setProperty("width",`${t}px`)}}#m(){let t=0;for(let e=0;e<this.markerData.markerCount;e++){let s=this.#n(this.data[0]?.data[e]?.name),r=g(this,s);r>t&&(t=r)}return t}#g(){let t=0;return this.markerData.scaleValues?.slice().forEach(e=>{let s=this.formatYLabel(e),r=g(this,s);r>t&&(t=r)}),t}xMaxTextWidth(){this.#o=this.horizontal?this.#g():this.#m()}yMaxTextWidth(){this.#r=this.horizontal?this.#m():this.#g()}set margins(t){this.state.margins=t,this.redraw()}get margins(){return this.state?.margins||{left:this.axisLabelsMargin.start,right:(this.legendPlacement==="right"?150:4)+this.axisLabelsMargin.end,top:16+this.axisLabelsMargin.top,bottom:12+this.axisLabelsMargin.bottom+this.bottomRotateMargin,leftInner:8,rightInner:8,topInner:0,bottomInner:12}}get bottomRotateMargin(){if(!this.rotateNameLabels)return 0;let t=this.rotateNameLabels%90,e=this.#o-12,s=e/90;return Math.abs(t)===0?e:s*Math.abs(t)}get axisLabelsMargin(){let t=this.axisLabelMargin;return{bottom:this.axisLabelBottom?t:0,end:this.axisLabelEnd?t:0,start:this.axisLabelStart?t:0,top:this.axisLabelTop?t:0}}set textWidths(t){this.state.textWidths=t,this.redraw()}get textWidths(){return this.state.textWidths||{left:this.legendPlacement==="left"?34:this.#r||4,right:0,top:0,bottom:24}}set data(t){if(t){this.#N(),this.datasource.data=t,this.initialized=!0,this.redraw(),this.reanimate();return}this.datasource.data=[]}get data(){return this?.datasource?.data||[]}set yAxisMin(t){this.setAttribute(i.Y_AXIS_MIN,String(t)),this.redraw()}get yAxisMin(){return parseInt(this.getAttribute(i.Y_AXIS_MIN)??"")||0}set showVerticalGridLines(t){this.setAttribute(i.SHOW_VERTICAL_GRID_LINES,String(t)),this.redraw()}get showVerticalGridLines(){let t=this.getAttribute(i.SHOW_VERTICAL_GRID_LINES);return t!==null?d(t):this.horizontal}set showHorizontalGridLines(t){this.setAttribute(i.SHOW_HORIZONTAL_GRID_LINES,String(t)),this.redraw()}get showHorizontalGridLines(){let t=this.getAttribute(i.SHOW_HORIZONTAL_GRID_LINES);return t!==null?d(t):!this.horizontal}get colors(){return v}color(t){return this.data[t].patternColor?this.data[t].patternColor:`var(${this.data[t].color?`color-${t+1}`:this.colors[t]})`}set xAxisFormatter(t){this.state.xAxisFormatter=t,this.redraw()}get xAxisFormatter(){return this.state.xAxisFormatter}set yAxisFormatter(t){this.state.yAxisFormatter=t,this.redraw()}get yAxisFormatter(){return this.state.yAxisFormatter}reanimate(){!this.animated||!this.initialized||requestAnimationFrame(()=>{this.container?.querySelectorAll("animate").forEach(t=>{t.beginElement&&t.beginElement()}),this.container?.querySelectorAll("animateTransform").forEach(t=>{t.beginElement&&t.beginElement()})})}get cubicBezier(){return`calcMode="spline" keyTimes="0; 1" keySplines="0.17, 0.04, 0.03, 0.94" begin="0s" dur="${this.animationSpeed}s"`}set animated(t){let e=d(this.animated);this.setAttribute(i.ANIMATED,String(t)),this.redraw(),e&&this.reanimate()}get animated(){return this.getAttribute(i.ANIMATED)===null?!0:d(this.getAttribute(i.ANIMATED))}set animationSpeed(t){this.setAttribute(i.ANIMATION_SPEED,String(t)),this.animated&&this.reanimate()}get animationSpeed(){return parseFloat(this.getAttribute(i.ANIMATION_SPEED)??"")||.8}set alignXLabels(t){this.setAttribute(i.ALIGN_X_LABELS,t),this.redraw()}get alignXLabels(){return this.getAttribute(i.ALIGN_X_LABELS)||"start"}set stacked(t){this.setAttribute(i.STACKED,String(t)),this.redraw()}get stacked(){return d(this.getAttribute(i.STACKED))||!1}set axisLabelBottom(t){t?this.setAttribute(i.AXIS_LABEL_BOTTOM,t):this.removeAttribute(i.AXIS_LABEL_BOTTOM),this.#i("bottom")}get axisLabelBottom(){return this.getAttribute(i.AXIS_LABEL_BOTTOM)}set axisLabelEnd(t){t?this.setAttribute(i.AXIS_LABEL_END,t):this.removeAttribute(i.AXIS_LABEL_END),this.#i("end")}get axisLabelEnd(){return this.getAttribute(i.AXIS_LABEL_END)}set axisLabelMargin(t){let e=l(this.getAttribute(i.AXIS_LABEL_MARGIN));Number.isNaN(e)?this.removeAttribute(i.AXIS_LABEL_MARGIN):this.setAttribute(i.AXIS_LABEL_MARGIN,String(e)),this.#i("end")}get axisLabelMargin(){let t=l(this.getAttribute(i.AXIS_LABEL_MARGIN));return Number.isNaN(t)?16:t}set axisLabelStart(t){t?this.setAttribute(i.AXIS_LABEL_START,t):this.removeAttribute(i.AXIS_LABEL_START),this.#i("start")}get axisLabelStart(){return this.getAttribute(i.AXIS_LABEL_START)}set axisLabelTop(t){t?this.setAttribute(i.AXIS_LABEL_TOP,t):this.removeAttribute(i.AXIS_LABEL_TOP),this.#i("top")}get axisLabelTop(){return this.getAttribute(i.AXIS_LABEL_TOP)}set rotateNameLabels(t){t?this.setAttribute(i.ROTATE_NAME_LABELS,String(t)):this.removeAttribute(i.ROTATE_NAME_LABELS),this.initialized&&this.redraw()}get rotateNameLabels(){return Number(this.getAttribute(i.ROTATE_NAME_LABELS))||0}};c=u([b("ids-axis-chart"),p(w)],c);export{c as a};
