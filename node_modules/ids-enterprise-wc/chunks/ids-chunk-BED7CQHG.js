import{a as l}from"./ids-chunk-AKCO43TX.js";import{e}from"./ids-chunk-CK6SA7FU.js";import{a as o,b as r}from"./ids-chunk-XE4WFW5M.js";import{a}from"./ids-chunk-GFV2Z7F5.js";import{a as t}from"./ids-chunk-EQJWBFQ2.js";import{a as n}from"./ids-chunk-U7OOVFXE.js";var c=`
/* Ids Swipe Container Css */
.ids-swipe-container {
  display: flex;
  overflow-x: scroll;
  scroll-snap-type: x proximity;
  scroll-behavior: smooth;
  margin-left: -1px;
  border-radius: var(--ids-card-border-radius);
}
.ids-swipe-container.continuous {
  scroll-snap-type: x proximity;
}
.ids-swipe-container.continuous .ids-swipe-action-left,
.ids-swipe-container.continuous .ids-swipe-action-right {
  scroll-snap-align: initial;
}

.ids-swipe-container::-webkit-scrollbar {
  display: none;
}

.swipe-container {
  scrollbar-width: none;
}

.ids-swipe-element {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  padding: var(--ids-space-60);
  font-family: var(--ids-font-family-default);
  scroll-snap-align: start;
  scroll-snap-stop: always;
  min-width: calc(100% - 32px);
}

.ids-swipe-action {
  border-radius: 6px;
  display: flex;
  align-items: center;
  min-width: 100%;
}

.ids-swipe-action-left {
  scroll-snap-align: start;
  scroll-snap-stop: always;
}

.ids-swipe-action-right {
  justify-content: flex-end;
  scroll-snap-align: start;
  scroll-snap-stop: always;
}

::slotted(ids-button) {
  display: contents;
  position: sticky;
}

@-moz-document url-prefix("") {
  .ids-swipe-container {
    overflow-x: hidden;
  }
  .ids-swipe-action-left {
    display: none;
  }
}`;var u=l(a),i=class extends u{leftButton=null;rightButton=null;constructor(){super()}connectedCallback(){super.connectedCallback(),this.leftButton=this.querySelector('[slot="action-left"]'),this.rightButton=this.querySelector('[slot="action-right"]'),this.#i(),this.#t()}async#t(){this.leftButton=this.querySelector('[slot="action-left"]'),this.rightButton=this.querySelector('[slot="action-right"]'),this.swipeType==="reveal"&&(this.rightButton&&(this.rightButton.setAttribute("tabindex","-1"),this.rightButton.setAttribute("aria-hidden","true"),this.rightButton.setAttribute("no-ripple","true")),this.leftButton&&(this.leftButton.setAttribute("tabindex","-1"),this.leftButton.setAttribute("aria-hidden","true"),this.leftButton.setAttribute("no-ripple","true"),this.container?.style.setProperty("visibility","hidden"),this.container?.style.setProperty("scroll-behavior","auto"),await e(40),this.container&&(this.container.scrollLeft=85),await e(1),this.container?.style.setProperty("scroll-behavior","smooth"),this.container?.style.setProperty("visibility","")))}static get attributes(){return[t.SWIPE_TYPE]}template(){return`<div class="ids-swipe-container">
       <div class="ids-swipe-action-left"><slot name="action-left"></slot></div>
       <div class="ids-swipe-element"><slot name="contents"></slot></div>
       <div class="ids-swipe-action-right"><slot name="action-right"></slot></div>
    </div>`}#i(){this.swipeType==="continuous"&&this.onEvent("swipe",this,s=>{this.querySelector(`[slot="action-${s.detail.direction==="left"?"right":"left"}"`)?.click()},{scrollContainer:this.container,passive:!0}),this.swipeType==="reveal"&&(this.onEvent("click",this.leftButton,()=>{this.container&&(this.container.scrollLeft=85)}),this.onEvent("click",this.rightButton,()=>{this.container&&(this.container.scrollLeft=85)}))}set swipeType(s){if(s==="continuous"){this.setAttribute(t.SWIPE_TYPE,s),this.container?.classList.add("continuous");return}this.removeAttribute(t.SWIPE_TYPE),this.container?.classList.remove("continuous")}get swipeType(){return this.getAttribute(t.SWIPE_TYPE)||"reveal"}};i=n([o("ids-swipe-action"),r(c)],i);export{i as a};
