import{e as l}from"./ids-chunk-2R6FAQUN.js";var g=["string","number","date","time"],c=2,m=class{columns=[];generateWorksheet(t,e){this.prepareColumnConfig(e);let r=this.generateHeaderRow(this.columns),s=this.generateRows(t),n=`${r}${s}`,i=this.generateColWidths(this.columns),a=l.replace("{sheetDataPlaceholder}",n);return a=a.replace("{colPlaceholder}",i),a}prepareColumnConfig(t){t&&(this.columns=t.map((e,r)=>({...e,refLetter:this.generateColumnLetter(r),width:e.name.length+c})))}generateColWidths(t){return t.reduce((e,r,s)=>{let n=s+1,i=r.width,a=`<col min="${n}" max="${n}" width="${i}" bestFit="1" customWidth="1" />`;return`${e}${a}`},"")}generateColumnLetter(t){if(typeof t!="number")return"";let e=Math.floor(t/26),r=String.fromCharCode(97+t%26).toUpperCase();return e===0?r:this.generateColumnLetter(e-1)+r}escapeExcelString(t){let e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};return t.replace(/[&<>"']/g,r=>e[r])}formatStringCell(t,e){let r=t??"";return r=this.escapeExcelString(String(r).trim()),`<c r="${e}" t="inlineStr"><is><t>${r}</t></is></c>`}formatTypedCell(t,e,r){return r==="date"?this.formatDateCell(t,e):r==="time"?this.formatTimeCell(t,e):(t=Number.isNaN(t)?"":t,t??="",`<c r="${e}"><v>${t}</v></c>`)}createExcelDate(t){return 25569+(t.getTime()-t.getTimezoneOffset()*60*1e3)/864e5}formatTimeCell(t,e){let r=new Date(t);if(!Number.isNaN(r.getTime())){let s=this.createExcelDate(r);return`<c r="${e}" s="3"><v>${s}</v></c>`}return this.formatStringCell("",e)}formatDateCell(t,e){let r=new Date(t);if(!Number.isNaN(r.getTime())){let s=this.createExcelDate(r);return`<c r="${e}" s="2"><v>${s}</v></c>`}return this.formatStringCell("",e)}formatCell(t,e,r,s){let n=t,i=g.includes(n?.type)?n.type:"string",o=`${n.refLetter||this.generateColumnLetter(r)}${s}`,u=String(e).length+c;return n.width=Math.max(u,n.width),i==="string"&&this.canCastAsNumber(e)&&(i="number"),i==="string"?this.formatStringCell(e,o):this.formatTypedCell(e,o,i)}canCastAsNumber(t){return!!(typeof t=="number"&&!Number.isNaN(Number(t))||t?.length&&!Number.isNaN(Number(t)))}formatRow(t,e){let r=this.columns.reduce((s,n,i)=>{let a=t[n.id]||t[n.field],o=this.formatCell(n,a,i,e);return`${s}${o}`},"");return`<row r="${e}">${r}</row>`}generateHeaderRow(t){return`<row r="1">${t.reduce((r,s)=>{let n=s.refLetter,i=s.name,a=`<c r="${n}1" t="inlineStr" s="1"><is><t>${i}</t></is></c>`;return`${r}${a}`},"")}</row>`}generateRows(t){return t.reduce((e,r,s)=>{let n=s+2;return e+this.formatRow(r,n)},"")}destroy(){this.columns=[]}};export{m as a};
