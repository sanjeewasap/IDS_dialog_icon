import{a as k}from"./ids-chunk-VSDBW2YP.js";import{a as I}from"./ids-chunk-4LOG7J7O.js";import{a as A}from"./ids-chunk-ZIGY2P3N.js";import{a as $}from"./ids-chunk-T2TIUOXF.js";import{a as x}from"./ids-chunk-OIS6KGMU.js";import{a as S}from"./ids-chunk-N7RNTKMO.js";import{a as w}from"./ids-chunk-AKCO43TX.js";import{a as f,b}from"./ids-chunk-XE4WFW5M.js";import{a as T}from"./ids-chunk-GFV2Z7F5.js";import{b as v,e as d,f as y,g as E}from"./ids-chunk-QPDOZZIG.js";import{a}from"./ids-chunk-EQJWBFQ2.js";import{a as m}from"./ids-chunk-U7OOVFXE.js";var C=`
/* Ids Pie Chart Component */
.chart-legend {
  display: flex;
  padding-inline-start: 8px;
  flex-direction: row;
  margin-top: -4px;
  justify-content: flex-start;
  width: inherit;
}
.chart-legend a {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  align-items: center;
  border: 1px solid transparent;
  display: flex;
  font-family: var(--ids-font-family-default);
  font-size: var(--ids-chart-legend-font-size);
  color: var(--ids-chart-legend-color-text);
  padding-inline-start: 8px;
  padding-inline-end: 8px;
  padding-block-start: 2px;
  padding-block-end: 2px;
  text-decoration: none;
}
.chart-legend a:focus {
  outline: none;
  border-color: var(--ids-color-border-focus);
  box-shadow: var(--ids-shadow-focus);
}
.chart-legend .swatch {
  display: inline-flex;
  margin-inline-end: 8px;
  height: 12px;
  width: 12px;
}
.chart-legend .swatch.color-1 {
  background-color: var(--ids-chart-color-1);
}
.chart-legend .swatch.color-2 {
  background-color: var(--ids-chart-color-2);
}
.chart-legend .swatch.color-3 {
  background-color: var(--ids-chart-color-3);
}
.chart-legend .swatch.color-4 {
  background-color: var(--ids-chart-color-4);
}
.chart-legend .swatch.color-5 {
  background-color: var(--ids-chart-color-5);
}
.chart-legend .swatch.color-6 {
  background-color: var(--ids-chart-color-6);
}
.chart-legend .swatch.color-7 {
  background-color: var(--ids-chart-color-7);
}
.chart-legend .swatch.color-8 {
  background-color: var(--ids-chart-color-8);
}
.chart-legend .swatch.color-9 {
  background-color: var(--ids-chart-color-9);
}
.chart-legend .swatch.color-10 {
  background-color: var(--ids-chart-color-10);
}
.chart-legend .swatch.color-11 {
  background-color: var(--ids-chart-color-11);
}
.chart-legend .swatch.color-12 {
  background-color: var(--ids-chart-color-12);
}
.chart-legend .swatch.color-13 {
  background-color: var(--ids-chart-color-13);
}
.chart-legend .swatch.color-14 {
  background-color: var(--ids-chart-color-14);
}
.chart-legend .swatch.color-15 {
  background-color: var(--ids-chart-color-15);
}
.chart-legend .swatch.color-16 {
  background-color: var(--ids-chart-color-16);
}
.chart-legend .swatch.color-17 {
  background-color: var(--ids-chart-color-17);
}
.chart-legend .swatch.color-18 {
  background-color: var(--ids-chart-color-18);
}
.chart-legend .swatch.color-19 {
  background-color: var(--ids-chart-color-19);
}
.chart-legend .swatch.color-20 {
  background-color: var(--ids-chart-color-20);
}
.chart-legend .swatch.color-21 {
  background-color: var(--ids-chart-color-21);
}

.ids-chart-container {
  display: flex;
  flex-direction: column;
}
.ids-chart-container.legend-top {
  margin-block-end: 8px;
  flex-direction: column-reverse;
}
.ids-chart-container.legend-top .chart-legend {
  margin-inline-start: 0;
  justify-content: end;
}
.ids-chart-container.legend-right, .ids-chart-container.legend-left {
  flex-direction: row;
}
.ids-chart-container.legend-right .chart-legend, .ids-chart-container.legend-left .chart-legend {
  margin-inline-start: 0;
  flex-direction: column;
  justify-content: center;
}
.ids-chart-container.legend-right .chart-legend a, .ids-chart-container.legend-left .chart-legend a {
  margin-block-end: 8px;
  width: max-content;
}
.ids-chart-container.legend-left {
  flex-direction: row-reverse;
}

.ids-chart-container {
  height: 100%;
  width: 100%;
}
.ids-chart-container.empty {
  flex-direction: column;
}
.ids-chart-container .dot {
  border-color: transparent;
  border-style: solid;
  border-radius: 50%;
  display: inline-block;
  border-width: var(--ids-pie-chart-tooltip-dot-size, 0);
  position: absolute;
  height: 0;
  width: 0;
}

.ids-pie-chart {
  margin-block-end: var(--ids-space-50);
  height: 100%;
  width: 100%;
}
.ids-pie-chart .slice.color-1:not([fill]) {
  stroke: var(--ids-chart-color-1);
}
.ids-pie-chart .slice.color-2:not([fill]) {
  stroke: var(--ids-chart-color-2);
}
.ids-pie-chart .slice.color-3:not([fill]) {
  stroke: var(--ids-chart-color-3);
}
.ids-pie-chart .slice.color-4:not([fill]) {
  stroke: var(--ids-chart-color-4);
}
.ids-pie-chart .slice.color-5:not([fill]) {
  stroke: var(--ids-chart-color-5);
}
.ids-pie-chart .slice.color-6:not([fill]) {
  stroke: var(--ids-chart-color-6);
}
.ids-pie-chart .slice.color-7:not([fill]) {
  stroke: var(--ids-chart-color-7);
}
.ids-pie-chart .slice.color-8:not([fill]) {
  stroke: var(--ids-chart-color-8);
}
.ids-pie-chart .slice.color-9:not([fill]) {
  stroke: var(--ids-chart-color-9);
}
.ids-pie-chart .slice.color-10:not([fill]) {
  stroke: var(--ids-chart-color-10);
}
.ids-pie-chart .slice.color-11:not([fill]) {
  stroke: var(--ids-chart-color-11);
}
.ids-pie-chart .slice.color-12:not([fill]) {
  stroke: var(--ids-chart-color-12);
}
.ids-pie-chart .slice.color-13:not([fill]) {
  stroke: var(--ids-chart-color-13);
}
.ids-pie-chart .slice.color-14:not([fill]) {
  stroke: var(--ids-chart-color-14);
}
.ids-pie-chart .slice.color-15:not([fill]) {
  stroke: var(--ids-chart-color-15);
}
.ids-pie-chart .slice.color-16:not([fill]) {
  stroke: var(--ids-chart-color-16);
}
.ids-pie-chart .slice.color-17:not([fill]) {
  stroke: var(--ids-chart-color-17);
}
.ids-pie-chart .slice.color-18:not([fill]) {
  stroke: var(--ids-chart-color-18);
}
.ids-pie-chart .slice.color-19:not([fill]) {
  stroke: var(--ids-chart-color-19);
}
.ids-pie-chart .slice.color-20:not([fill]) {
  stroke: var(--ids-chart-color-20);
}
.ids-pie-chart .slice.color-21:not([fill]) {
  stroke: var(--ids-chart-color-21);
}
.ids-pie-chart.hidden {
  display: none;
}
.ids-pie-chart.selectable .audible {
  font-size: 1px;
}
.ids-pie-chart.selectable .slice {
  cursor: pointer;
}
.ids-pie-chart.selectable .slice[selected] {
  opacity: 1;
}
.ids-pie-chart.selectable .slice.not-selected {
  opacity: 0.5;
}

.slice {
  outline: none;
  fill-opacity: 0;
}

.donut-text {
  font-family: var(--ids-chart-pie-font-family);
  font-size: var(--ids-chart-pie-font-size);
  fill: var(--ids-chart-pie-color-text);
  text-anchor: middle;
}

.donut-hole {
  pointer-events: none;
}

.audible {
  opacity: 0;
  fill-opacity: 0;
}

.chart-legend {
  justify-content: center;
}`;var H=k(I(S(w(T)))),h=class extends H{initialized=!1;constructor(){super(),this.state||(this.state={}),this.DEFAULT_SELECTABLE=!1}svg;svgContainer;emptyMessage;legend;percents=[];totals=0;datasource=new x;vetoableEventTypes=["beforeselected","beforedeselected"];connectedCallback(){super.connectedCallback?.(),this.legendPlacement="right",this.svg=this.shadowRoot?.querySelector("svg"),this.svgContainer=this.shadowRoot?.querySelector(".ids-chart-svg-container"),this.emptyMessage=this.querySelector("ids-empty-message")||this.shadowRoot?.querySelector("ids-empty-message"),this.legend=this.shadowRoot?.querySelector('[name="legend"]'),this.redraw(),this.legendsClickable?.(this.selectable)}onSelectableChange(){this.legendsClickable?.(this.selectable)}redraw(){if(this.initialized){if(this.data&&this.data.length===0&&this.initialized){this.#p();return}this.#i(),this.#l(),this.#o(),this.legend&&(this.legend.innerHTML=this.legendTemplate()),this.svg&&(this.svg.innerHTML=this.chartTemplate()),this.#d(),this.#f(),this.triggerEvent("rendered",this,{detail:{svg:this.svg,data:this.data}})}}static get attributes(){return[...super.attributes,a.ANIMATED,a.DATA,a.DONUT,a.DONUT_TEXT,a.HEIGHT,a.SUPPRESS_TOOLTIPS,a.TITLE,a.WIDTH]}template(){return`<div class="ids-chart-container" part="container">
      <div class="ids-chart-svg-container">
        <svg class="ids-pie-chart" part="chart"${this.width?` width="${this.width}"`:""}${this.height?` height="${this.height}"`:""} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ${this.viewBoxSize} ${this.viewBoxSize}">
        </svg>
      </div>
      <slot name="legend">
      </slot>
      <slot name="empty-message">
        <ids-empty-message icon="empty-no-data" hidden>
          <ids-text type="h2" font-size="20" label="true" slot="label">${this.localeAPI?.translate("NoData")||"No Data Available"}</ids-text>
        </ids-empty-message>
      </slot>
      <slot name="tooltip">
        <ids-tooltip id="tooltip"></ids-tooltip>
      </slot>
    </div>`}onLocaleChange=()=>{this.redraw();let t=this.shadowRoot?.querySelector("ids-empty-message ids-text");t&&(t.textContent=this.localeAPI?.translate("NoData"))};onLanguageChange=()=>{let t=this.shadowRoot?.querySelector("ids-empty-message ids-text");t&&(t.textContent=this.localeAPI?.translate("NoData"))};#i(){this.totals=0,this.percents=[];let t=this.data[0].data;t?.forEach(e=>{this.totals+=e.value||0}),t?.forEach(e=>{let r=(e.value||0)/this.totals*100;this.percents.push({total:r,rounded:Math.round(r)})})}legendTemplate(){let t='<div class="chart-legend">';return this.data[0].data?.forEach((e,r)=>{let i=e.pattern?"":` color-${r+1}`,o=e.pattern?`<svg width="12" height="12" xmlns="http://www.w3.org/2000/svg"><rect width="12" height="12" fill="url(#${e.pattern})"></rect></svg>`:"",s=`${e.name} (${this.percents[r].rounded}${this.localeAPI?.numbers().percentSign||"%"})`;typeof this.legendFormatter=="function"&&(s=this.legendFormatter(e,this.percents[r],this)),t+=`<a href="#legend-${v(e.name||r)}" data-index="${r}" class="chart-legend-item">
        <div class="swatch${i}">${o}</div>
        ${s}
        </a>`}),t+="</div>",t}set legendFormatter(t){this.state.legendFormatter=t,this.redraw()}get legendFormatter(){return this.state.legendFormatter}#o(){let t="";if(!this.shadowRoot?.styleSheets)return;this.data[0].data?.forEach((i,o)=>{let s=i,l=s.patternColor;!l&&s.color&&s.color.substr(0,1)==="#"&&(l=s.color),!l&&s.color&&s.color.substr(0,1)!=="#"&&s.color.substr(0,11)!=="--ids-color"&&(l=`var(--ids-color-${s.color})`),!l&&s.color&&s.color.substr(0,1)!=="#"&&s.color.substr(0,11)==="--ids-color"&&(l=`var(${s.color})`),l||(l=`var(${this.colors[o]})`),t+=`--ids-chart-color-${o+1}: ${l} !important;`});let r=this.shadowRoot.styleSheets[0];r.cssRules&&r.cssRules[0].selectorText===":host"&&r.deleteRule(0),r.insertRule(`:host {
      ${t}
    }`)}chartTemplate(){let t="",e=0,r=this.donut?40:25,i=this.donut?15:50,o=this.viewBoxSize/2,s=this.viewBoxSize/2;return this.percents.forEach((l,n)=>{let c=2*Math.PI*r,p=c-c*l.total/100,P=e*360/100+-90,g=this.data[0].data,D=g?.[n].pattern?"":` color-${n+1}`,M=g?.[n].pattern?`url(#${g?.[n].pattern})`:this.color(n);if(t+=`<g role="listitem">
        <circle class="slice${D}" part="circle" stroke="${M}" stroke-width="${i}" index="${n}" percent="${l.total}" r="${r}" cx="${o}" cy="${s}" stroke-dasharray="${c}" stroke-dashoffset="${this.animated?c:p}" transform="rotate(${P} ${o} ${s})" pointer-events="stroke"></circle>
        <text class="audible">${g?.[n].name}  ${l.rounded}%</text>
        </g>`,e+=l.total,this.animated){let L=380*l.total/100,N=380*e/100;requestAnimationFrame(()=>{this.container?.querySelector(`circle.slice[index="${n}"]`)?.style.setProperty("transition",`stroke-dashoffset ${L}ms cubic-bezier(0.17, 0.04, 0.03, 0.94) ${N}ms`),requestAnimationFrame(()=>{this.container?.querySelector(`circle.slice[index="${n}"]`)?.setAttribute("stroke-dashoffset",String(p))})})}}),`<title></title>
      <title>${this.title}</title>
      <defs>
        ${this.#a()}
      </defs>
      <g role="list">
        ${t}
      </g>
      <circle class="donut-hole" r="${r}" cx="${o}" cy="${s}" fill="transparent" stroke-width="0"></circle>
      <text class="donut-text" x="50%" y="50%" dy=".3em">${this.donutText}</text>
      `}#a(){let t="";return this.data[0].data?.forEach((e,r)=>{let i=$[e.pattern];if(i){let o=`${this.color(r)}`;i=i.replace('fill="#000000"',`fill="${o}"`),t+=i}}),t}get viewBoxSize(){return 100}get selectionElements(){return this.selectable?[...this.container?.querySelectorAll(".slice")??[]]:[]}tooltipElements(){return[...this.container?.querySelectorAll(".slice")??[]]}tooltipTemplate(){return"<b>${label}</b> ${value}"}#s(t){return t*(Math.PI/180)}#t=[];#l(){this.#t=[];let t=this.totals,e=this.#s(-90);this.data?.[0]?.data?.forEach(r=>{let i=r.value/t*Math.PI*2+e,o=(e+i)/2;this.#t.push({startAngle:e,midAngle:o,endAngle:i}),e=i})}#n(t,e=0){let r=this.svg?.clientWidth??NaN,i=this.svg?.clientHeight??NaN,o=Math.min(r,i)/2-(this.donut?8:0),{x:s,y:l}=this.svgContainer?.getBoundingClientRect()??{x:NaN,y:NaN},n=r/2+s-this.#r,u=i/2+l-this.#r,{midAngle:c}=this.#t[t];return{x:n+Math.cos(c)*(o+e),y:u+Math.sin(c)*(o+e),midAngle:c}}#r=2;#e=[];#c(){if(this.#e=[...this.svgContainer?.parentElement?.querySelectorAll("#dots .dot")??[]],!this.#e.length){let t=`<div id="dots">${this.#t.map(()=>'<span class="dot"></span>').join("")}`;this.svgContainer?.parentElement?.insertAdjacentHTML("beforeend",t),this.#e=[...this.svgContainer?.parentElement?.querySelectorAll("#dots .dot")??[]]}this.#e.forEach((t,e)=>{let{x:r,y:i}=this.#n(e);t.style.setProperty("--ids-pie-chart-tooltip-dot-size",`${this.#r}px`),t.style.setProperty("left",`${r}px`),t.style.setProperty("top",`${i}px`)})}#d(){if(this.suppressTooltips)return;let t=this.svgContainer?.parentElement?.querySelector("ids-tooltip");this.tooltipElements().forEach((e,r)=>{this.onEvent("hoverend",e,async()=>{t&&(t.innerHTML=this.#u(e),t.target=e),this.#g(t,r)})})}#h(){this.tooltipElements().forEach(t=>{this.offEvent("hoverend",t)})}#g(t,e){this.#c(),t.popup.alignTarget=this.#e[e];let{midAngle:r}=this.#t[e],i=r+this.#s(90),o=Math.PI/4,s=null;i<=o&&i>=0||i>7*o?s="top":i<=3*o&&i>=o?s="right":i<=5*o&&i>=3*o?s="bottom":i<=7*o&&i>=5*o&&(s="left"),t.placement=s,t.visible=!0}tooltipData(t){let e=this.data[0].data[t];return{label:e.name,value:e.value||0,tooltip:e.tooltip,total:this.percents[t].total,rounded:this.percents[t].rounded}}#u(t){let e=Number(t.getAttribute("index")),r=this.tooltipData(e);return r.tooltip?r.tooltip.replace("${value}",r.value).replace("${label}",r.label).replace("${percent}",r.rounded):E(this.tooltipTemplate(),r)}#p(){this.svg?.classList.add("hidden"),this.svgContainer?.parentElement?.classList.add("empty"),this.emptyMessage?.style.setProperty("height",`${this.height}px`),this.emptyMessage?.removeAttribute("hidden")}#m(){this.svg?.classList.remove("hidden"),this.svgContainer?.parentElement?.classList.remove("empty"),this.emptyMessage?.style.setProperty("height",""),this.emptyMessage?.setAttribute("hidden","")}#f(){if(!this.initialized||!this.selectable||!this.data?.length||!this.selectionElements?.length)return;let t=this.data[0]?.data?.findIndex(e=>e.selected);if(typeof t=="number"&&t>-1){let e=this.selectionElements[t];if(!e)return;this.selectionElements.forEach(r=>{r===e?r.setAttribute("selected",""):r.classList.add("not-selected")})}}getSelected(){let t=this.selectionElements.filter(i=>i.hasAttribute("selected"))[0];if(!t)return{};let e=t.getAttribute("index"),r=this.data[0].data?.[e];return{slice:t,index:e,data:r}}setSelected(t){if(!this.initialized||!this.selectable||!this.data?.length||!this.selectionElements?.length)return;let e=y(t.index);Number.isNaN(e)||this.setSelection(e)}setSelection(t){let e=this.selectionElements?.[t];if(!e)return!1;let r,i=(s,l)=>(r=this.data[0].data?.[l],this.triggerVetoableEvent("beforedeselected",{slice:s,index:l,data:r})?(r&&delete r.selected,this.selectionElements.forEach(n=>n.classList.remove("not-selected")),s.removeAttribute("selected"),this.triggerEvent("deselected",this,{bubbles:!0,detail:{elem:this,slice:s,index:l,data:r}}),!0):!1),o=this.selectionElements.findIndex(s=>s.hasAttribute("selected"));if(o>-1){if(`${o}`==`${t}`)return i(e,o);if(!i(this.selectionElements[o],o))return!1}return r=this.data[0].data?.[t],this.triggerVetoableEvent("beforeselected",{slice:e,index:t,data:r})?(this.selectionElements.forEach(s=>{s===e?s.setAttribute("selected",""):s.classList.add("not-selected")}),r&&(r.selected=!0),this.triggerEvent("selected",this,{bubbles:!0,detail:{elem:this,slice:e,index:t,data:r}}),!0):!1}onTitleChange(t){let e=this.container?.querySelectorAll(a.TITLE);e&&e?.length>1&&(e[1].textContent=t)}set donut(t){this.setAttribute(a.DONUT,String(t)),this.redraw()}get donut(){return d(this.getAttribute(a.DONUT))||!1}set donutText(t){this.setAttribute(a.DONUT_TEXT,t);let e=this.container?.querySelector(".donut-text");e&&(e.innerHTML=t)}get donutText(){return this.getAttribute(a.DONUT_TEXT)||""}set height(t){this.setAttribute(a.HEIGHT,String(t)),this.svg?.setAttribute(a.HEIGHT,String(t)),this.redraw()}get height(){let t=this.getAttribute(a.HEIGHT);return t?parseFloat(t):""}set width(t){this.setAttribute(a.WIDTH,String(t)),this.svg?.setAttribute(a.WIDTH,String(t)),this.redraw()}get width(){let t=this.getAttribute(a.WIDTH);return t?parseFloat(t):""}set data(t){if(t){this.#m(),this.datasource.data=t,this.initialized=!0,this.redraw();return}this.datasource.data=[]}get data(){return this?.datasource?.data||[]}get colors(){return A}color(t){return`var(${this.data[0].data?.[t].color?`color-${t+1}`:this.colors[t]})`}set animated(t){this.setAttribute(a.ANIMATED,String(t)),this.redraw()}get animated(){return this.getAttribute(a.ANIMATED)===null?!0:d(this.getAttribute(a.ANIMATED))}set suppressTooltips(t){this.setAttribute(a.SUPPRESS_TOOLTIPS,String(t)),d(this.getAttribute(a.SUPPRESS_TOOLTIPS))&&this.#h(),this.redraw()}get suppressTooltips(){return this.getAttribute(a.SUPPRESS_TOOLTIPS)===null?!1:d(this.getAttribute(a.SUPPRESS_TOOLTIPS))}};h=m([f("ids-pie-chart"),b(C)],h);export{h as a};
