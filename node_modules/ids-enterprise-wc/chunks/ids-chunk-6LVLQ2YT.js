import{a as n,b as f}from"./ids-chunk-XE4WFW5M.js";import{a}from"./ids-chunk-GFV2Z7F5.js";import{f as r}from"./ids-chunk-QPDOZZIG.js";import{a as e}from"./ids-chunk-EQJWBFQ2.js";import{a as o}from"./ids-chunk-U7OOVFXE.js";var u=`
/* Ids Layout Flex Item Component */
:host([align-self=auto]),
.ids-layout-flex-item-align-self-auto {
  align-self: auto;
}

:host([align-self=baseline]),
.ids-layout-flex-item-align-self-baseline {
  align-self: baseline;
}

:host([align-self=center]),
.ids-layout-flex-item-align-self-center {
  align-self: center;
}

:host([align-self=stretch]),
.ids-layout-flex-item-align-self-stretch {
  align-self: stretch;
}

:host([align-self=flex-start]),
.ids-layout-flex-item-align-self-flex-start {
  align-self: flex-start;
}

:host([align-self=flex-end]),
.ids-layout-flex-item-align-self-flex-end {
  align-self: flex-end;
}

:host([grow="0"]),
.ids-layout-flex-item-grow-0 {
  flex-grow: 0;
}

:host([grow="1"]),
.ids-layout-flex-item-grow-1 {
  flex-grow: 1;
}

:host([shrink="0"]),
.ids-layout-flex-item-shrink-0 {
  flex-shrink: 0;
}

:host([shrink="1"]),
.ids-layout-flex-item-shrink-1 {
  flex-shrink: 1;
}

:host([overflow=auto]) {
  overflow: auto;
}

:host([overflow=hidden]) {
  overflow: hidden;
}

:host([overflow=visible]) {
  overflow: visible;
}

:host([overflow=scroll]) {
  overflow: scroll;
}`;var i={alignSelf:["auto","baseline","center","stretch","flex-start","flex-end"],grow:[0,1],overflow:["auto","hidden","visible","scroll"],shrink:[0,1]},s=class extends a{constructor(){super()}static get attributes(){return[...super.attributes,e.ALIGN_SELF,e.GROW,e.SHRINK]}connectedCallback(){super.connectedCallback()}template(){return"<slot></slot>"}set alignSelf(t){t&&i.alignSelf.includes(t)?this.setAttribute(e.ALIGN_SELF,t):this.removeAttribute(e.ALIGN_SELF)}get alignSelf(){return this.getAttribute(e.ALIGN_SELF)}set grow(t){let l=r(t);!Number.isNaN(l)&&i.grow.includes(l)?this.setAttribute(e.GROW,String(l)):this.removeAttribute(e.GROW)}get grow(){return this.getAttribute(e.GROW)}set shrink(t){let l=r(t);!Number.isNaN(l)&&i.shrink.includes(l)?this.setAttribute(e.SHRINK,String(l)):this.removeAttribute(e.SHRINK)}get shrink(){return this.getAttribute(e.SHRINK)}set overflow(t){t&&i.overflow.includes(t)?this.setAttribute(e.OVERFLOW,t):this.removeAttribute(e.OVERFLOW)}get overflow(){return this.getAttribute(e.OVERFLOW)}};s=o([n("ids-layout-flex-item"),f(u)],s);export{i as a,s as b};
