import{a as f}from"./ids-chunk-LCCMDCGB.js";import{a as k,b as u}from"./ids-chunk-XE4WFW5M.js";import{e as g,f as m}from"./ids-chunk-QPDOZZIG.js";import{a as h}from"./ids-chunk-EQJWBFQ2.js";import{a as x}from"./ids-chunk-U7OOVFXE.js";var b=`
/* Ids Line Chart Component */ /* Ids Axis Chart Component */
.chart-legend {
  display: flex;
  padding-inline-start: 8px;
  flex-direction: row;
  margin-top: -4px;
  justify-content: flex-start;
  width: inherit;
}
.chart-legend a {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  align-items: center;
  border: 1px solid transparent;
  display: flex;
  font-family: var(--ids-font-family-default);
  font-size: var(--ids-chart-legend-font-size);
  color: var(--ids-chart-legend-color-text);
  padding-inline-start: 8px;
  padding-inline-end: 8px;
  padding-block-start: 2px;
  padding-block-end: 2px;
  text-decoration: none;
}
.chart-legend a:focus {
  outline: none;
  border-color: var(--ids-color-border-focus);
  box-shadow: var(--ids-shadow-focus);
}
.chart-legend .swatch {
  display: inline-flex;
  margin-inline-end: 8px;
  height: 12px;
  width: 12px;
}
.chart-legend .swatch.color-1 {
  background-color: var(--ids-chart-color-1);
}
.chart-legend .swatch.color-2 {
  background-color: var(--ids-chart-color-2);
}
.chart-legend .swatch.color-3 {
  background-color: var(--ids-chart-color-3);
}
.chart-legend .swatch.color-4 {
  background-color: var(--ids-chart-color-4);
}
.chart-legend .swatch.color-5 {
  background-color: var(--ids-chart-color-5);
}
.chart-legend .swatch.color-6 {
  background-color: var(--ids-chart-color-6);
}
.chart-legend .swatch.color-7 {
  background-color: var(--ids-chart-color-7);
}
.chart-legend .swatch.color-8 {
  background-color: var(--ids-chart-color-8);
}
.chart-legend .swatch.color-9 {
  background-color: var(--ids-chart-color-9);
}
.chart-legend .swatch.color-10 {
  background-color: var(--ids-chart-color-10);
}
.chart-legend .swatch.color-11 {
  background-color: var(--ids-chart-color-11);
}
.chart-legend .swatch.color-12 {
  background-color: var(--ids-chart-color-12);
}
.chart-legend .swatch.color-13 {
  background-color: var(--ids-chart-color-13);
}
.chart-legend .swatch.color-14 {
  background-color: var(--ids-chart-color-14);
}
.chart-legend .swatch.color-15 {
  background-color: var(--ids-chart-color-15);
}
.chart-legend .swatch.color-16 {
  background-color: var(--ids-chart-color-16);
}
.chart-legend .swatch.color-17 {
  background-color: var(--ids-chart-color-17);
}
.chart-legend .swatch.color-18 {
  background-color: var(--ids-chart-color-18);
}
.chart-legend .swatch.color-19 {
  background-color: var(--ids-chart-color-19);
}
.chart-legend .swatch.color-20 {
  background-color: var(--ids-chart-color-20);
}
.chart-legend .swatch.color-21 {
  background-color: var(--ids-chart-color-21);
}

.ids-chart-container {
  display: flex;
  flex-direction: column;
}
.ids-chart-container.legend-top {
  margin-block-end: 8px;
  flex-direction: column-reverse;
}
.ids-chart-container.legend-top .chart-legend {
  margin-inline-start: 0;
  justify-content: end;
}
.ids-chart-container.legend-right, .ids-chart-container.legend-left {
  flex-direction: row;
}
.ids-chart-container.legend-right .chart-legend, .ids-chart-container.legend-left .chart-legend {
  margin-inline-start: 0;
  flex-direction: column;
  justify-content: center;
}
.ids-chart-container.legend-right .chart-legend a, .ids-chart-container.legend-left .chart-legend a {
  margin-block-end: 8px;
  width: max-content;
}
.ids-chart-container.legend-left {
  flex-direction: row-reverse;
}

.ids-axis-chart {
  display: flex;
}
.ids-axis-chart.hidden {
  display: none;
}
.ids-axis-chart .grid {
  shape-rendering: crispedges;
  stroke: var(--ids-axis-chart-grid-color);
  stroke-width: 1;
  stroke-dasharray: 2 2;
}
.ids-axis-chart .grid.horizontal-lines line:last-child {
  stroke: var(--ids-axis-chart-last-line-color-border);
  stroke-dasharray: none;
}
.ids-axis-chart .grid.hidden {
  stroke-width: 0;
}
.ids-axis-chart.horizontal .grid.horizontal-lines line:last-child {
  stroke: inherit;
  stroke-dasharray: inherit;
}
.ids-axis-chart.horizontal .grid.vertical-lines line:first-child {
  stroke: var(--ids-axis-chart-first-line-color);
  stroke-dasharray: none;
}
.ids-axis-chart g[tabindex="0"]:focus {
  outline: var(--ids-axis-chart-outline-focus);
}
.ids-axis-chart .labels {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: var(--ids-axis-chart-font-family);
  font-size: var(--ids-axis-chart-font-size);
}
.ids-axis-chart .labels text {
  fill: var(--ids-axis-chart-color-text);
}
.ids-axis-chart .labels.x-labels {
  text-anchor: middle;
}
.ids-axis-chart .labels.y-labels {
  text-anchor: end;
}
.ids-axis-chart .labels.axis-labels text {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: var(--ids-axis-chart-font-weight);
  text-anchor: middle;
}
.ids-axis-chart .audible {
  opacity: 0;
}

.ids-chart-container.selectable .audible {
  font-size: 1px;
}

ids-empty-message:not([hidden]),
::slotted(ids-empty-message:not([hidden])) {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}
ids-empty-message:not([hidden])[hidden],
::slotted(ids-empty-message:not([hidden]))[hidden] {
  display: none;
}

.tooltip-center {
  margin-block: var(--ids-space-30);
  text-align: center;
}

.tooltip.chart-legend {
  flex-direction: column;
  margin-block-end: var(--ids-space-40);
  padding: 0;
}
.tooltip.chart-legend .swatch {
  margin-inline: var(--ids-space-30);
  padding: 0;
}

.tooltip-row span {
  padding-inline-start: var(--ids-space-20);
  padding-inline-end: var(--ids-space-30);
}

:host([dir=rtl]) .ids-axis-chart {
  transform: scale(-1, 1);
}
:host([dir=rtl]) .ids-axis-chart:not(.horizontal) .labels.y-labels text {
  transform: scale(-1, 1) translate(var(--ids-axis-chart-ylabels-x, -45px), 0);
}
:host([dir=rtl]) .labels.x-labels {
  transform: scale(-1, 1);
  transform-origin: unset;
}

.ids-axis-chart .markers circle {
  stroke-width: var(--ids-space-40);
  stroke: transparent;
}
.ids-axis-chart .markers circle.color-1 {
  fill: var(--ids-chart-color-1);
}
.ids-axis-chart .markers circle.color-2 {
  fill: var(--ids-chart-color-2);
}
.ids-axis-chart .markers circle.color-3 {
  fill: var(--ids-chart-color-3);
}
.ids-axis-chart .markers circle.color-4 {
  fill: var(--ids-chart-color-4);
}
.ids-axis-chart .markers circle.color-5 {
  fill: var(--ids-chart-color-5);
}
.ids-axis-chart .markers circle.color-6 {
  fill: var(--ids-chart-color-6);
}
.ids-axis-chart .markers circle.color-7 {
  fill: var(--ids-chart-color-7);
}
.ids-axis-chart .markers circle.color-8 {
  fill: var(--ids-chart-color-8);
}
.ids-axis-chart .markers circle.color-9 {
  fill: var(--ids-chart-color-9);
}
.ids-axis-chart .markers circle.color-10 {
  fill: var(--ids-chart-color-10);
}
.ids-axis-chart .markers circle.color-11 {
  fill: var(--ids-chart-color-11);
}
.ids-axis-chart .markers circle.color-12 {
  fill: var(--ids-chart-color-12);
}
.ids-axis-chart .markers circle.color-13 {
  fill: var(--ids-chart-color-13);
}
.ids-axis-chart .markers circle.color-14 {
  fill: var(--ids-chart-color-14);
}
.ids-axis-chart .markers circle.color-15 {
  fill: var(--ids-chart-color-15);
}
.ids-axis-chart .markers circle.color-16 {
  fill: var(--ids-chart-color-16);
}
.ids-axis-chart .markers circle.color-17 {
  fill: var(--ids-chart-color-17);
}
.ids-axis-chart .markers circle.color-18 {
  fill: var(--ids-chart-color-18);
}
.ids-axis-chart .markers circle.color-19 {
  fill: var(--ids-chart-color-19);
}
.ids-axis-chart .markers circle.color-20 {
  fill: var(--ids-chart-color-20);
}
.ids-axis-chart .markers circle.color-21 {
  fill: var(--ids-chart-color-21);
}
.ids-axis-chart .marker-lines {
  fill: none;
  stroke-width: var(--ids-space-20);
}
.ids-axis-chart .marker-lines .data-line.color-1 {
  stroke: var(--ids-chart-color-1);
}
.ids-axis-chart .marker-lines .data-line.color-2 {
  stroke: var(--ids-chart-color-2);
}
.ids-axis-chart .marker-lines .data-line.color-3 {
  stroke: var(--ids-chart-color-3);
}
.ids-axis-chart .marker-lines .data-line.color-4 {
  stroke: var(--ids-chart-color-4);
}
.ids-axis-chart .marker-lines .data-line.color-5 {
  stroke: var(--ids-chart-color-5);
}
.ids-axis-chart .marker-lines .data-line.color-6 {
  stroke: var(--ids-chart-color-6);
}
.ids-axis-chart .marker-lines .data-line.color-7 {
  stroke: var(--ids-chart-color-7);
}
.ids-axis-chart .marker-lines .data-line.color-8 {
  stroke: var(--ids-chart-color-8);
}
.ids-axis-chart .marker-lines .data-line.color-9 {
  stroke: var(--ids-chart-color-9);
}
.ids-axis-chart .marker-lines .data-line.color-10 {
  stroke: var(--ids-chart-color-10);
}
.ids-axis-chart .marker-lines .data-line.color-11 {
  stroke: var(--ids-chart-color-11);
}
.ids-axis-chart .marker-lines .data-line.color-12 {
  stroke: var(--ids-chart-color-12);
}
.ids-axis-chart .marker-lines .data-line.color-13 {
  stroke: var(--ids-chart-color-13);
}
.ids-axis-chart .marker-lines .data-line.color-14 {
  stroke: var(--ids-chart-color-14);
}
.ids-axis-chart .marker-lines .data-line.color-15 {
  stroke: var(--ids-chart-color-15);
}
.ids-axis-chart .marker-lines .data-line.color-16 {
  stroke: var(--ids-chart-color-16);
}
.ids-axis-chart .marker-lines .data-line.color-17 {
  stroke: var(--ids-chart-color-17);
}
.ids-axis-chart .marker-lines .data-line.color-18 {
  stroke: var(--ids-chart-color-18);
}
.ids-axis-chart .marker-lines .data-line.color-19 {
  stroke: var(--ids-chart-color-19);
}
.ids-axis-chart .marker-lines .data-line.color-20 {
  stroke: var(--ids-chart-color-20);
}
.ids-axis-chart .marker-lines .data-line.color-21 {
  stroke: var(--ids-chart-color-21);
}
.ids-axis-chart .markers [part=marker],
.ids-axis-chart .marker-lines [part=line] {
  outline: none;
}

.ids-chart-container.selectable .ids-axis-chart .markers [part=marker],
.ids-chart-container.selectable .ids-axis-chart .marker-lines [part=line] {
  cursor: var(--ids-cursor-pointer);
}
.ids-chart-container.selectable .ids-axis-chart .markers [part=marker].selected, .ids-chart-container.selectable .ids-axis-chart .markers [part=marker][selected],
.ids-chart-container.selectable .ids-axis-chart .marker-lines [part=line].selected,
.ids-chart-container.selectable .ids-axis-chart .marker-lines [part=line][selected] {
  opacity: 1;
}
.ids-chart-container.selectable .ids-axis-chart .markers [part=marker].not-selected,
.ids-chart-container.selectable .ids-axis-chart .marker-lines [part=line].not-selected {
  opacity: 0.35;
}

@keyframes animate-line {
  to {
    stroke-dashoffset: 0;
  }
}`;var d=class extends f{constructor(){super(),this.DEFAULT_SELECTABLE=!1}static get attributes(){return[...super.attributes,h.MARKER_SIZE]}afterConnectedCallback(){this.#e(),this.attachTooltipEvents()}chartTemplate(){return`<g class="marker-lines">
      ${this.lineMarkers().lines}
    </g>
    <g class="markers">
      ${this.lineMarkers().markers}
    </g>`}#e(){if(!this.initialized||!this.selectable||!this.data?.length||!this.selectionElements?.length)return;let t=this.data.findIndex(e=>e.selected),i=e=>typeof e=="number"&&e>-1;if(i(t)){this.selectionElements.forEach(e=>{e.getAttribute("group-index")===`${t}`?(e.getAttribute("part")==="line"&&e.setAttribute("selected",""),e.classList.add("selected")):e.classList.add("not-selected")});return}let a={};for(let e=0,s=this.data.length;e<s&&(a.index=this.data[e].data?.findIndex(n=>n.selected),a.gIndex=e,!i(a.index));e++);i(a.index)&&this.selectionElements.forEach(e=>{e.getAttribute("group-index")===`${a.gIndex}`?(e.getAttribute("part")==="marker"&&e.getAttribute("index")===`${a.index}`&&e.setAttribute("selected",""),e.classList.add("selected")):e.classList.add("not-selected")})}getSelected(){let t=this.selectionElements.filter(s=>s.hasAttribute("selected"))[0];if(!t)return{};let i=t.getAttribute("group-index"),a=t.getAttribute("index");return a===null?{data:this.data[i],groupIndex:i,selectionElem:t}:{data:this.data[i].data[a],groupIndex:i,index:a,selectionElem:t}}setSelected(t){if(!this.initialized||!this.selectable||!this.data?.length||!this.selectionElements?.length)return;let i=m(t.groupIndex),a=m(t.index);if(!Number.isNaN(i))if(Number.isNaN(a))this.setSelection(i,!0);else{let e=this.selectionElements.findIndex(s=>s.getAttribute("part")==="marker"&&s.getAttribute("group-index")===`${i}`&&s.getAttribute("index")===`${a}`);typeof e=="number"&&e>-1&&this.setSelection(e)}}setSelection(t,i){if(Number.isNaN(t)||!this.selectionElements?.[0])return!1;let a=r=>this.selectionElements.filter(c=>r(c)),e={selected:a(r=>r.hasAttribute("selected"))[0]};if(i)e.target=a(r=>r.getAttribute("group-index")===`${t}`),e.inverse=a(r=>r.getAttribute("group-index")!==`${t}`),e.targetSelect=a(r=>r.getAttribute("part")==="line"&&r.getAttribute("group-index")===`${t}`)[0];else{let r=this.selectionElements?.[t],c=r?.getAttribute("group-index");e.target=a(l=>l.getAttribute("group-index")===`${c}`),e.inverse=a(l=>l.getAttribute("group-index")!==`${c}`),e.targetSelect=r?.getAttribute("part")==="marker"?r:a(l=>l.getAttribute("part")==="line"&&l.getAttribute("group-index")===`${c}`)[0]}let s=r=>{let c=r.getAttribute("group-index"),l=r.getAttribute("index");return l===null?{data:this.data[c],groupIndex:c,selectionElem:r}:{data:this.data[c].data[l],groupIndex:c,index:l,selectionElem:r}},n=()=>{let r=s(e.selected);return this.triggerVetoableEvent("beforedeselected",r)?(this.selectionElements.forEach(c=>c.classList.remove("selected","not-selected")),delete r.data.selected,r.selectionElem.removeAttribute("selected"),this.triggerEvent("deselected",this,{bubbles:!0,detail:{elem:this,...r}}),!0):!1};if(e.selected){let r=l=>l.getAttribute("group-index");if(r(e.targetSelect)===r(e.selected))return n();if(!n())return!1}let o=s(e.targetSelect);return this.triggerVetoableEvent("beforeselected",o)?(e.targetSelect.setAttribute("selected",""),e.target.forEach(r=>r.classList.add("selected")),e.inverse.forEach(r=>r.classList.add("not-selected")),o.data.selected=!0,this.triggerEvent("selected",this,{bubbles:!0,detail:{elem:this,...o}}),!0):!1}get selectionElements(){return this.selectable?[...this.container?.querySelectorAll('.markers [part="marker"]')??[],...this.container?.querySelectorAll('.marker-lines [part="line"]')??[]]:[]}tooltipElements(){return[...this.container?.querySelectorAll(".markers circle")??[]]}lineMarkers(){let t="",i="";return this.markerData.points?.forEach((a,e)=>{let s="",n="";t+='<g class="marker-set">',a.forEach((o,r)=>{s+=`${o.left},${o.top} `,n+=`${o.left},${this.markerData.gridBottom} `,t+=`<circle part="marker" group-index="${e}" index="${r}" class="color-${e+1}" cx="${o.left}" cy="${o.top}" data-value="${o.value}" r="${this.markerSize}">
        ${g(this.animated)?`<animate attributeName="cy" ${this.cubicBezier} from="${this.markerData.gridBottom}" to="${o.top}"/>`:""}
        </circle>`}),t+="</g>",i+=`<polyline part="line" class="data-line color-${e+1}" points="${s}" stroke="var(${this.color(e)}" group-index="${e}">
      ${g(this.animated)?`<animate attributeName="points" ${this.cubicBezier} from="${n}" to="${s}" />`:""}
      </polyline>`}),{markers:t,lines:i}}set markerSize(t){this.setAttribute(h.MARKER_SIZE,String(t)),this.redraw()}get markerSize(){return parseFloat(this.getAttribute(h.MARKER_SIZE)??"")||5}};d=x([k("ids-line-chart"),u(b)],d);export{d as a};
