import{a as w}from"./ids-chunk-KA4WAP4K.js";import{a as A}from"./ids-chunk-N7RNTKMO.js";import{a as E}from"./ids-chunk-AKCO43TX.js";import{a as m,b as S}from"./ids-chunk-XE4WFW5M.js";import{a as x}from"./ids-chunk-GFV2Z7F5.js";import{e as c,f as v}from"./ids-chunk-QPDOZZIG.js";import{a}from"./ids-chunk-EQJWBFQ2.js";import{a as g}from"./ids-chunk-U7OOVFXE.js";var y=`
/* Ids Upload Advanced */
.ids-upload-advanced {
  display: block;
  margin-bottom: var(--ids-space-60);
}
.ids-upload-advanced .hidden {
  display: none;
}
.ids-upload-advanced .droparea {
  color: var(--ids-upload-advanced-color-text-default);
  background-color: var(--ids-upload-advanced-color-background-default);
  border-width: 1px;
  border-color: var(--ids-upload-advanced-color-border-default);
  position: relative;
  align-items: center;
  display: flex;
  border-radius: var(--ids-border-radius-01);
  border-style: dashed;
  flex-direction: column;
  justify-content: center;
  min-height: 80px;
  padding: 0 20px;
}
.ids-upload-advanced .droparea .icon {
  margin-bottom: 4px;
}
.ids-upload-advanced .droparea .droparea-label {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: var(--ids-upload-advanced-label-color-text);
  display: block;
  text-align: center;
  user-select: none;
}
.ids-upload-advanced .droparea .hyperlink {
  pointer-events: auto;
}
.ids-upload-advanced .droparea .hyperlink::part(link) {
  text-decoration: underline;
}
.ids-upload-advanced .droparea .file-input {
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  width: 0.1px;
  z-index: -1;
}
.ids-upload-advanced .droparea .file-input:focus ~ .droparea-label .hyperlink::part(link) {
  border: 1px solid var(--ids-upload-advanced-color-border-focus);
  box-shadow: var(--ids-upload-advanced-link-shadow-focus);
}
.ids-upload-advanced .droparea:hover {
  background-color: var(--ids-upload-advanced-color-background-hover);
  border-color: var(--ids-upload-advanced-color-border-hover);
  color: var(--ids-upload-advanced-color-text-hover);
}
.ids-upload-advanced .droparea.dragenter {
  background-color: var(--ids-upload-advanced-color-background-drag-enter);
  border-color: var(--ids-upload-advanced-color-border-drag-enter);
}
.ids-upload-advanced .toolbararea {
  height: 42px;
  opacity: 1;
}
.ids-upload-advanced .toolbararea.before-remove-transition {
  height: 8px;
  opacity: 0;
  transition: 0.3s all ease-out;
}
.ids-upload-advanced .toolbararea ~ .filesarea .ids-upload-advanced-file:first-of-type .container,
.ids-upload-advanced .toolbararea ~ .filesarea ids-upload-advanced-file:first-of-type::part(container) {
  margin-top: 0;
}
.ids-upload-advanced .toolbararea .ids-toolbar-section.align-end {
  flex: auto;
}
.ids-upload-advanced .errorarea {
  border: 1px solid transparent;
  margin-top: var(--ids-space-40);
  padding: var(--ids-space-20);
  display: none;
  border-radius: var(--ids-border-radius-01);
  border-style: dashed;
  align-items: center;
}
.ids-upload-advanced .errorarea.has-error {
  display: flex;
  border-color: var(--ids-upload-advanced-error-area-color-border-error);
}
.ids-upload-advanced .errorarea .status {
  flex-grow: 0;
  flex-shrink: 0;
}
.ids-upload-advanced .errorarea .status .ids-alert,
.ids-upload-advanced .errorarea .status ids-alert {
  display: block;
  padding: var(--ids-space-40);
  padding-bottom: var(--ids-space-30);
  margin: 0;
}
.ids-upload-advanced .errorarea .error-row {
  min-width: 0;
  flex-grow: 1;
}
.ids-upload-advanced .errorarea .error-row span {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: block;
  font-weight: var(--ids-font-weight-normal);
  margin: 0;
  font-family: var(--ids-font-family-default);
  text-overflow: ellipsis;
}
.ids-upload-advanced .errorarea .btn-close {
  padding-inline: var(--ids-space-20);
  flex-grow: 0;
  flex-shrink: 0;
}
.ids-upload-advanced .errorarea .error-data-container {
  max-height: 90px;
  overflow-y: auto;
}
.ids-upload-advanced.disabled .droparea .hyperlink {
  cursor: default;
  pointer-events: none;
}
.ids-upload-advanced.disabled .droparea,
.ids-upload-advanced.disabled .droparea.dragenter,
.ids-upload-advanced.disabled .droparea:hover {
  background-color: var(--ids-upload-advanced-color-background-disabled);
  border-color: var(--ids-upload-advanced-color-border-disabled);
  color: var(--ids-upload-advanced-color-text-disabled);
}
.ids-upload-advanced.disabled .droparea .droparea-label,
.ids-upload-advanced.disabled .droparea.dragenter .droparea-label,
.ids-upload-advanced.disabled .droparea:hover .droparea-label {
  cursor: default;
  color: var(--ids-upload-advanced-color-text-disabled);
}
.ids-upload-advanced.disabled .errorarea.has-error {
  border-color: var(--ids-upload-advanced-area-color-border-error-disabled);
  color: var(--ids-upload-advanced-color-text-error-disabled);
}`;var i=w,L=A(E(x)),p=class extends L{fileInput;droparea;files=[];xhrHeaders;send;constructor(){super()}static get attributes(){return[...super.attributes,a.ACCEPT,a.AUTO_START,a.DISABLED,a.ICON,a.ICON_SIZE,a.MAX_FILE_SIZE,a.MAX_FILES,a.MAX_FILES_IN_PROCESS,a.METHOD,a.PARAM_NAME,a.SHOW_BROWSE_LINK,a.URL]}connectedCallback(){super.connectedCallback(),this.fileInput=this.shadowRoot?.querySelector(".file-input"),this.droparea=this.shadowRoot?.querySelector(".droparea"),this.files=[],this.#e()}template(){let e=c,t=i.DEFAULTS,r=h=>h?" hidden":"",o=this.accept?` accept="${this.accept}"`:"",s=e(this.disabled)?" disabled":"",n=Number(this.maxFilesInProcess)>1?" multiple":"",l=`
      <div class="hidden">
        <slot name="text-btn-cancel">${t.textBtnCancel}</slot>
        <slot name="text-btn-cancel-all">${t.textBtnCancelAll}</slot>
        <slot name="text-btn-close-error">${t.textBtnCloseError}</slot>
        <slot name="text-btn-remove">${t.textBtnRemove}</slot>
        <slot name="text-btn-start-all">${t.textBtnStartAll}</slot>
        <slot name="text-droparea">${t.textDroparea}</slot>
        <slot name="text-droparea-with-browse">${t.textDropareaWithBrowse}</slot>
        <slot name="text-droparea-with-browse-link">${t.textDropareaWithBrowseLink}</slot>
        <slot name="text-progress-label">${t.textProgressLabel}</slot>
        <slot name="error-accept-file-type">${t.errorAcceptFileType}</slot>
        <slot name="error-max-files">${t.errorMaxFiles}</slot>
        <slot name="error-max-files-in-process">${t.errorMaxFilesInProcess}</slot>
        <slot name="error-max-file-size">${t.errorMaxFileSize}</slot>
        <slot name="error-url">${t.errorUrl}</slot>
        <slot name="error-xhr-headers">${t.errorXhrHeaders}</slot>
        <slot name="xhr-headers">${t.xhrHeaders}</slot>
      </div>`,d=`
      <div class="content">
        <div class="no-browse-link${r(this.showBrowseLinkVal)}">
          <span class="droparea-label">${this.getDropareaLabel(null)}</span>
        </div>
        <div class="has-browse-link${r(!this.showBrowseLinkVal)}">
          <label>
            <input type="file" class="file-input"${o}"${n}${s} />
            <span class="droparea-label" part="label">${this.getDropareaLabel(!0)}</span>
          </label>
        </div>
      </div>`;return`
      <div class="ids-upload-advanced${s}">
        ${l}
        <div class="droparea" part="container">
          <ids-icon icon="${this.icon}" class="icon"></ids-icon>
          ${d}
        </div>
        <div class="errorarea" part="errorarea"></div>
        <div class="filesarea" part="filesarea"></div>
      </div>`}sendByXHR(e,t){let r=new XMLHttpRequest;if(r.upload.addEventListener("progress",t.progressHandler.bind(t),!1),r.addEventListener("load",t.completeHandler.bind(t),!1),r.addEventListener("error",t.errorHandler.bind(t),!1),r.addEventListener("abort",t.abortHandler.bind(t),!1),r.open(this.method,this.url),r.setRequestHeader("param-name",this.paramName),this.xhrHeaders){let o=s=>s&&s.name!=="";this.xhrHeaders.forEach(s=>{o(s)&&r.setRequestHeader(s.name,s.value)})}r.send(e),t?.addEventListener("abort",()=>{r.abort()}),t?.addEventListener("error",()=>{r.abort(),this.setToolbar()})}setXhrHeaders(){let e=this.shadowRoot?.querySelector(".errorarea");e&&(e.innerHTML="");let t=i.slotVal(this.shadowRoot,"xhr-headers"),r=!0;try{t=JSON.parse(t.trim())}catch{r=!1}if(r)!Array.isArray(t)&&typeof t=="object"&&t.name&&t.value?this.xhrHeaders=[t]:(this.errorMessage({remove:!0}),this.xhrHeaders=t);else{let o=i.slotVal(this.shadowRoot,"error-xhr-headers");this.errorMessage({error:o,data:t.toString()}),this.xhrHeaders=null}}dispatchFileEvent(e,t,r,o){this.triggerEvent(e,this,{detail:{id:r,file:o,elem:this,error:this.getErrorValue(t.detail.error),loaded:t.detail.loaded,loadedFormatted:t.detail.loadedFormatted,nativeEvent:t.detail.nativeEvent,size:t.detail.size,sizeFormatted:t.detail.sizeFormatted,status:t.detail.status,value:t.detail.value}})}getDropareaLabel(e){let t=i.slotVal(this.shadowRoot,"text-droparea"),r=i.slotVal(this.shadowRoot,"text-droparea-with-browse"),o=i.slotVal(this.shadowRoot,"text-droparea-with-browse-link"),s="";if(!c(e))s=`<ids-text class="inline">${t}</ids-text>`;else{let n=r.split("{browseLink}");n.length===2?s=`
          <ids-text class="inline">${n[0]}</ids-text>
          <ids-hyperlink part="link" class="inline hyperlink">${o}</ids-hyperlink>
          <ids-text class="inline">${n[1]}</ids-text>`:s=n[0]}return s}setDropareaLabel(){let e=this.showBrowseLinkVal,t="hidden",r={noBrowse:".no-browse-link",hasBrowse:".has-browse-link"},o={noBrowse:this.shadowRoot?.querySelector(`${r.noBrowse} .droparea-label`),hasBrowse:this.shadowRoot?.querySelector(`${r.hasBrowse} .droparea-label`),noBrowseContainer:this.shadowRoot?.querySelector(r.noBrowse),hasBrowseContainer:this.shadowRoot?.querySelector(r.hasBrowse)};e?(o.hasBrowse&&(o.hasBrowse.innerHTML=this.getDropareaLabel(!0)),o.noBrowseContainer?.classList.add(t),o.hasBrowseContainer?.classList.remove(t)):(o.noBrowse&&(o.noBrowse.innerHTML=this.getDropareaLabel(null)),o.noBrowseContainer?.classList.remove(t),o.hasBrowseContainer?.classList.add(t))}setError(e={}){let{message:t,fileNodes:r}=e;if(t)if(r){let o=s=>{let n=/ids-upload-advanced-file/gi.test(s.nodeName)?s:s?.uiElem;n&&(typeof n.status>"u"||n.status===i.STATUS.notStarted||n.status===i.STATUS.inProcess)&&(n.error=t)};r.constructor===Array?r.forEach(s=>o(s)):o(r)}else this.errorMessage({error:t})}errorMessage(e){let{error:t,data:r,remove:o}=e,s=this.shadowRoot?.querySelector(".errorarea");if(s?.classList.remove("has-error"),s&&(s.innerHTML=""),!o){let n=this.disabled?' disabled="true"':"",l=i.slotVal(this.shadowRoot,"text-btn-close-error"),d="";r&&(d=`
          <div class="error-data-container" part="error-data-container">
            <ids-text class="error-data">${r}</ids-text>
          </div>`);let h=`
        <div class="status" part="error-status">
          <ids-alert class="errored" icon="error" part="error-status-icon"${n}></ids-alert>
        </div>
        <div class="error-row" part="error-row">
          <ids-text class="error-msg">${t}</ids-text>
          ${d}
        </div>
        <div class="btn-close">
          <ids-button id="btn-close-error" part="btn-close-error">
            <span class="audible">${l}</span>
            <ids-icon icon="close" size="xsmall"></ids-icon>
          </ids-button>
        </div>
      `;s?.classList.add("has-error"),s?.insertAdjacentHTML("afterbegin",h)}}statusFiles(e){return this.files.filter(t=>t.status===e)}setDisabled(){if(!this.shadowRoot)return;let e=this.shadowRoot.querySelector(".ids-upload-advanced"),t=this.shadowRoot.querySelector(".errorarea .status ids-alert"),r=this.shadowRoot.querySelector("ids-hyperlink"),o=[].slice.call(this.shadowRoot.querySelectorAll("ids-upload-advanced-file")),s=(l,d)=>{d?l?.setAttribute(a.DISABLED,d.toString()):l?.removeAttribute(a.DISABLED)},n=c(this.disabled);n?(s(this.fileInput,n),s(t,n),o.forEach(l=>s(l,n)),e?.classList.add(a.DISABLED),r?.setAttribute(a.DISABLED,"true")):(s(this.fileInput,null),s(t,null),o.forEach(l=>s(l,null)),e?.classList.remove(a.DISABLED),r?.removeAttribute(a.DISABLED))}getErrorValue(e){return Object.values(i.ERRORS).indexOf(e)>-1?e===i.ERRORS.errorMaxFiles?this.errorMaxFilesVal:i.slotVal(this.shadowRoot,e):e||""}validateAcceptFile(e){let t=e.name.match(/\.[^\.]*$|$/)[0],r=this.accept?.replace(/[, ]+/g,"|")?.replace(/\/\*/g,"/.*"),o=new RegExp(`^(${r})$`,"i");return!(this.accept&&!(o.test(e.type)||o.test(t)))}validation(e){let t=this.inProcess.length,r=t+this.completed.length,o={isValid:!0};return typeof this.send!="function"&&!this.url?o={isValid:!1,error:i.ERRORS.errorUrl}:r>=Number(this.maxFiles)?o={isValid:!1,error:i.ERRORS.errorMaxFiles}:t>=Number(this.maxFilesInProcess)?o={isValid:!1,error:i.ERRORS.errorMaxFilesInProcess}:this.validateAcceptFile(e)?Number(this.maxFileSize)!==i.DEFAULTS.maxFileSize&&e.size>this.maxFileSize&&(o={isValid:!1,error:i.ERRORS.errorMaxFileSize}):o={isValid:!1,error:i.ERRORS.errorAcceptFileType},o}startInProcess(e){let t=e?.status;if(typeof t>"u"||t===i.STATUS.notStarted){let{id:r,file:o,uiElem:s}=e,n={id:r,file:o,elem:this,size:o.size,sizeFormatted:i.formatBytes(v(o.size)),status:i.STATUS.inProcess,value:"0"};e.status=i.STATUS.inProcess,s.status=i.STATUS.inProcess;let l=new FormData,d=this.paramName.replace("[]","");l.append(`${d}[]`,o),typeof this.send=="function"?this.send(l,s):this.sendByXHR(l,s),this.triggerEvent("beginupload",s,{detail:n}),this.triggerEvent("beginupload",this,{detail:n})}}handleFileUpload(e){let t=this.shadowRoot?.querySelector(".filesarea");for(let r=0,o=e.length;r<o;r++){let s=e[r],n=this.validation(s),l=`file-${this.all.length}`,d={elem:this,value:0,file:s,id:l},h=this.fileTemplate.replace("{id}",l).replace("{value}","0").replace("{file-name}",s.name).replace("{size}",s.size);this.files.push(d);let b=this.files[this.files.length-1];t?.insertAdjacentHTML("afterbegin",h);let u=t?.querySelector(`#${l}`);if(b.uiElem=u,this.handleFileEvent(u),n.isValid)if(this.autoStart)this.startInProcess(b);else{b.status=i.STATUS.notStarted,u.status=i.STATUS.notStarted;let f={id:l,file:s,elem:this,size:s.size,sizeFormatted:i.formatBytes(v(s.size)),status:i.STATUS.inProcess,value:"0"};this.triggerEvent("notstartedupload",u,{detail:f}),this.triggerEvent("notstartedupload",this,{detail:f})}else b.status=i.STATUS.errored,u.error=n.error}this.setToolbar(),this.fileInput&&(this.fileInput.value="")}setToolbar(){let e=this.shadowRoot?.querySelector(".toolbararea");if(this.notStarted.length>0){if(!e){let t=document.createElement("template");t.innerHTML=this.toolbarTemplate;let r=this.shadowRoot?.querySelector(".errorarea");r&&this.container?.insertBefore(t.content.cloneNode(!0),r)}}else e?.classList.add("before-remove-transition"),this.onEvent("transitionend",e,()=>{e?.remove()})}handleSlotchangeEvent(){["text-droparea","text-droparea-with-browse","text-droparea-with-browse-link"].forEach(r=>{let o=this.shadowRoot?.querySelector(`slot[name="${r}"]`);this.onEvent("slotchange",o,()=>{this.setDropareaLabel()})});let t=this.shadowRoot?.querySelector('slot[name="xhr-headers"]');this.onEvent("slotchange",t,()=>{this.setXhrHeaders()})}handleLabelClickEvent(){let e=this.shadowRoot?.querySelector("label");this.onEvent("click",e,r=>{let o=s=>r.target?.classList?.contains(s);o("hyperlink")||o("file-input")||r.preventDefault()});let t=this.shadowRoot?.querySelector(".errorarea");this.onEvent("click",t,r=>{r.target?.getAttribute("id")==="btn-close-error"&&this.errorMessage({remove:!0})})}handleFileInputChangeEvent(){this.onEvent("change",this.fileInput,()=>{this.handleFileUpload(this.fileInput?.files)})}handleDropareaDragenterEvent(){this.onEvent("dragenter",this.droparea,e=>{e.stopPropagation(),e.preventDefault(),!this.disabled&&(this.triggerEvent("filesdragenter",this,{detail:{elem:this}}),this.droparea?.classList.add("dragenter"))})}handleDropareaDragoverEvent(){this.onEvent("dragover",this.droparea,e=>{e.stopPropagation(),e.preventDefault()})}handleDropareaDropEvent(){this.onEvent("drop",this.droparea,e=>{if(e.preventDefault(),this.disabled)return;this.droparea?.classList.remove("dragenter");let t=e.dataTransfer.files;this.triggerEvent("filesdrop",this,{detail:{elem:this,files:t}}),this.handleFileUpload(t)})}handleDocumentDragDropEvents(){["dragenter","dragover","drop"].forEach(t=>{this.onEvent(t,document,r=>{r.stopPropagation(),r.preventDefault(),r.type==="dragover"&&this.droparea?.classList.remove("dragenter")})})}handleFileEvent(e){["error","complete","abort","cancel","start","closebuttonclick","startbuttonclick"].forEach(r=>{this.onEvent(r,e,o=>{let s={node:{},idx:-1};for(let n=0;n<this.files.length;n++)e.id===this.files[n].id&&(this.files[n]={...this.files[n],...o.detail},s.node=this.files[n],s.idx=n);this.dispatchFileEvent(r,o,s.node.id,s.node.file),/closebuttonclick|abort|cancel/g.test(r)&&(e?.abortHandler(),e?.remove(),s.node.status===i.STATUS.notStarted&&this.files.splice(s.idx,1),this.setToolbar()),/startbuttonclick|start/g.test(r)&&(this.startInProcess(s.node),this.setToolbar()),r==="error"&&this.setToolbar()})})}handleToolbarEvents(){this.onEvent("selected",this.container,e=>{let t=o=>{this.notStarted.forEach(s=>s.uiElem[o]())},r=e?.detail?.elem?.getAttribute("id");r==="btn-start-all"&&t("start"),r==="btn-cancel-all"&&t("cancel")})}#e(){this.handleSlotchangeEvent(),this.handleLabelClickEvent(),this.handleFileInputChangeEvent(),this.handleDropareaDragenterEvent(),this.handleDropareaDragoverEvent(),this.handleDropareaDropEvent(),this.handleDocumentDragDropEvents(),this.handleToolbarEvents()}get all(){return this.files}get notStarted(){return this.statusFiles(i.STATUS.notStarted)}get inProcess(){return this.statusFiles(i.STATUS.inProcess)}get aborted(){return this.statusFiles(i.STATUS.aborted)}get errored(){return this.statusFiles(i.STATUS.errored)}get completed(){return this.statusFiles(i.STATUS.completed)}get fileSlotsTemplate(){let e=["text-btn-cancel","text-btn-close-error","text-btn-remove","error-accept-file-type","error-max-files-in-process","error-max-file-size","error-url"],t="";return e.forEach(r=>{t+=`<span slot="${r}">${i.slotVal(this.shadowRoot,r)}</span>`}),t+=`<span slot="error-max-files">${this.errorMaxFilesVal}</span>`,t}get fileTemplate(){return`
      <ids-upload-advanced-file id="{id}" value="{value}" file-name="{file-name}" size="{size}">
      ${this.fileSlotsTemplate}
      </ids-upload-advanced-file>
    `}get toolbarTemplate(){let e={start:i.slotVal(this.shadowRoot,"text-btn-start-all"),cancel:i.slotVal(this.shadowRoot,"text-btn-cancel-all")};return`
      <div class="toolbararea" part="toolbararea">
        <ids-toolbar>
          <ids-toolbar-section type="buttonset" align="end">
            <ids-button id="btn-cancel-all" part="btn-cancel-all" role="button" no-padding>
              <span>${e.cancel}</span>
            </ids-button>
            <ids-button id="btn-start-all" part="btn-start-all" role="button" no-padding>
              <span>${e.start}</span>
            </ids-button>
          </ids-toolbar-section>
        </ids-toolbar>
      </div>
    `}get errorMaxFilesVal(){return i.slotVal(this.shadowRoot,"error-max-files").replace("{maxFiles}",this.maxFiles.toString())}get showBrowseLinkVal(){return this.showBrowseLink===null?i.DEFAULTS.showBrowseLink:c(this.showBrowseLink)}set accept(e){e?(this.setAttribute(a.ACCEPT,e.toString()),this.fileInput?.setAttribute(a.ACCEPT,e.toString())):(this.removeAttribute(a.ACCEPT),this.fileInput?.removeAttribute(a.ACCEPT))}get accept(){return this.getAttribute(a.ACCEPT)}set autoStart(e){typeof e=="boolean"||typeof e=="string"?this.setAttribute(a.AUTO_START,e.toString()):this.removeAttribute(a.AUTO_START)}get autoStart(){let e=this.getAttribute(a.AUTO_START);return e!==null?c(e):i.DEFAULTS.autoStart}set disabled(e){let t=c(e);t?this.setAttribute(a.DISABLED,t.toString()):this.removeAttribute(a.DISABLED),this.setDisabled()}get disabled(){return this.getAttribute(a.DISABLED)}set icon(e){let t=this.shadowRoot?.querySelector(".icon");e?(this.setAttribute(a.ICON,e.toString()),t?.setAttribute(a.ICON,e.toString())):(this.removeAttribute(a.ICON),t?.setAttribute(a.ICON,i.DEFAULTS.icon))}get icon(){return this.getAttribute(a.ICON)||i.DEFAULTS.icon}set iconSize(e){let t=this.shadowRoot?.querySelector(".icon");e?(this.setAttribute(a.ICON_SIZE,e.toString()),t?.setAttribute(a.SIZE,e.toString())):(this.removeAttribute(a.ICON_SIZE),t?.removeAttribute(a.SIZE))}get iconSize(){return this.getAttribute(a.ICON_SIZE)}set maxFileSize(e){e?this.setAttribute(a.MAX_FILE_SIZE,e.toString()):this.removeAttribute(a.MAX_FILE_SIZE)}get maxFileSize(){return this.getAttribute(a.MAX_FILE_SIZE)||i.DEFAULTS.maxFileSize}set maxFiles(e){e?this.setAttribute(a.MAX_FILES,e.toString()):this.removeAttribute(a.MAX_FILES)}get maxFiles(){return this.getAttribute(a.MAX_FILES)||i.DEFAULTS.maxFiles}set maxFilesInProcess(e){e?this.setAttribute(a.MAX_FILES_IN_PROCESS,e.toString()):this.removeAttribute(a.MAX_FILES_IN_PROCESS)}get maxFilesInProcess(){return this.getAttribute(a.MAX_FILES_IN_PROCESS)||i.DEFAULTS.maxFilesInProcess}set method(e){e?this.setAttribute(a.METHOD,e.toString()):this.removeAttribute(a.METHOD)}get method(){return this.getAttribute(a.METHOD)||i.DEFAULTS.method}set paramName(e){e?this.setAttribute(a.PARAM_NAME,e.toString()):this.removeAttribute(a.PARAM_NAME)}get paramName(){return this.getAttribute(a.PARAM_NAME)||i.DEFAULTS.paramName}set showBrowseLink(e){e?this.setAttribute(a.SHOW_BROWSE_LINK,e.toString()):this.removeAttribute(a.SHOW_BROWSE_LINK),this.setDropareaLabel()}get showBrowseLink(){return this.getAttribute(a.SHOW_BROWSE_LINK)}set url(e){e?this.setAttribute(a.URL,e.toString()):this.removeAttribute(a.URL)}get url(){return this.getAttribute(a.URL)}};p=g([m("ids-upload-advanced"),S(y)],p);export{p as a};
