import{a as i}from"./ids-chunk-5YNJJUQD.js";import{d as E}from"./ids-chunk-ODGLGMPF.js";import{a as g}from"./ids-chunk-N7RNTKMO.js";import{a as b}from"./ids-chunk-AKCO43TX.js";import{a as h,b as u}from"./ids-chunk-XE4WFW5M.js";import{a as p}from"./ids-chunk-GFV2Z7F5.js";import{e as r}from"./ids-chunk-QPDOZZIG.js";import{a as t}from"./ids-chunk-EQJWBFQ2.js";import{a as c}from"./ids-chunk-U7OOVFXE.js";var m=`
/* Ids Tree Node Component */
@keyframes keyframes-rotate-forward {
  0% {
    transform: rotate(-90deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
@keyframes keyframes-rotate-backward {
  0% {
    transform: rotate(45deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
.ids-tree-node {
  list-style-type: none;
  margin-bottom: var(--ids-space-10);
}
.ids-tree-node .node-container {
  border: 1px solid transparent;
  cursor: pointer;
  display: inline-flex;
  padding: var(--ids-space-30);
  color: var(--ids-tree-node-color-text-default);
  align-items: baseline;
  border-radius: var(--ids-border-radius-01);
  transition: background-color var(--ids-motion-duration) var(--ids-motion-ease), opacity var(--ids-motion-duration) var(--ids-motion-ease);
}
.ids-tree-node .node-container .icon,
.ids-tree-node .node-container .toggle-icon {
  padding-top: var(--ids-space-10);
  flex: 0 0 auto;
  margin-inline-end: 8px;
  transition: fill var(--ids-motion-duration) var(--ids-motion-ease);
  place-self: flex-start;
}
.ids-tree-node .node-container .toggle-icon.rotate-forward {
  animation-duration: 0.2s;
  animation-iteration-count: 1;
  animation-name: keyframes-rotate-forward;
}
.ids-tree-node .node-container .toggle-icon.rotate-backward {
  animation-duration: 0.2s;
  animation-iteration-count: 1;
  animation-name: keyframes-rotate-backward;
}
.ids-tree-node .node-container .text {
  border-bottom: 1px solid transparent;
  flex-grow: 1;
  margin-inline-end: 2px;
  transition: border var(--ids-motion-duration) var(--ids-motion-ease), color var(--ids-motion-duration) var(--ids-motion-ease);
}
.ids-tree-node .node-container:hover, .ids-tree-node .node-container:active {
  color: var(--ids-tree-node-color-text-hover);
}
.ids-tree-node .node-container:hover .text, .ids-tree-node .node-container:active .text {
  border-color: var(--ids-tree-node-color-border-hover);
}
.ids-tree-node .node-container:focus {
  border-color: var(--ids-tree-node-color-border-focus);
  box-shadow: var(--ids-tree-node-shadow-focus);
  outline: none;
}
.ids-tree-node .group-nodes {
  list-style-type: none;
  overflow: hidden;
  margin-block-start: 1px;
  margin-block-end: 1px;
  padding-inline-start: 24px;
  transition: max-height 300ms cubic-bezier(0.17, 0.04, 0.03, 0.94);
}
.ids-tree-node[selected] .node-container {
  background-color: var(--ids-tree-node-color-background-selected);
  color: var(--ids-tree-node-color-text-selected);
}
.ids-tree-node[disabled] .node-container {
  color: var(--ids-tree-node-color-text-disabled);
  cursor: default;
  pointer-events: none;
  user-select: none;
}
.ids-tree-node[disabled] .node-container:hover, .ids-tree-node[disabled] .node-container:active {
  color: var(--ids-tree-node-color-text-disabled);
}
.ids-tree-node[disabled] .node-container:focus {
  border-color: transparent;
  box-shadow: none;
}
.ids-tree-node.collapsed .group-nodes {
  max-height: 0;
  visibility: hidden;
}

ids-checkbox::part(root) {
  margin-bottom: var(--ids-space-none);
}

ids-badge::part(badge) {
  border-width: 0;
  margin: 0;
  margin-inline-end: 8px;
}`;var x=g(b(p)),l=class extends x{nodeContainer=null;groupNodesEl=null;tree=null;isGroup=!1;constructor(){super()}connectedCallback(){super.connectedCallback(),this.nodeContainer=this.shadowRoot?.querySelector(".node-container"),this.groupNodesEl=this.shadowRoot?.querySelector(".group-nodes"),this.#r()}static get attributes(){return[...super.attributes,t.COLLAPSE_ICON,t.DISABLED,t.EXPAND_ICON,t.EXPANDED,t.ICON,t.LABEL,t.SELECTABLE,t.SELECTED,t.TABBABLE,t.USE_TOGGLE_TARGET]}template(){this.tree=this.tree||E(this,"ids-tree");let e=o=>/^ids-tree-node$/i.test(o.nodeName);if(this.isGroup=[...this.childNodes].some(o=>e(o)),this.isGroup){let o="";for(let n=0;n<this.childNodes.length;n++){let a=this.childNodes[n];e(a)&&(o+=a.outerHTML)}return this.getTemplate(!0).replace("{group-nodes}",o)}return this.getTemplate()}getTemplate(e){let o=`${this.disabled?" disabled":""}`,s=`${this.isSelected?" selected":""}`,n=` aria-disabled="${this.disabled}"`,a=` aria-selected="${this.isSelected}"`,d=` tabindex="${this.isTabbable?"0":"-1"}"`;if(e){let A=` aria-expanded="${this.expanded}"`;return`
        <li ${`class="ids-tree-node ${this.toggleClass}"`} part="group-node" role="none"${o}${s}>
          <span class="node-container" part="node-container" role="treeitem"${d}${o}${s}${n}${a}${A}>
            <ids-icon class="icon" icon="${this.nodeIcon}" part="icon"></ids-icon>
            ${this.toggleIconHtml}
            ${this.isMultiSelect?`<ids-checkbox label="${this.label}" ${o}></ids-checkbox>`:""}
            <slot name="badge" class="badge"></slot>
            <ids-text class="text" part="text" ${this.isMultiSelect?"hidden":""}>${this.label}</ids-text>
          </span>
          <ul class="group-nodes" role="group">{group-nodes}</ul>
        </li>`}return`
      <li class="ids-tree-node" part="node" role="none"${o}${s}>
        <span class="node-container" part="node-container" role="treeitem"${d}${o}${s}${n}${a}>
          <ids-icon class="icon" part="icon" icon="${this.nodeIcon}"></ids-icon>
          ${this.isMultiSelect?`<ids-checkbox label="${this.label}" ${o}></ids-checkbox>`:""}
          <slot name="badge" class="badge"></slot>
          <ids-text class="text" part="text" ${this.isMultiSelect?"hidden":""}><slot></slot></ids-text>
        </span>
      </li>`}treeAttribute(e){return this.tree?.getAttribute(e)}setFocus(){this.nodeContainer.focus()}#i(){if(this.shadowRoot?.querySelector(".icon")?.setAttribute(t.ICON,this.nodeIcon),this.container?.classList.remove(...Object.values(i.TOGGLE_CLASSES)),this.container?.classList.add(this.toggleClass),this.nodeContainer?.setAttribute("aria-expanded",this.expanded.toString()),this.useToggleTarget){let o=this.shadowRoot?.querySelector(".toggle-icon");o?.setAttribute(t.ICON,this.toggleIcon),this.#s({elem:o,rotateClass:`rotate-${this.expanded?"forward":"backward"}`})}this.groupNodesEl&&(this.expanded?(this.groupNodesEl.style.visibility="",this.groupNodesEl.style.maxHeight=`${this.groupNodesEl.scrollHeight}px`,this.offEvent("transitionend.expanded.tree",this.groupNodesEl),this.onEvent("transitionend.expanded.tree",this.groupNodesEl,()=>{this.groupNodesEl?.style.removeProperty("max-height")})):(this.offEvent("transitionend.expanded.tree",this.groupNodesEl),this.groupNodesEl.style.transition="none",this.groupNodesEl.style.maxHeight=`${this.groupNodesEl.scrollHeight}px`,this.groupNodesEl.style.transition="",requestAnimationFrame(()=>{this.groupNodesEl?.style.setProperty("max-height","0"),this.groupNodesEl?.style.setProperty("visibility","hidden")})))}#s(e){if(this.tree?.toggleIconRotate&&this.useToggleTarget&&e?.elem){e.elem.classList.add(e.rotateClass);let o=["webkitAnimationEnd","oAnimationEnd","msAnimationEnd","animationend"];o.forEach(s=>{this.onEvent(`${s}.tree`,e.elem,()=>{e.elem.classList.remove(e.rotateClass),o.forEach(n=>{this.offEvent(`${n}.tree`,e.elem)})})})}}#e(){this.shadowRoot?.querySelector(".icon")?.setAttribute(t.ICON,this.nodeIcon)}#n(){let e=this.nodeContainer?.querySelector(".toggle-icon");if(this.isGroup&&this.useToggleTarget&&!e){let o=this.shadowRoot?.querySelector("slot.badge"),s=document.createElement("template");s.innerHTML=this.toggleIconHtml,this.nodeContainer?.insertBefore(s.content.cloneNode(!0),o);return}e?.remove()}#t(){let e=this.container?.querySelector("ids-checkbox");this.selectable&&this.isSelected?(this.container?.setAttribute(t.SELECTED,""),this.nodeContainer?.setAttribute(t.SELECTED,""),this.nodeContainer?.setAttribute("aria-selected","true"),e&&(e.checked=!0)):(this.container?.removeAttribute(t.SELECTED),this.nodeContainer?.removeAttribute(t.SELECTED),this.nodeContainer?.setAttribute("aria-selected","false"),e&&(e.checked=!1))}#o(){this.nodeContainer?.setAttribute("tabindex",this.isTabbable?"0":"-1")}#r(){this.onEvent("click",this.checkbox,e=>{e.preventDefault()})}get toggleIconHtml(){return this.useToggleTarget?`<ids-icon class="toggle-icon" icon="${this.toggleIcon}" part="toggle-icon"></ids-icon>`:""}get nodeIcon(){return this.isGroup?this.expanded?this.expandIcon:this.collapseIcon:this.icon}get isSelected(){return!!this.selectable&&this.selected}get checkbox(){return this.shadowRoot?.querySelector("ids-checkbox")}get isTabbable(){return!this.disabled&&this.tabbable}get isMultiSelect(){return this.tree?.selectable==="multiple"}get toggleClass(){return this.expanded?i.TOGGLE_CLASSES.expanded:i.TOGGLE_CLASSES.collapsed}get toggleIcon(){return this.useToggleTarget?this.expanded?this.treeAttribute(t.TOGGLE_EXPAND_ICON)||i.DEFAULTS.toggleExpandIcon:this.treeAttribute(t.TOGGLE_COLLAPSE_ICON)||i.DEFAULTS.toggleCollapseIcon:""}set collapseIcon(e){e?this.setAttribute(t.COLLAPSE_ICON,e.toString()):this.removeAttribute(t.COLLAPSE_ICON),this.#e()}get collapseIcon(){return i.getVal(this,t.COLLAPSE_ICON)}set disabled(e){r(e)?(this.setAttribute(t.DISABLED,""),this.container?.setAttribute(t.DISABLED,""),this.nodeContainer?.setAttribute(t.DISABLED,""),this.nodeContainer?.setAttribute("aria-disabled","true")):(this.removeAttribute(t.DISABLED),this.container?.removeAttribute(t.DISABLED),this.nodeContainer?.removeAttribute(t.DISABLED),this.nodeContainer?.setAttribute("aria-disabled","false")),this.#o()}get disabled(){return r(this.getAttribute(t.DISABLED))}set expandIcon(e){e?this.setAttribute(t.EXPAND_ICON,e.toString()):this.removeAttribute(t.EXPAND_ICON),this.#e()}get expandIcon(){return i.getVal(this,t.EXPAND_ICON)}set expanded(e){i.isBool(e)?this.setAttribute(t.EXPANDED,`${e}`):this.removeAttribute(t.EXPANDED),this.#i()}get expanded(){return i.getBoolVal(this,t.EXPANDED)}set icon(e){e?this.setAttribute(t.ICON,e.toString()):this.removeAttribute(t.ICON),this.#e()}get icon(){return i.getVal(this,t.ICON)}set label(e){e?this.setAttribute(t.LABEL,e.toString()):this.removeAttribute(t.LABEL);let o=this.shadowRoot?.querySelector(".text");this.isGroup&&o&&(o.textContent=`${e}`)}get label(){return this.getAttribute(t.LABEL)||""}set selectable(e){let o=`${e}`;i.SELECTABLE.indexOf(o)>-1?this.setAttribute(t.SELECTABLE,o):this.removeAttribute(t.SELECTABLE),this.#t()}get selectable(){let e=this.getAttribute(t.SELECTABLE);return e==="false"?!1:e!==null?e:i.DEFAULTS.selectable}set selected(e){r(e)?this.setAttribute(t.SELECTED,""):this.removeAttribute(t.SELECTED),this.#t()}get selected(){return r(this.getAttribute(t.SELECTED))}set tabbable(e){this.setAttribute(t.TABBABLE,`${e}`.toString()),this.#o()}get tabbable(){return r(this.getAttribute(t.TABBABLE))}set useToggleTarget(e){i.isBool(e)?this.setAttribute(t.USE_TOGGLE_TARGET,`${e}`):this.removeAttribute(t.USE_TOGGLE_TARGET),this.#n()}get useToggleTarget(){return i.getBoolVal(this,t.USE_TOGGLE_TARGET)}};l=c([h("ids-tree-node"),u(m)],l);export{l as a};
