import{a as v}from"./ids-chunk-ODHPNF7J.js";import{a as I}from"./ids-chunk-YXHOBTS7.js";import{a as P}from"./ids-chunk-J3OLORFB.js";import{a as S}from"./ids-chunk-U34YTPJC.js";import{d as A}from"./ids-chunk-ODGLGMPF.js";import{a as k}from"./ids-chunk-N7RNTKMO.js";import{b,c as f,d as E,h as x,j as u}from"./ids-chunk-4W3JMIJK.js";import{a as T}from"./ids-chunk-AKCO43TX.js";import{a as D,b as w}from"./ids-chunk-XE4WFW5M.js";import{a as $}from"./ids-chunk-GFV2Z7F5.js";import{e as h}from"./ids-chunk-QPDOZZIG.js";import{a as s}from"./ids-chunk-EQJWBFQ2.js";import{a as y}from"./ids-chunk-U7OOVFXE.js";var C=`
.ids-calendar {
  display: flex;
  flex-direction: row;
  width: 100%;
}

.calendar-legend-pane,
.calendar-details-pane {
  display: none;
  width: 220px;
  height: auto;
}

.ids-calendar.show-legend .calendar-legend-pane,
.ids-calendar.show-details .calendar-details-pane {
  display: block;
}

.calendar-contents {
  flex-grow: 1;
}

.calendar-toolbar-pane {
  display: block;
  border-width: 1px 1px 0;
  border-style: solid;
  background-color: var(--ids-calendar-toolbar-color-background);
  border-color: var(--ids-calendar-toolbar-color-border);
  left: 0;
  top: 0;
  z-index: 4;
  flex-shrink: 0;
}

ids-toolbar-section::part(container),
.ids-toolbar-section {
  align-items: center;
}

.calendar-details-pane ids-accordion-header[color=azure]::part(header) {
  background-color: var(--ids-color-azure-60);
}
.calendar-details-pane ids-accordion-header[color=amber]::part(header) {
  background-color: var(--ids-color-amber-60);
}
.calendar-details-pane ids-accordion-header[color=amethyst]::part(header) {
  background-color: var(--ids-color-amethyst-60);
}
.calendar-details-pane ids-accordion-header[color=emerald]::part(header) {
  background-color: var(--ids-color-emerald-60);
}
.calendar-details-pane ids-accordion-header[color=ruby]::part(header) {
  background-color: var(--ids-color-ruby-60);
}
.calendar-details-pane ids-accordion-header[color=turquoise]::part(header) {
  background-color: var(--ids-color-turquoise-60);
}
.calendar-details-pane ids-accordion-header[color=slate]::part(header) {
  background-color: var(--ids-color-neutral-60);
}
.calendar-details-pane ids-accordion-header::part(header) {
  color: var(--ids-color-neutral-00);
}
.calendar-details-pane ids-accordion-header ids-text::part(text) {
  overflow: hidden;
  width: 150px;
  white-space: nowrap;
}
.calendar-details-pane .panel-content {
  padding-top: 15px;
  padding-bottom: 15px;
}
.calendar-details-pane .panel-content hr {
  border-bottom: none;
  margin: 20px 0;
}

ids-accordion-panel::part(content) {
  padding: 4px 0;
}

.btn-previous,
.btn-next {
  height: 36px;
}

.btn-today-text {
  color: var(--ids-color-azure-60);
}

.calendar-events-list {
  margin-top: 20px;
  padding: 0;
}
.calendar-events-list .detail-item[color=azure] {
  border-inline-start-color: var(--ids-color-azure-60);
}
.calendar-events-list .detail-item[color=amber] {
  border-inline-start-color: var(--ids-color-amber-60);
}
.calendar-events-list .detail-item[color=amethyst] {
  border-inline-start-color: var(--ids-color-amethyst-60);
}
.calendar-events-list .detail-item[color=emerald] {
  border-inline-start-color: var(--ids-color-emerald-60);
}
.calendar-events-list .detail-item[color=ruby] {
  border-inline-start-color: var(--ids-color-ruby-60);
}
.calendar-events-list .detail-item[color=turquoise] {
  border-inline-start-color: var(--ids-color-turquoise-60);
}
.calendar-events-list .detail-item[color=slate] {
  border-inline-start-color: var(--ids-color-neutral-60);
}
.calendar-events-list .detail-item {
  background-color: var(--ids-calendar-toolbar-color-background);
  border-style: solid;
  border-color: var(--ids-calendar-toolbar-color-border);
  border-width: 1px;
  border-inline-start-width: 4px;
  cursor: pointer;
  display: flex;
  flex-direction: row;
  list-style: none;
  align-items: center;
  padding: 15px;
}
.calendar-events-list .detail-item:focus {
  border-color: var(--ids-color-primary);
  outline: none;
}
.calendar-events-list .calendar-detail-content {
  flex-grow: 1;
}
.calendar-events-list .detail-item-duration {
  padding: 0 8px;
}

.event-type-label,
.event-types-legend {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

.event-types-legend {
  display: none;
  padding: 10px;
}
.event-types-legend .event-type-color[color=azure] {
  background-color: var(--ids-color-azure-60);
}
.event-types-legend .event-type-color[color=amber] {
  background-color: var(--ids-color-amber-60);
}
.event-types-legend .event-type-color[color=amethyst] {
  background-color: var(--ids-color-amethyst-60);
}
.event-types-legend .event-type-color[color=emerald] {
  background-color: var(--ids-color-emerald-60);
}
.event-types-legend .event-type-color[color=ruby] {
  background-color: var(--ids-color-ruby-60);
}
.event-types-legend .event-type-color[color=turquoise] {
  background-color: var(--ids-color-turquoise-60);
}
.event-types-legend .event-type-color[color=slate] {
  background-color: var(--ids-color-neutral-60);
}

.event-type-label {
  margin: 0 8px;
}

.event-type-color {
  display: inline-block;
  width: 12px;
  height: 12px;
  border-radius: 10px;
  margin: 0 3px;
}

.inline-container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

#event-form-popup {
  width: 320px;
}
#event-form-popup::part(popup) {
  padding-top: 0;
  padding-bottom: 0;
}

#event-form-header {
  align-items: center;
  color: var(--ids-color-neutral-10);
  height: 40px;
  padding-inline-start: 16px;
  padding-inline-end: 8px;
}
#event-form-header ids-icon[data-action=close] {
  color: var(--ids-color-neutral-10);
  padding: 5px;
  border-radius: 50%;
  cursor: pointer;
}
#event-form-header ids-icon[data-action=close]:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

#event-form {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}
#event-form #event-form-header[color=azure] {
  background-color: var(--ids-color-azure-60);
}
#event-form #event-form-header[color=amber] {
  background-color: var(--ids-color-amber-60);
}
#event-form #event-form-header[color=amethyst] {
  background-color: var(--ids-color-amethyst-60);
}
#event-form #event-form-header[color=emerald] {
  background-color: var(--ids-color-emerald-60);
}
#event-form #event-form-header[color=ruby] {
  background-color: var(--ids-color-ruby-60);
}
#event-form #event-form-header[color=turquoise] {
  background-color: var(--ids-color-turquoise-60);
}
#event-form #event-form-header[color=slate] {
  background-color: var(--ids-color-neutral-60);
}
#event-form ids-list-box {
  max-width: 278px;
}
#event-form ids-list-box-option {
  text-align: left;
}
#event-form ids-date-picker,
#event-form ids-time-picker {
  max-width: 128px;
}

#event-form-content {
  flex-grow: 1;
  box-sizing: border-box;
  padding: 12px 20px;
  position: relative;
}

#event-form-actions ids-button {
  flex-grow: 1;
  border: 1px solid var(--ids-color-neutral-40);
  border-bottom-width: 0;
}
#event-form-actions ids-button::part(button) {
  border-radius: 0;
  padding-top: 13px;
  padding-bottom: 13px;
}
#event-form-actions ids-button[data-action=close] {
  border-inline-start-width: 0;
}
#event-form-actions ids-button[data-action=submit] {
  border-inline-end-width: 0;
  margin-inline-start: -1px;
}
#event-form-actions ids-button[data-action=submit]::part(button) {
  color: var(--ids-color-azure-70);
}
#event-form-actions ids-button[data-action=submit]::part(button):hover {
  color: var(--ids-color-azure-80);
}

@media (max-width: 840px) {
  .ids-calendar {
    display: block;
  }
  .ids-calendar.show-legend .calendar-legend-pane {
    display: none;
  }
  .calendar-view-pane,
  .calendar-details-pane {
    width: 100%;
  }
  #event-form-popup {
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
  }
  #event-form-popup::part(popup) {
    height: 100%;
    width: 100%;
  }
  #event-form-content ids-date-picker,
  #event-form-content ids-time-picker {
    max-width: unset;
  }
  #event-form-content .inline-container {
    display: block;
  }
}`;var L=P(I(k(T($)))),p=class extends L{#h=parseInt(S.md);#t;#n="";constructor(){super(),this.state||(this.state={})}static get attributes(){return[...super.attributes,s.DATE,s.SHOW_DETAILS,s.SHOW_LEGEND]}set showDetails(e){if(h(e))this.setAttribute(s.SHOW_DETAILS,""),this.updateEventDetails(this.state.selected),this.container?.classList.add("show-details");else{let t=this.container?.querySelector(".calendar-details-pane");t&&(t.innerHTML=""),this.removeAttribute(s.SHOW_DETAILS),this.container?.classList.remove("show-details")}}get showDetails(){return this.hasAttribute(s.SHOW_DETAILS)}set showLegend(e){h(e)?(this.setAttribute(s.SHOW_LEGEND,""),this.renderLegend(this.eventTypesData),this.container?.classList.add("show-legend")):(this.removeAttribute(s.SHOW_LEGEND),this.querySelector("#event-types-legend")?.remove(),this.container?.classList.remove("show-legend"))}get showLegend(){return this.hasAttribute(s.SHOW_LEGEND)}get showToday(){let e=this.getAttribute(s.SHOW_TODAY);return h(e)}set showToday(e){let t=h(e);t?this.setAttribute(s.SHOW_TODAY,"true"):this.removeAttribute(s.SHOW_TODAY),this.#p(t)}#p(e){let t=this.container?.querySelector("ids-toolbar-section");e?t?.insertAdjacentHTML("beforeend",this.#s()):this.container?.querySelector(".btn-today")?.remove()}set date(e){let t=new Date(e);u(t)?(this.setAttribute(s.DATE,e.toString()),this.state.skipRender||(this.changeDate(t,this.state.view==="day"),this.updateEventDetails())):this.setAttribute(s.DATE,new Date().toString())}get date(){let e=new Date(this.getAttribute(s.DATE)||Date.now());return u(e)?e:new Date}connectedCallback(){super.connectedCallback(),this.setDirection(),this.changeView("month"),this.#m(),this.#u(),this.viewPickerConnected(),this.onLocaleChange(this.localeAPI)}disconnectedCallback(){super.disconnectedCallback?.(),this.#t&&(this.#t.disconnect(),this.#t=null)}#u(){this.#t=new ResizeObserver(e=>this.#S(e)),this.#t.observe(A(this,"ids-container"))}onEventTypesChange(e){this.renderLegend(e),this.#c(e,this.state.isMobile)}onLocaleChange=e=>{this.updateEventDetails(this.state.selected),this.renderLegend(this.eventTypesData),this.#r(e);let t=this.container?.querySelector("ids-month-view");t&&(t.locale=this.locale,t.language=this.language.name);let a=this.container?.querySelector("ids-week-view");a&&(a.locale=this.locale,a.language=this.language.name),this.container?.querySelectorAll("[translate-text]").forEach(n=>{n.language=this.language.name}),requestAnimationFrame(()=>{this.querySelectorAll("ids-checkbox[data-id]").forEach(n=>{n.setAttribute("language",this.language.name)})})};template(){return`
      <div class="ids-calendar">
        <div class="calendar-legend-pane"><slot name="legend"></slot></div>
        <div class="calendar-contents">
          <div class="calendar-toolbar-pane">${this.#v()}</div>
          <div class="calendar-view-pane"></div>
        </div>
        <div class="calendar-details-pane"></div>
      </div>
    `}detailAccordionTemplate(e){return`<ids-accordion allow-one-pane="true">${e.map((a,n)=>`
      <ids-accordion-panel expanded="${n===0}">
        <ids-accordion-header color="${a.color}" slot="header">
          <ids-text font-weight="semi-bold" overflow="ellipsis">${a.shortSubject||a.subject}</ids-text>
        </ids-accordion-header>
        <div slot="content" class="panel-content">
          ${a.status?`<ids-data-label label="${this.localeAPI.translate("Status")}">${a.status}</ids-data-label><hr>`:""}
          <ids-data-label label="${this.localeAPI.translate("Date")}">${a.dateRange}</ids-data-label><hr>
          <ids-data-label label="Event Type">${a.eventType}</ids-data-label><hr>
          <ids-data-label label="${this.localeAPI.translate("Duration")}">${a.duration}</ids-data-label>
          ${a.comments?`<hr><ids-data-label label="${this.localeAPI.translate("Comments")}">${a.comments}</ids-data-label>`:""}
        </div>
      </ids-accordion-panel>
    `).join("")}</ids-accordion>`}detailListTemplate(e){return`<ul class="calendar-events-list">${e.map(a=>`
      <li color="${a.color}" class="detail-item" tabindex="0" data-id="${a.id}">
        <div class="calendar-detail-content">
          <ids-text font-size="18" font-weight="semi-bold">${a.subject}</ids-text>
          <ids-text font-size="14">${a.dateRange}</ids-text>
          <ids-text font-size="14">${a.comments||""}${a.status?` | ${a.status}`:""}</ids-text>
        </div>
        <ids-text font-size="12" class="detail-item-duration">${a.duration}</ids-text>
        <ids-icon icon="caret-right"></ids-icon>
      </li>
    `).join("")}</ul>`}#s(){return this.showToday?`<ids-button css-class="no-padding" class="btn-today">
      <ids-text class="btn-today-text" font-size="16" translate-text="true" font-weight="semi-bold">Today</ids-text>
    </ids-button>`:""}#v(){let e=`<ids-button class="btn-previous">
      <ids-text audible="true" translate-text="true">PreviousMonth</ids-text>
      <ids-icon icon="chevron-left"></ids-icon>
    </ids-button>
    <ids-button class="btn-next">
      <ids-text audible="true" translate-text="true">NextMonth</ids-text>
      <ids-icon icon="chevron-right"></ids-icon>
    </ids-button>`,t=`<ids-button class="btn-picker" id="btn-picker" css-class="no-padding">
      <ids-text font-size="20"></ids-text>
      <ids-icon icon="calendar"></ids-icon>
    </ids-button>
    <ids-date-picker-popup
      show-today="true"
      target="#btn-picker"
      trigger-elem="#btn-picker"
      trigger-type="click"></ids-date-picker-popup>`,a=this.#s();return`
      <ids-toolbar slot="toolbar" id="calendar-toolbar" class="calendar-toolbar" tabbable="true">
        <ids-toolbar-section type="buttonset" class="toolbar-buttonset">
          ${e}
          ${t}
          ${a}
        </ids-toolbar-section>
        <ids-toolbar-section type="buttonset" align="end">
          ${this.viewPicker?this.createViewPickerTemplate("month"):""}
        </ids-toolbar-section>
      </ids-toolbar>
    `}createNewEvent(e,t=!1){let a=new Date(this.date),n=a.getFullYear(),i=a.getMonth(),r=a.getDate(),o={id:e,subject:"New Event",isAllDay:"true",starts:new Date(n,i,r,0,0,0).toISOString(),ends:new Date(n,i,r,23,59,59,999).toISOString(),type:"dto",comments:"New Event Comments"};if(t){let d=this.getView(),l=d instanceof v?d.getSelectedDay():this.container;l&&this.#i(l,o)}else this.addEvent(o)}#d(e){let t=new Date(e.starts),a=new Date(e.ends),n=this.getEventTypeById(e.type),i=this.eventTypesData.map(d=>`
      <ids-list-box-option value="${d.id}">
        <ids-text>${d.label}</ids-text>
      </ids-list-box-option>
    `).join(""),r=(d,l,c)=>`
      <ids-date-picker
        id="${d}"
        label="${this.localeAPI.translate(l)}"
        size="full"
        year="${c.getFullYear()}"
        month="${c.getMonth()}"
        day="${c.getDate()}"
        value="${this.localeAPI.formatDate(c)}"
        mask>
      </ids-date-picker>
    `,o=(d,l)=>`
      <ids-time-picker
        id="${d}"
        label="&nbsp"
        size="full"
        disabled="${h(e.isAllDay)}"
        value="${this.localeAPI.formatHour(l.getHours()+l.getMinutes()/60)}">
      </ids-time-picker>
    `;return`
      <form id="event-form" data-id="${e.id}" slot="content">
        <div id="event-form-header" class="inline-container" color="${n?.color||"azure"}">
          <ids-text font-size="16" font-weight="semi-bold">${n?.label||""}</ids-text>
          <ids-icon icon="close" data-action="close" aria-label="Close" role="button"></ids-icon>
        </div>
        <div id="event-form-content">
          <ids-input size="full" id="event-subject" type="text" label="${this.localeAPI.translate("Subject")}" value="${e.subject}"></ids-input>
          <ids-dropdown size="full" id="event-type" label="${this.localeAPI.translate("EventType")}" value="${e.type}">
            <ids-list-box>${i}</ids-list-box>
          </ids-dropdown>
          <ids-checkbox id="event-is-all-day" label="${this.localeAPI.translate("AllDay")}" checked="${e.isAllDay}"></ids-checkbox>
          <div class="inline-container">
            ${r("event-from-date","From",t)}
            ${o("event-from-hour",t)}
          </div>
          <div class="inline-container">
            ${r("event-to-date","To",a)}
            ${o("event-to-hour",a)}
          </div>
          <ids-textarea size="full" id="event-comments" label="${this.localeAPI.translate("Comments")}" autoselect="true">${e.comments||""}</ids-textarea>
        </div>
        <div id="event-form-actions" class="inline-container">
          <ids-button data-action="close" no-padding no-margins>
            <ids-text font-weight="semi-bold" translate-text="true">Cancel</ids-text>
          </ids-button>
          <ids-button data-action="submit" no-padding no-margins>
            <ids-text font-weight="semi-bold" translate-text="true">Submit</ids-text>
          </ids-button>
        </div>
      </form>
    `}#m(){let e,t=0,a;this.offEvent("dayselected.calendar-container"),this.onEvent("dayselected.calendar-container",this.container,n=>{n.stopPropagation(),clearTimeout(e),t++;let i=()=>{this.#o(n.detail.date),this.state.selected=n.detail?.events||[],this.updateEventDetails(n.detail?.events)},r=()=>{let o=Date.now().toString()+Math.floor(Math.random()*100);this.createNewEvent(o,!0)};e=setTimeout(()=>{i(),t=0},200),t===2&&n.detail.date.getTime()===a?.getTime()&&(clearTimeout(e),i(),r(),t=0),a=n.detail.date}),this.offEvent("viewchange.calendar"),this.onEvent("viewchange.calendar",this,n=>{n.stopPropagation(),this.#o(n.detail.date),this.changeView(n.detail.view),this.renderEventsData()}),this.offEvent("datechange.calendar-container"),this.onEvent("datechange.calendar-container",this.container,n=>{n.stopPropagation(),this.#o(n.detail.date),this.renderEventsData()}),this.offEvent("change.calendar-legend"),this.onEvent("change.calendar-legend",this.container?.querySelector(".calendar-legend-pane"),n=>{n.stopPropagation(),this.#a(),this.#D(n.detail.elem,n.detail.checked),this.relayCalendarData(),this.updateEventDetails(this.state.selected)}),this.offEvent("overflow-click.calendar-container"),this.onEvent("overflow-click.calendar-container",this.container,n=>{n.stopPropagation(),n.detail.date&&(this.setViewPickerValue("day"),this.updateEventDetails(this.state.selected))}),this.onEvent("click.details-item",this.container?.querySelector(".calendar-details-pane"),n=>{let i=n.target.closest(".detail-item");if(i){n.stopPropagation(),n.stopImmediatePropagation();let r=i.getAttribute("data-id"),o=this.getEventById(r);o&&(this.#n=r,this.#a(),this.container&&this.#i(this.container,o))}}),this.offEvent("click-calendar-event",this),this.onEvent("click-calendar-event",this,n=>{let i=n.detail.elem;this.#n=i.eventData.id,this.#a(),this.#i(i.container,i.eventData)}),this.viewPicker&&this.attachViewPickerEvents("month"),this.#g()}#e(){return this.container?.querySelector("#event-form-popup")}#g(){let e=this.container?.querySelector("ids-toolbar-section.toolbar-buttonset"),t=this.container?.querySelector("ids-date-picker-popup");this.offEvent("show.popup"),this.onEvent("show.popup",t,()=>{this.#r(this.localeAPI)}),this.offEvent("hide.popup"),this.onEvent("hide.popup",t,a=>{a.stopPropagation(),a.detail.doFocus&&t&&t.target?.focus()}),this.offEvent("click.month-view-buttons"),this.onEvent("click.month-view-buttons",e,a=>{a.stopPropagation();let n=a.target,i=this.container?.querySelector("ids-month-view"),r=this.container?.querySelector("ids-week-view");if(n.classList.contains("btn-previous")&&(i?.changeDate("previous-month"),r?.changeDate("previous")),n.classList.contains("btn-next")&&(i?.changeDate("next-month"),r?.changeDate("next")),n.classList.contains("btn-today")){let o=i||r;o?.changeDate("today"),o?.focus()}if(n.classList.contains("btn-apply")){let o=t?.year??null,d=t?.month??null;i&&(i.year=o,i.month=d),t&&(t.expanded=!1)}}),this.offEvent("dayselected.month-view-datepicker"),this.onEvent("dayselected.month-view-datepicker",t,a=>{a.stopPropagation();let n=a.detail.date;this.changeDate(n,this.state.view==="day")}),this.offEvent("expanded.month-view-picklist"),this.onEvent("expanded.month-view-picklist",t,a=>{let n=a.detail.expanded;this.container?.querySelector(".btn-today")?.setAttribute("hidden",n.toString()),this.container?.querySelector(".btn-apply")?.setAttribute("hidden",(!n).toString()),this.container?.querySelector(".btn-previous")?.setAttribute("hidden",n.toString()),this.container?.querySelector(".btn-next")?.setAttribute("hidden",n.toString()),n?this.container?.querySelector("td.is-selected")?.removeAttribute("tabindex"):this.container?.querySelector("td.is-selected")?.setAttribute("tabindex","0")}),this.showToday?(this.offEvent("click.week-view-today"),this.onEvent("click.week-view-today",this.container?.querySelector(".btn-today"),()=>{this.getView()?.changeDate("today")})):this.offEvent("click.week-view-today")}#b(){let e=this.#e();this.offEvent("dayselected.calendar-event-form"),this.onEvent("dayselected.calendar-event-form",e,t=>{t.stopPropagation()}),this.offEvent("click.calendar-event-form",e),this.onEvent("click.calendar-event-form",e,t=>{if(t.target&&t.target.hasAttribute("data-action")){t.stopPropagation();let a=t.target.getAttribute("data-action");if(a==="close"){this.#a();return}if(a==="submit"){let n=this.#e()?.querySelector("#event-form");this.#y(n),this.#a()}}}),this.offEvent("change.calendar-event-form",e),this.onEvent("change.calendar-event-form",e,t=>{t.stopPropagation();let a=t.detail.checked;this.#f(a)})}#i(e,t){let a=this.#e();a?a.innerHTML=`${this.#d(t)}`:this.container?.insertAdjacentHTML("beforeend",`
        <ids-popup
          id="event-form-popup"
          arrow="right"
          x="160"
          align="center"
          animated="false"
          visible="false"
          type="menu"
          position-style="absolute">
          ${this.#d(t)}
        </ids-popup>
      `),this.positionFormPopup(e),this.#b(),this.#e()?.querySelector("#event-subject")?.focus()}#f(e){let t=this.#e();t&&t.querySelectorAll("ids-time-picker").forEach(a=>{a.disabled=e})}positionFormPopup(e){let t=this.#e();t&&e&&(t.alignTarget=null,t.alignTarget=e,t.place(),t.visible=!0)}#a(){let e=this.#e();e&&(this.offEvent("click.calendar-event-form",e),e.remove())}#y(e){let t=e.getAttribute("data-id"),a=e.querySelector("#event-subject")?.value,n=e.querySelector("#event-type")?.value,i=e.querySelector("#event-is-all-day")?.checked,r=i==="true"?"true":"false",o=e.querySelector("#event-comments")?.value,d=e.querySelector("#event-from-date"),l=e.querySelector("#event-from-hour"),c=new Date(d.year,d.month,d.day,i?0:l.hours24,i?0:l.minutes,i?0:l.seconds).toISOString(),m=e.querySelector("#event-to-date"),g=e.querySelector("#event-to-hour"),M=new Date(m.year,m.month,m.day,i?23:g.hours24,i?59:g.minutes,i?59:g.seconds).toISOString(),q={id:t,subject:a,type:n,isAllDay:r,starts:c,ends:M,comments:o};this.updateEvent(q)}#D(e,t){let a=e.getAttribute("data-id"),n=this.getEventTypeById(a);n&&(n.checked=t)}changeView(e="month"){if(this.state.view===e)return;let t=e==="month"?this.#E():this.#x(e==="day");this.insertViewTemplate(t),this.relayCalendarData(),this.state.view=e}changeDate(e,t){let a=this.getView();if(!(!a||!u(e))){if(a.tagName==="IDS-MONTH-VIEW")a.setAttribute(s.YEAR,String(e.getFullYear())),a.setAttribute(s.MONTH,String(e.getMonth())),a.setAttribute(s.DAY,String(e.getDate()));else if(a.tagName==="IDS-WEEK-VIEW"){let n=t?e:b(e),i=t?e:f(e);a.setAttribute(s.START_DATE,String(n)),a.setAttribute(s.END_DATE,String(i))}}}insertViewTemplate(e){let t=this.container?.querySelector(".calendar-view-pane");t&&(t.innerHTML=e)}relayCalendarData(){let e=this.getView(),t=this.#l(this.eventsData);e?.offEvent("beforeeventrendered"),e?.onEvent("beforeeventrendered",e,a=>{this.triggerEvent("beforeeventrendered",this,{detail:a.detail})}),e?.offEvent("aftereventrendered"),e?.onEvent("aftereventrendered",e,a=>{this.triggerEvent("aftereventrendered",this,{detail:a.detail})}),e&&(e.eventsData=t,e.eventTypesData=this.eventTypesData)}#o(e){this.state.skipRender=!0,e=e||this.date;let t=`${e.getMonth()+1}/${e.getDate()}/${e.getFullYear()}`;this.setAttribute("date",t),this.#r(void 0,e),this.state.skipRender=!1}#r(e,t){let n=this.container?.querySelector(".btn-picker")?.querySelector("ids-text"),i=t||this.date,r=this.formatMonthRange(e)||null;n&&(n.textContent=r);let o=this.container?.querySelector("ids-date-picker-popup");o&&o?.updateMonthYearPickerTriggerDisplay&&(o.day=i.getDate(),o.month=i.getMonth(),o.year=i.getFullYear(),o?.updateMonthYearPickerTriggerDisplay(e,i))}#w(){let e=this.getView();return e&&e instanceof v?(this.state.selected=e.getActiveDayEvents(),this.state.selected):[]}#E(){let e=this.date;return`
      <ids-month-view
        month="${e.getMonth()}"
        day="${e.getDate()}"
        year="${e.getFullYear()}">
        <slot name="MonthViewCalendarEventTemplate" slot="customCalendarEvent"></slot>
      </ids-month-view>
    `}#x(e=!1){let t=this.date,a=e?t:b(t),n=e?t:f(t);return`
      <ids-week-view
        start-date="${a}"
        end-date="${n}"
      ></ids-week-view>
    `}#l(e){if(!this.eventTypesData?.length)return e;let t=this.eventTypesData.filter(a=>a.checked).map(a=>a.id);return e.filter(a=>t.includes(a.type))}formatDateRange(e,t){let a={dateStyle:"long",timeStyle:"short"},n=this.localeAPI.formatDate(e,a),i=this.localeAPI.formatDate(t,a);return`${n} - ${i}`.replace(/ /g," ")}formatDuration(e,t){let a=E(e,t,!0);if(a>=24){let i=Math.round(a/24),r=this.localeAPI.translate(i===1?"Day":"Days");return`${this.localeAPI.parseNumber(i.toString())} ${r}`}if(a<1){let i=e.getMinutes(),o=t.getMinutes()-i,d=this.localeAPI.translate(o===1?"Minute":"Minutes");return`${this.localeAPI.parseNumber(o.toString())} ${d}`}let n=this.localeAPI.translate(a===1?"Hour":"Hours");return`${this.localeAPI.parseNumber(a.toString())} ${n}`}#k(e){let t=new Date(e.starts),a=new Date(e.ends),n=this.getEventTypeById(e.type);return{...e,dateRange:this.formatDateRange(t,a),duration:this.formatDuration(t,a),eventType:e.type,color:n?.color||"azure"}}updateEventDetails(e){let t=this.container?.querySelector(".calendar-details-pane");if(!this.showDetails||!t)return;if(this.getView()?.tagName!=="IDS-MONTH-VIEW"){t.innerHTML="";return}e=e||this.#w()||[],e=this.#l(e);let n=e.map(i=>this.#k(i));t.innerHTML=this.state.isMobile?this.detailListTemplate(n):this.detailAccordionTemplate(n)}addEvent(e){this.eventsData=this.eventsData.concat(e),this.triggerEvent("eventadded",this,{detail:{elem:this,value:e},bubbles:!0,cancelable:!0,composed:!0})}updateEvent(e){let t=this.eventsData.slice(0),a=t.find(n=>n.id===e.id);if(a){let n=Object.assign(a,e);this.eventsData=t,this.triggerEvent("eventupdated",this,{detail:{elem:this,value:n},bubbles:!0,cancelable:!0,composed:!0})}else this.addEvent(e)}clearEvents(){this.eventsData=[],this.beforeEventsRender=null}renderLegend(e=[]){if(this.querySelector("#event-types-legend")?.remove(),!this.showLegend||!e.length||this.querySelector('[slot="legend"]'))return;let a=`
      <ids-accordion id="event-types-legend" slot="legend">
        <ids-accordion-panel expanded="true">
          <ids-accordion-header slot="header" expander-type="caret">
            <ids-text translate-text="true">Legend</ids-text>
          </ids-accordion-header>
          <div slot="content"><p>${e.map(n=>`
      <ids-checkbox
        class="event-type-checkbox"
        checked="${n.checked}"
        data-id="${n.id}"
        label="${n.translationKey?this.localeAPI.translate(n.translationKey):n.label}"
        color="${n.color}"
        disabled="${n.disabled||"false"}">
      </ids-checkbox>
    `).join("")}</p></div>
        </ids-accordion-panel>
      </ids-accordion>
    `;this.insertAdjacentHTML("afterbegin",a)}getView(){return this.container?.querySelector("ids-month-view")||this.container?.querySelector("ids-week-view")}#c(e,t){let a=this.getView();if(!(a instanceof v))return;let n=null;t&&Array.isArray(e)&&e.length&&(n=e.map(i=>({name:i.label,color:`${i.color}-60`,dayOfWeek:[],cssClass:"event-type",fontSize:14}))),a.legend=n}#S(e){let a=e[0].contentRect.width<=this.#h;this.state.isMobile!==a&&(this.state.isMobile=a,this.updateEventDetails(this.state.selected),this.#c(this.eventTypesData,a),this.positionFormPopup(this.getView()?.getEventElemById(this.#n)?.container))}get startDate(){let e=this.getView()?.startDate;if(!e){let t=this.date;return t.setDate(1),t}return e}get endDate(){let e=this.getView()?.endDate;if(!e){let t=this.date;return t.setMonth(t.getMonth()+1,0),t}return e}async renderEventsData(e=!1){if(!e&&typeof this.state.beforeEventsRender=="function"){this.eventsData=await this.state.beforeEventsRender(this.startDate,this.endDate);return}Array.isArray(this.eventsData)&&(this.relayCalendarData(),this.updateEventDetails())}formatMonthRange(e){let t=e||this.localeAPI;if(!t)return"";let a=this.startDate,n=x(this.endDate,1,"days"),i=t.formatDate(a,{month:"long"}),r=t.formatDate(n,{month:"long"}),o=t.formatDate(a,{year:"numeric"});return t.formatDate(n,{year:"numeric"})!==o?`${t.formatDate(a,{month:"short",year:"numeric"})} - ${t.formatDate(n,{month:"short",year:"numeric"})}`:r!==i?`${t.formatDate(a,{month:"short"})} - ${r} ${o}`:t.formatDate(a,{month:"long",year:"numeric"})}};p=y([D("ids-calendar"),w(C)],p);export{p as a};
