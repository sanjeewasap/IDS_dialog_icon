import{b as c,c as u,d as E}from"./ids-chunk-DXGQFMWW.js";import{a as x}from"./ids-chunk-N7RNTKMO.js";import{a as k}from"./ids-chunk-AKCO43TX.js";import{a as g,b as f}from"./ids-chunk-XE4WFW5M.js";import{a as A}from"./ids-chunk-GFV2Z7F5.js";import{e as a}from"./ids-chunk-QPDOZZIG.js";import{a as s,b as i}from"./ids-chunk-EQJWBFQ2.js";import{a as b}from"./ids-chunk-U7OOVFXE.js";var I=`
/* Ids Menu Item Component */ /**
 * Base Styles/Mixins for Ids Menu Component and all subcomponents.
 */
/**
 * Single Checkmark Mixin
 */
/**
 * Checkbox Mixins.
 */
@keyframes check {
  0% {
    height: 0;
    left: 0;
    top: 8px;
    width: 0;
  }
  50% {
    height: 0;
    left: 0;
    top: 8px;
    width: 4px;
  }
  100% {
    height: 10px;
    left: 4px;
    top: 0;
    width: 4px;
  }
}
@keyframes checkindeterminate {
  0% {
    width: 0;
  }
  100% {
    width: 10px;
  }
}
/**
 * NOTE ABOUT MENU ITEM ELEMENT ORDER:
 * Definitions for grid template size in IdsMenuItem are defined based on the below order.
 * If changes are made to IdsMenuItem's rendering, this order must remain in place.
 *
 * [checkmark?] - [icon?] - text - [shortcut text?] - [submenu icon?]
 **/
:host {
  display: block;
  position: static;
}
:host ::slotted(ids-menu) {
  display: none;
}

::slotted(ids-text) {
  pointer-events: none;
}

::slotted(ids-icon) {
  pointer-events: none;
}

::slotted(ids-popup-menu) {
  position: static;
}

:host([hidden]) {
  display: none;
}

.ids-menu-item {
  align-items: center;
  color: var(--ids-menu-item-color-text-default);
  cursor: pointer;
  font-family: var(--ids-font-family-default);
  list-style: none;
  min-width: var(--ids-menu-item-width-min);
  position: static;
  transition: background-color 50ms cubic-bezier(0.4, 0, 0.6, 1);
  user-select: none;
}
.ids-menu-item ids-icon,
.ids-menu-item .ids-icon,
.ids-menu-item .ids-menu-item-display-icon {
  display: block;
  align-self: center;
  justify-content: center;
  place-self: inherit;
}
.ids-menu-item a {
  padding-inline-start: 12px;
  padding-inline-end: 8px;
  padding-block: 8px 8px;
  display: grid;
  font-size: var(--ids-menu-item-font-size);
  grid-template-columns: 0 max-content;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  user-select: inherit;
  white-space: nowrap;
  width: calc(100% - 20px);
}
.ids-menu-item a:focus {
  outline: 0;
}
.ids-menu-item a > * {
  vertical-align: middle;
}
.ids-menu-item a .ids-menu-item-icon {
  display: flex;
  align-items: center;
  justify-content: center;
}
.ids-menu-item a ids-icon,
.ids-menu-item a .ids-icon,
.ids-menu-item a .ids-menu-item-display-icon {
  grid-column-start: 1;
}
.ids-menu-item a .ids-menu-item-text {
  grid-column-start: 2;
}
.ids-menu-item a .ids-menu-item-text span,
.ids-menu-item a .ids-menu-item-text .ids-text {
  display: inline-block;
}
.ids-menu-item a .ids-menu-item-text ::slotted(ids-text) {
  display: inline-block;
}
.ids-menu-item a .ids-menu-item-submenu-icon {
  margin-inline-start: 12px;
  grid-column-start: 3;
  transform: rotateZ(-90deg);
}
.ids-menu-item:not(.text-center) .ids-menu-item-text, .ids-menu-item:not(.text-start) .ids-menu-item-text, .ids-menu-item:not(.text-end) .ids-menu-item-text {
  text-align: start;
}
.ids-menu-item.text-center a, .ids-menu-item.text-start a, .ids-menu-item.text-end a {
  display: flex;
  align-items: center;
}
.ids-menu-item.text-center a .ids-menu-item-text, .ids-menu-item.text-start a .ids-menu-item-text, .ids-menu-item.text-end a .ids-menu-item-text {
  margin-inline-start: var(--ids-space-40);
}
.ids-menu-item.text-center a {
  text-align: center;
  justify-content: center;
}
.ids-menu-item.text-start a {
  text-align: start;
  justify-content: start;
}
.ids-menu-item.text-end a {
  text-align: end;
  justify-content: end;
}
.ids-menu-item.disabled {
  color: var(--ids-menu-item-color-text-disabled);
  cursor: default;
  pointer-events: none;
  user-select: none;
}
.ids-menu-item.disabled a {
  color: inherit;
}
.ids-menu-item.disabled ids-icon,
.ids-menu-item.disabled .ids-icon {
  fill: var(--ids-menu-item-color-text-disabled);
}
.ids-menu-item.hidden {
  display: none;
}
.ids-menu-item.highlighted {
  background-color: var(--ids-menu-item-highlight-color);
}
.ids-menu-item.has-shortcuts a {
  grid-template-columns: 0 50% 50%;
}
.ids-menu-item.has-shortcuts:not(.has-submenu) .ids-menu-item-shortcuts {
  margin-inline-start: 16px;
  margin-inline-end: 4px;
}
.ids-menu-item.has-icon a {
  padding-inline-start: 8px;
  padding-inline-end: 8px;
  grid-template-columns: 30px max-content;
}
.ids-menu-item.has-shortcuts.has-icon a {
  grid-template-columns: 30px calc(50% - 15px) calc(50% - 15px);
}
.ids-menu-item.has-checkmark a, .ids-menu-item.has-multi-checkmark a {
  padding-inline-start: 4px;
  grid-template-columns: 30px 0 max-content 0;
}
.ids-menu-item.has-checkmark a .check, .ids-menu-item.has-multi-checkmark a .check {
  grid-column-start: 1;
}
.ids-menu-item.has-checkmark a ids-icon,
.ids-menu-item.has-checkmark a .ids-icon,
.ids-menu-item.has-checkmark a .ids-menu-item-display-icon, .ids-menu-item.has-multi-checkmark a ids-icon,
.ids-menu-item.has-multi-checkmark a .ids-icon,
.ids-menu-item.has-multi-checkmark a .ids-menu-item-display-icon {
  grid-column-start: 2;
}
.ids-menu-item.has-checkmark a .ids-menu-item-text, .ids-menu-item.has-multi-checkmark a .ids-menu-item-text {
  grid-column-start: 3;
}
.ids-menu-item.has-checkmark a .ids-menu-item-submenu-icon, .ids-menu-item.has-multi-checkmark a .ids-menu-item-submenu-icon {
  grid-column-start: 4;
}
.ids-menu-item.has-shortcuts.has-checkmark a, .ids-menu-item.has-shortcuts.has-multi-checkmark a {
  grid-template-columns: 30px 0 50% calc(50% - 30px);
}
.ids-menu-item.has-submenu a {
  grid-template-columns: 0 calc(100% - 25px) 25px;
}
.ids-menu-item.has-submenu .ids-menu-item-shortcuts {
  display: none;
}
.ids-menu-item.has-icon.has-checkmark a, .ids-menu-item.has-icon.has-multi-checkmark a {
  padding-inline-start: 4px;
  grid-template-columns: 30px 30px calc(100% - 60px);
  width: calc(100% - 12px);
}
.ids-menu-item.has-shortcuts.has-icon.has-checkmark a, .ids-menu-item.has-shortcuts.has-icon.has-mutlt-checkmark a {
  grid-template-columns: 30px 30px calc(50% - 30px) calc(50% - 30px);
}
.ids-menu-item.has-icon.has-submenu a {
  grid-template-columns: 30px calc(100% - 55px) 25px;
}
.ids-menu-item.has-checkmark.has-submenu a, .ids-menu-item.has-multi-checkmark.has-submenu a {
  grid-template-columns: 30px 0 calc(100% - 55px) 25px;
}
.ids-menu-item.has-icon.has-checkmark.has-submenu a, .ids-menu-item.has-icon.has-multi-checkmark.has-submenu a {
  grid-template-columns: 30px 30px calc(100% - 85px) 25px;
}

.ids-menu-item-shortcuts {
  pointer-events: none;
  text-align: end;
}

.has-checkmark span.check {
  position: relative;
}
.has-checkmark.selected span.check::after {
  position: absolute;
  border: 1px solid;
  transform: rotate(45deg);
  border-color: var(--ids-menu-check-color-default) var(--ids-menu-check-color-default) var(--ids-menu-check-color-default) transparent;
  border-width: 0 2px 2px 0;
  content: " ";
  height: 11px;
  width: 5px;
  left: 11px;
  margin-top: 2px;
}
.has-checkmark.selected.disabled span.check::after {
  border-color: var(--ids-menu-check-color-disabled) var(--ids-menu-check-color-disabled) var(--ids-menu-check-color-disabled) transparent;
}

.has-multi-checkmark span.check {
  position: absolute;
  border: var(--ids-checkbox-border);
  border-radius: var(--ids-checkbox-border-radius);
  height: 14px;
  width: 14px;
  left: 0;
  top: 2px;
  align-self: center;
  justify-self: center;
  position: relative;
  top: 0;
}
.has-multi-checkmark.selected span.check {
  background-color: var(--ids-checkbox-color-background-selected);
  border-color: var(--ids-checkbox-color-border-selected);
}
.has-multi-checkmark.selected span.check::after {
  position: absolute;
  display: block;
  border: var(--ids-font-size-20) solid var(--ids-checkbox-color-border-selected-after);
  border-width: var(--ids-checkbox-border-width-selected-after);
  animation: check 0.15s;
  transform: rotate(45deg);
  content: "";
  height: 10px;
  left: 4px;
  top: 0;
  width: 4px;
}
.has-multi-checkmark.disabled.selected span.check {
  background-color: var(--ids-checkbox-color-background-selected-disabled);
  border-color: var(--ids-checkbox-color-border-selected-disabled);
}

.ids-menu-item[dir=rtl] a .ids-menu-item-submenu-icon {
  grid-column-start: 3;
  margin-left: 0;
  margin-right: 18px;
  transform: rotateZ(90deg);
}
.ids-menu-item[dir=rtl].has-submenu a {
  padding-right: 8px;
}`;var y=x(k(A)),d=class extends y{shouldUpdate=!0;constructor(){super(),this.state={},Object.keys(u).forEach(e=>{let t=this.getAttribute(e);this.state[e]=t||u[e]}),Object.defineProperty(this,"tabIndex",{get:()=>this.#e,set:e=>{this.#e=e},configurable:!0,enumerable:!0})}template(){let e="",t="";this.state?.disabled&&(e=" disabled",t=" disabled");let n=this.templateCheck(),r='<span class="ids-menu-item-icon" role="presentation"><slot name="icon"></slot></span>',o="";this.state?.selected&&(o=" selected");let v='<span class="ids-menu-item-shortcuts" part="shortcuts"><slot name="shortcuts"></slot></span>',m="";this.shortcutKeys&&(m=" has-shortcuts");let h="";this.submenu&&(h=" has-submenu");let l='tabindex="0"';this.state?.tabIndex&&!this.state?.disabled&&(l=` tabindex="${this.state.tabIndex}"`);let p="";return this.textAlign&&(p=` text-${this.textAlign}`),`<div role="none" part="menu-item" class="ids-menu-item${e}${o}${m}${h}${p}">
      <a role="menuitem" ${l} ${t}>
        ${n}${r}<span class="ids-menu-item-text" part="text"><slot></slot></span>${v}
      </a>
      <slot name="submenu"></slot>
    </div>`}templateCheck(){return'<span class="check" part="check" role="presentation"></span>'}templateDisplayIcon(e){let t=this.viewbox?` viewbox="${this.viewbox}"`:"";return`<ids-icon slot="icon" icon="${e}"${t} size="${c}" part="icon" class="ids-icon ids-menu-item-display-icon"></ids-icon>`}templateShortcutKeys(e){return`<span slot="shortcuts" class="shortcuts">${e}</span>`}templateSubmenuIcon(){return`<ids-icon slot="icon" icon="dropdown" size="${c}" class="ids-icon ids-menu-item-submenu-icon"></ids-icon>`}static get attributes(){return[...super.attributes,s.DISABLED,s.HIDDEN,s.HIGHLIGHTED,s.ICON,s.SELECTED,s.SHORTCUT_KEYS,s.SUBMENU,s.TARGET,s.TABINDEX,s.TEXT_ALIGN,s.TOGGLEABLE,s.VALUE,s.VIEWBOX]}connectedCallback(){this.state||(this.state={}),super.connectedCallback(),this.refresh(),this.attachEventHandlers(),this.shouldUpdate=!0}vetoableEventTypes=["beforeselected","beforedeselected"];refresh(){this.tabIndex=this.state.tabIndex,this.detectHidden(),this.detectSubmenu(),this.detectSelectability(),this.menu&&this.decorateForIcon(this.menu.hasIcons)}attachEventHandlers(){this.onEvent("slotchange",this.container,()=>{this.refresh()})}get a(){return this.shadowRoot?.querySelector("a")}get menu(){let e=this.closest("ids-toolbar-more-actions");if(e)return e.menu;let t=this.closest("ids-tab-more");return t?t.container?.querySelector("ids-popup-menu")||null:this.closest("ids-menu, ids-popup-menu")}get group(){return this.closest("ids-menu-group")}set disabled(e){let t=a(e);this.state.disabled=t;let n=this.a;if(!n)return;let r=this.shouldUpdate,o=this.hasAttribute(s.DISABLED);if(t){n.disabled=!0,n.setAttribute(s.DISABLED,""),this.tabIndex=-1,this.container?.classList.add(s.DISABLED),o||(this.shouldUpdate=!1,this.setAttribute(s.DISABLED,""),this.shouldUpdate=r);return}n.disabled=!1,n.removeAttribute(s.DISABLED),this.tabIndex=0,this.container?.classList.remove(s.DISABLED),o&&(this.shouldUpdate=!1,this.removeAttribute(s.DISABLED),this.shouldUpdate=r)}get disabled(){return this.state.disabled}onHiddenChange(e){a(e)?(this.setAttribute(s.HIDDEN,""),this.container?.classList.add(s.HIDDEN)):(this.removeAttribute(s.HIDDEN),this.container?.classList.remove(s.HIDDEN))}set highlighted(e){let t=a(e);t&&this.disabled||(t?this.setAttribute(s.HIGHLIGHTED,"true"):this.removeAttribute(s.HIGHLIGHTED),this.state.highlighted=t,this.container?.classList[t?"add":"remove"]("highlighted"))}get highlighted(){return this.state.highlighted}highlight(){this.highlighted=!0,this.triggerEvent("highlighted",this,{bubbles:!0,detail:{elem:this}})}unhighlight(){this.highlighted=!1}set icon(e){typeof e!="string"||!e.length?(this.removeAttribute(s.ICON),this.state.icon=void 0,this.removeIcon()):(this.state.icon=e,this.setAttribute(s.ICON,e),this.appendIcon(e)),this.group&&typeof this.group.updateIconAlignment=="function"&&this.group.updateIconAlignment()}get icon(){return this.iconEl?.icon}get iconEl(){return[...this.children].find(t=>t.matches("ids-icon"))}appendIcon(e){let t=this.querySelector('ids-icon[slot="icon"]');t?t.icon=e:this.insertAdjacentHTML("afterbegin",this.templateDisplayIcon(e))}removeIcon(){let e=this.querySelector('ids-icon[slot="icon"]');e&&e.remove()}decorateForIcon(e){this.container?.classList[e?"add":"remove"]("has-icon")}detectHidden(){this.hidden=this.hasAttribute("hidden")}get submenu(){return this.querySelector("ids-menu, ids-popup-menu")}get hasSubmenu(){return(this.menu?.tagName!=="IDS-MENU"||!1)&&!!this.submenu}detectSubmenu(){let e=this.hasSubmenu;return this.container?.classList[e?"add":"remove"]("has-submenu"),this.decorateSubmenu(e),e}decorateSubmenu(e){let t=this.container?.querySelector('ids-icon[icon="dropdown"]');e===!0||e==="true"?(this.submenu&&(this.submenu.setAttribute(i.SLOT,"submenu"),this.submenu.setAttribute(i.ARIA_EXPANDED,this.submenu?.visible?"true":"false")),this.a?.setAttribute(i.ROLE,"button"),this.a?.setAttribute(i.ARIA_HASPOPUP,"true"),t||this.a?.insertAdjacentHTML("beforeend",this.templateSubmenuIcon()),this.value=null):(this.submenu&&this.submenu.removeAttribute(i.ARIA_EXPANDED),this.a?.setAttribute(i.ROLE,"menuitem"),this.a?.removeAttribute(i.ARIA_HASPOPUP),t?.remove())}get isSelectable(){return this.group?.select!==null}detectSelectability(){let e=this.group?.select,t=this.container?.querySelector("span.check");this.isSelectable?(this.container?.classList.add(e==="multiple"?"has-multi-checkmark":"has-checkmark"),this.container?.classList.remove(e==="multiple"?"has-checkmark":"has-multi-checkmark"),t||this.a?.insertAdjacentHTML("afterbegin",this.templateCheck()),this.a?.setAttribute(i.ROLE,e==="multiple"?"menuitemcheckbox":"menuitemradio"),this.a?.setAttribute(i.ARIA_CHECKED,this.selected?"true":"false")):(this.container?.classList.remove("has-checkmark","has-multi-checkmark"),t?.remove(),this.a?.setAttribute(i.ROLE,this.hasSubmenu?"button":"menuitem"),this.a?.removeAttribute(i.ARIA_CHECKED))}get selected(){return this.state.selected}set selected(e){let t=a(e),n=t?"selected":"deselected",r=`before${n}`;this.triggerVetoableEvent(r)&&(this.state.selected!==t&&(this.isSelectable&&(this.state.selected=t,t?this.setAttribute(s.SELECTED,""):this.removeAttribute(s.SELECTED),this.container?.classList[t?"add":"remove"]("selected"),this.a?.setAttribute(i.ARIA_CHECKED,t?"true":"false")),(t||this.group?.select==="multiple"||this.toggleable)&&this.triggerEvent(n,this,{bubbles:!0,detail:{elem:this,value:this.value}})),this.triggerEvent("pick",this,{bubbles:!0,detail:{elem:this,value:this.value,selected:t}}))}select(){this.selected=!0}deselect(){this.selected=!1}set shortcutKeys(e){typeof e!="string"||!e.length?(this.removeAttribute(s.SHORTCUT_KEYS),this.state.shortcutKeys=void 0,this.removeShortcuts()):(this.state.shortcutKeys=e,this.setAttribute(s.SHORTCUT_KEYS,e),this.appendShortcuts(e))}get shortcutKeys(){return this.shortcutKeyEl?.textContent}get shortcutKeyEl(){return[...this.children].find(t=>t.matches('span[slot="shortcuts"]'))}appendShortcuts(e){this.container?.classList.add("has-shortcuts");let t=this.querySelector('span[slot="shortcuts"]');t?t.textContent=e:this.insertAdjacentHTML("afterbegin",this.templateShortcutKeys(e))}removeShortcuts(){this.container?.classList.remove("has-shortcuts");let e=this.querySelector('span[slot="shortcuts"]');e&&e.remove()}set#e(e){let t=Number(e);this.state||(this.state={}),this.state.tabIndex!==t&&(this.removeAttribute(s.TABINDEX),Number.isNaN(t)||t<-1?(this.state.tabIndex=0,this.a?.setAttribute(s.TABINDEX,"0")):(this.state.tabIndex=t,this.a?.setAttribute(s.TABINDEX,`${t}`)))}get#e(){return this.state?.tabIndex||0}#t=void 0;set target(e){let t=this.target;e!==t&&(e instanceof HTMLElement||e instanceof SVGElement?e.isEqualNode(t)||(this.#t=e):e==null&&(this.#t=void 0))}get target(){return this.#t}get text(){let e=t=>t.nodeType===Node.TEXT_NODE||t.name==="ids-text";return[...this.childNodes].find(t=>e(t))?.textContent?.trim()}set textAlign(e){e?this.setAttribute(s.TEXT_ALIGN,e):this.removeAttribute(s.TEXT_ALIGN)}get textAlign(){return this.getAttribute(s.TEXT_ALIGN)}set value(e){if(this.state.value=e,!E(e)){let t=this.shouldUpdate;this.shouldUpdate=!1,this.removeAttribute(s.VALUE),this.shouldUpdate=t}}get value(){return this.state.value}showSubmenu(){!this.hasSubmenu||this.hasSubmenu&&!this.submenu?.hidden||(this.a?.setAttribute(i.ARIA_EXPANDED,"true"),this.menu?.hideSubmenus(this),this.submenu?.show())}hideSubmenu(){!this.hasSubmenu||this.hasSubmenu&&this.submenu?.hidden||(this.a?.setAttribute(i.ARIA_EXPANDED,"false"),this.submenu?.hide())}focus(){!this.hidden&&!this.disabled&&(this.a?.focus(),this.menu?.highlightItem(this))}set viewbox(e){e?this.setAttribute(s.VIEWBOX,e):this.removeAttribute(s.VIEWBOX)}get viewbox(){return this.getAttribute(s.VIEWBOX)}set toggleable(e){a(e)?this.setAttribute(s.TOGGLEABLE,"true"):this.removeAttribute(s.TOGGLEABLE)}get toggleable(){return a(this.getAttribute(s.TOGGLEABLE))}};d=b([g("ids-menu-item"),f(I)],d);export{d as a};
